% \iffalse meta-comment
%
% Copyright (C) 2012 by Leo Liu <leoliu.pku@gmail.com>
% ---------------------------------------------------------------------------
% This work may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either version 1.3
% of this license or (at your option) any later version.
% The latest version of this license is in
%   http://www.latex-project.org/lppl.txt
% and version 1.3 or later is part of all distributions of LaTeX
% version 2005/12/01 or later.
%
% This work has the LPPL maintenance status `maintained'.
%
% The Current Maintainer of this work is Leo Liu.
%
% This work consists of the files zhmCJK.dtx,
%                                 zhmCJK.ins,
%                                 zhmCJK.lua,
%           and the derived files zhmCJK.sty,
%                                 zhmCJK.pdf,
%                                 zhmCJK-test.tex,
%                                 README.txt,               (from zhmCJK.dtx)
%                                 zhmCJK.map,
%                                 texfonts.map,
%                                 zhmCJK.tfm,
%                                 fallback/zhm*/zhm**.tfm.  (from zhmCJK.lua)
%
% \fi
%
% \iffalse
%
%<*internal>
\iffalse
%</internal>
%<*readme>
                          ==================
                            zhmCJK Package
                          ==================

Introduction
------------

zhmCJK is a package written to ease the complex CJK fonts setup.  All CJK
fonts may share the same .tfm metrics.  The package sets the NFSS font
definition and actual font maappings using TeX macros dynamically.  As a
result, zhmCJK provides similar faculties and interface of xeCJK, TrueType CJK
fonts are used to generate PDF output with pdfTeX or DVIPDFMx driver.

This package is licensed under LPPL.

Installation
------------

This package consists of the files zhmCJK.dtx,
                                zhmCJK.ins,
                                zhmCJK.lua,
          and the derived files zhmCJK.sty,
                                zhmCJK.pdf,
                                zhmCJK-test.tex,
                                README.txt,               (from zhmCJK.dtx)
                                zhmCJK.map,
                                texfonts.map,
                                zhmCJK.tfm,
                                fallback/zhm*/zhm**.tfm.  (from zhmCJK.lua)

* Compile zhmCJK.lua with command
    
      texlua zhmCJK.lua map

  to generate zhmCJK.map, texfonts.map, zhmCJK.tfm.

  Or, for MiKTeX only, use

      texlua zhmCJK.lua nomap

  to generate fallback/zhm*/zhm**.tfm. (32 subdirectories, 8192 TFM files)

* Compile zhmCJK.ins using an 8-bit TeX engine to obtain zhmCJK.sty,
  zhmCJK-test.tex and this README.txt file.

* Compile zhmCJK.dtx using pdflatex or latex+dvipdfmx to obtain the
  documentation zhmCJK.pdf.

* Copy the files into proper directories searched by TeX.
  TDS tree:

    TEXMF/doc/latex/zhmCJK/zhmCJK-test.tex
    TEXMF/doc/latex/zhmCJK/zhmCJK.pdf
    TEXMF/doc/latex/zhmCJK/README.txt
    TEXMF/fonts/map/fontname/texfonts.map
    TEXMF/fonts/map/fontname/zhmCJK.map
    TEXMF/fonts/tfm/zhmCJK/zhmCJK.tfm
    TEXMF/source/latex/zhmCJK/zhmCJK.dtx
    TEXMF/source/latex/zhmCJK/zhmCJK.ins
    TEXMF/source/latex/zhmCJK/zhmCJK.lua
    TEXMF/tex/latex/zhmCJK/zhmCJK.sty

  If texfonts.map already exists, merge the contents of old texfonts.map and
  the new one, or simply append this line to the old texfonts.map:

    include zhmCJK.map

  Or, for MiKTeX only, instead of copying texfonts.map, zhmCJK.map and
  zhmCJK.tfm, copy all fallback/zhm*/zhm**.tfm into:

    TEXMF/fonts/tfm/zhmCJK/fallback/zhm*/zhm**.tfm

* Run texhash to refresh file name data base.


Basic Usage
-----------

zhmCJK provides similar syntax to xeCJK, while the underlying package is CJK
under pdfTeX or DVIPDFMx engine.  A TeX source file is encoded in UTF-8 by
default.

The package provides the following commands to define a CJK font family:

    \setCJKmainfont[options]{ttf-file-name}
    \setCJKsansfont[options]{ttf-file-name}
    \setCJKmonofont[options]{ttf-file-name}
    \setCJKfamilyfont{family}[options]{ttf-file-name}

For example, this setup some Chinese fonts on MS Windows:

    \usepackage{zhmCJK}
    \setCJKmainfont[BoldFont=simhei.ttf, ItalicFont=simkai.ttf]{simsun.ttc}

You can read the PDF document (in Chinese) for more detailed explanations.

Author
------

Leo Liu

Email: leoliu.pku@gmail.com

If you are interested in the process of development you may observe

    http://code.google.com/p/leoliu-tex-pkg/


--- end of README ---
%</readme>
%<*internal>
\fi
%</internal>
%
%<*driver>
\ProvidesFile{zhmCJK.dtx}
%</driver>
%<package>\NeedsTeXFormat{LaTeX2e}[1999/12/01]
%<package>\ProvidesPackage{zhmCJK}
%<*package>
    [2012/02/06 v0.8 setup CJK fonts dynamically]
%</package>
%
%<*driver>
\documentclass[11pt,a4paper,
  driverfallback=dvipdfmx,unicode]{ltxdoc}
\usepackage[numbered]{hypdoc}
\hypersetup{pdfstartview=FitH}
\usepackage{zhmCJK}
\setCJKmainfont[BoldFont=simhei.ttf,ItalicFont=simkai.ttf]{simsun.ttc}
\setCJKsansfont{simhei.ttf}
\setCJKmonofont{simfang.ttf}
\usepackage[T1]{fontenc}
\def\MacroFont{\small\normalfont\ttfamily}
\usepackage{amsmath}
\usepackage{fancyvrb}
\fvset{gobble=2}
\usepackage{indentfirst}
\setlength\parindent{2em}
\linespread{1.2}
\renewcommand\tablename{表}
\renewcommand\refname{参考文档}
\makeatletter
\renewcommand\glossary@prologue{%
  \section*{版本历史}
  \markboth{版本历史}{版本历史}}
\renewcommand\index@prologue{%
  \section*{代码索引}
  \markboth{代码索引}{代码索引}
  斜体的数字表示对应项说明所在的页码。下划线的数字表示定义所在的代码行号；而直
  立体的数字表示对应项使用时所在的行号。}
\makeatother
\newcommand\eTeX{$\varepsilon$-\TeX}
\newcommand\pkg[1]{\textsf{#1}}
\newcommand{\enquote}[1]{``#1''}
\AtBeginDocument{
  \DeleteShortVerb{\|}
  \MakeShortVerb{\"}}
\EnableCrossrefs
\CodelineIndex
\RecordChanges
\begin{document}
  \DocInput{zhmCJK.dtx}
\end{document}
%</driver>
% \fi
%
% \CheckSum{487}
%
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
%
% \changes{v0.1}{2012/02/02}{初始版本}
% \changes{v0.2}{2012/02/02}{编写宏包文档。增加 \pkg{CJKpunct}。做一些小的代码
% 调整。}
% \changes{v0.5}{2012/02/05}{使用 Lua 脚本生成 TFM 和映射文件；为 MiKTeX 生成
% 单独的 TFM 文件。将原来的 \texttt{zhmetrics.tfm} 改名为
% \texttt{zhmCJK.tfm}，不再依赖原有的 \pkg{zhmetrics} 包。}
%
% \DoNotIndex{\newcommand,\newenvironment,
%   \@ifpackageloaded, \@ne, \@onlypreamble, \@xxxii, \advance, \aftergroup,
%   \AtBeginDocument, \AtBeginDvi, \AtBeginShipoutFirst, \AtEndDocument,
%   \AtEndOfPackage, \begin, \clearpage, \DeclareBoolOption,
%   \DeclareRobustCommand, \def, \else, \end, \endinput, \fi, \font, \ifnum,
%   \ifpdf, \let, \m@ne, \mathrm, \mathsf, \mathtt, \newcount,
%   \not@math@alphabet, \ProcessKeyvalOptions, \providecommand, \relax,
%   \RequirePackage, \scantokens, \SetupKeyvalOptions, \the, \@nameuse,
%   \csname, \define@key, \DeclareStringOption, \edef, \endcsname,
%   \expandafter, \global, \hyphenchar, \ifcsname, \ifx, \PackageError,
%   \PackageWarning, \setkeys, \space, \unless, \xdef, \begingroup, \endgroup,
%   \@namedef, \author, \bfseries, \date, \documentclass, \maketitle, \textbf,
%   \textit, \textsf, \texttt, \title, \usepackage, \@font@warning, \dimexpr,
%   \strip@pt, \textsl, \@ifnextchar, \eTeXversion, \luatexversion,
%   \XeTeXrevision, \meaning, \string, \tempa, \tempb}
%
% \GetFileInfo{zhmCJK.dtx}
% \title{\pkg{zhmCJK} 宏包}
% \author{\textit{刘海洋} \\ \nolinkurl{leoliu.pku@gmail.com}}
% \date{\filedate\ \fileversion}
%
% \maketitle
%
% \section{简介}
%
% \pkg{zhmCJK} 宏包是一个基于 \pkg{zhmetrics} 机制 \cite{Wang2009} 和
% \pkg{CJK} 宏包 \cite{Lemberg2008} 的 CJK 文字配置宏包。宏包的名称
% \pkg{zhmCJK} 就取自 \pkg{zhmetrics} 和 \pkg{CJK} 这两个包。它可以动态地设置
% CJK 字体，仅指定字体文件名，就完成原来十分复杂的 CJK 字体安装设置工作。
%
% \pkg{zhmCJK} 提供了尽可能简单的用户界面。除了提供对 \pkg{CJK} 宏包所用字体的
% 实时安装设置功能（默认 UTF-8 编码），\pkg{zhmCJK} 还同时加载了
% \pkg{CJKpunct} 和 \pkg{CJKspace} 宏包处理标点压缩和字符间距。
%
% \pkg{zhmCJK} 支持 pdf\TeX{} 和 DVIPDFMx 两种输出驱动，可以使用 "pdflatex" 或
% $"latex"+"dvipdfmx"$ 的方式编译。
%
% \section{用法}
%
% \subsection{宏包载入与选项}
%
% 只需要在导言区使用
% \begin{Verbatim}
% \usepackage{zhmCJK}
% \end{Verbatim}
% 即可载入宏包。
%
% 宏包可以带有一些选项（表~\ref{tab:pkgopt}）。例如如果要打开自动伪斜体，就可以
% 用
% \begin{Verbatim}
% \usepackage[AutoFakeSlant]{zhmCJK}
% \end{Verbatim}
% 一般来说使用默认的设置，即不用任何选项即可。
%
% \begin{table}[ht]
% \centering
% \begin{tabular}{l|l|p{12em}}
% \hline
% 选项 & 默认值 & 功能 \\
% \hline
% "encoding="\meta{编码} & "UTF8" & 设置 CJK 输入的编码，如 \texttt{GBK},
%   \texttt{Bg5} 等，参看 \cite{Lemberg2008}。 \\
% "pdffakebold="\meta{\texttt{true}$|$\texttt{false}} & "true" & 设置伪粗体类型
%   为 PDF 原语生成；若设置为 "false" 则沿用旧的 \pkg{CJK} 伪粗体机制 \\
% "AutoFakeBold="\meta{数字} & 0.4 & 全局设置自动伪粗体的粗细，单位为 bp；若设
%   置为 0 则禁用自动伪粗体。如果参数省略，取值为 0.4。 \\
% "AutoFakeSlant="\meta{数字} & 0 & 全局设置自动伪斜体的倾斜度；若设置为 0 则禁
% 用自动伪斜体。如果参数省略，取值为 0.167。 \\
% \hline
% \end{tabular}
% \caption{\pkg{zhmCJK} 宏包选项}
% \label{tab:pkgopt}
% \end{table}
%
% \subsection{宏包提供的命令}
%
% \pkg{zhmCJK} 的基本用户界面与 \pkg{xeCJK} 宏包 \cite{Sun2012} 十分相似，定义
% 字体的几个命令语法大体相同。
%
% \begin{quote}
% \DescribeMacro{\setCJKmainfont}
% "\setCJKmainfont["\meta{选项}"]{"\meta{字体文件名}"}"
% \end{quote}
% 设置正文默认罗马族的 CJK 字体，字体用 TrueType 文件名表示。该命令影响
% "\rmfamily" 和 "\textrm" 的字体。
%
% 字体选项与宏包选项基本对应，可用的字体选项有："BoldFont", "ItalicFont",
% "BoldItalicFont", "SlantedFont", "BoldSlantedFont"，分别用来设置不同字型的变
% 体；"AutoFakeBold"，设置单个字体族的伪粗体；"AutoFakeSlant"，设置单个字体族
% 的伪斜体；"encoding"，设置单个字体使用的输入编码。
%
% \DescribeMacro{\setCJKromanfont}
% 是 "\setCJKmainfont" 的别名。
%
% 例如，使用
% \begin{Verbatim}
% \setCJKmainfont[BoldFont=simhei.ttf,ItalicFont=simkai.ttf]{simsun.ttc}
% \end{Verbatim}
% 将使用文件名为 "simsun.ttc" 的字体（中易宋体）作为正文罗马族字体，同时其粗体
% 形式设置为 "simhei.ttf"（中易黑体），其斜体形式设置为 "simkai.ttf"（中易
% 楷体）。
%
% \begin{quote}
% \DescribeMacro{\setCJKsansfont}
% "\setCJKsansfont["\meta{选项}"]{"\meta{字体文件名}"}"
% \end{quote}
% 设置正文无衬线族的 CJK 字体。影响 "\sffamily" 和 "\textsf" 的字体。例如用
% \begin{Verbatim}
% \setCJKsansfont{simhei.ttf}
% \end{Verbatim}
% 将使用字体 "simhei.ttf"（中易黑体）作为正文无衬线字体。
%
% \begin{quote}
% \DescribeMacro{\setCJKmonofont}
% "\setCJKmonofont["\meta{选项}"]{"\meta{字体文件名}"}"
% \end{quote}
% 设置正文等宽族的 CJK 字体。影响 "\ttfamily" 和 "\texttt" 的字体。例如用
% \begin{Verbatim}
% \setCJKsansfont{simfang.ttf}
% \end{Verbatim}
% 将使用字体 "simfang.ttf"（中易仿宋体）作为正文等宽字体。
%
% \DescribeMacro{\setCJKfamilyfont}
% \begin{quote}
% "\setCJKfamilyfont{"\meta{族}"}["\meta{选项}"]{"\meta{字体文件名}"}"
% \end{quote}
% 定义新的 CJK 字体族并指定字体。例如用
% \begin{Verbatim}
% \setCJKfamilyfont{yahei}[BoldFont=msyhbd.ttf]{msyh.ttf}
% \end{Verbatim}
% 可以定义名为 "yahei" 的 CJK 字体族，其对应的实际字体文件名为 "msyh.ttf"（微
% 软雅黑），粗体形式是 "msyhbd.ttf"（粗体的微软雅黑）。
%
% 以上字体设置命令只能在文档导言区使用。中文字体可以用 \pkg{CJK} 宏包的
% "\CJKfamily" 命令切换。例如用 "\CJKfamily{yahei}" 就可以选择前面定义的微软雅
% 黑字体。
%
%
% \DescribeMacro{\CJKrmdefault}
% 保存 "\rmfamily" 所使用的 CJK 字体族，默认值是 "rm"。类似西文字体的
% "\rmdefault"。
%
% \DescribeMacro{\CJKsfdefault} 保存 "\sffamily" 所使用的 CJK 字体族，默认值是
% "sf"。类似西文字体的 "\sfdefault"。
%
% \DescribeMacro{\CJKttdefault}
% 保存 "\ttfamily" 所使用的 CJK 字体族，默认值是 "tt"。类似西文字体的
% "\ttdefault"。
%
% \DescribeMacro{\CJKfamilydefault}
% 保存 "\normalfont" 所使用的 CJK 字体族，默认值是 "\CJKrmdefault"。类似西文字
% 体的 "\familydefault"。例如，使用
% \begin{Verbatim}
% \renewcommand\familydefault{\sfdefault}
% \renewcommand\CJKfamilydefault{\CJKsfdefault}
% \end{Verbatim}
% 可以将全文的 CJK 和西文默认字体改为无衬线字体族。
%
% \subsection{示例文件}
%
%    \begin{macrocode}
%<*test>
% UTF-8 编码
% 使用 pdflatex 或 latex + dvipdfmx 编译
\documentclass[12pt,a4paper]{article}

\usepackage{zhmCJK}
\setCJKmainfont[BoldFont=simhei.ttf,ItalicFont=simkai.ttf]{simsun.ttc}
\setCJKsansfont[AutoFakeBold=0]{simhei.ttf}
\setCJKmonofont[AutoFakeSlant]{simfang.ttf}
\setCJKfamilyfont{xinwei}{STXINWEI.TTF}

\title{\bfseries 一个华丽的 zhmCJK 测试}
\author{Leo Liu}
\date{2012 年 2 月 6 日}

\begin{document}

\maketitle

正文是宋体字，\textbf{加粗变成黑体}，\textit{意大利体变成楷体}。

\textsf{这是黑体字，\textbf{禁用自动加粗}，\textsl{默认不自动倾斜}}

\texttt{这是仿宋字，\textbf{默认自动加粗}，\textsl{打开自动倾斜}}

{\CJKfamily{xinwei}还有华文新魏}

\end{document}
%</test>
%    \end{macrocode}
%
% \section{安装}
%
% \subsection{组成与依赖项}
%
% \pkg{zhmCJK} 源代码包包含如下文件：
% \begin{itemize}
%   \item "zhmCJK.dtx", "zhmCJK.ins"：这是 \pkg{zhmCJK} 的 \pkg{DocStrip} 包与
%   驱动。
%   \item "zhmCJK.lua"：这是用来生成 TFM 文件 \cite{Wang2009} 和字体名映射文件
%   的 Lua 脚本。
% \end{itemize}
%
% 除此以外，使用 \pkg{zhmCJK} 还依赖：
% \begin{itemize}
%   \item \pkg{CJK}, \pkg{CJKutf8}, \pkg{CJKspace} 宏包，同属于 \pkg{CJK}
%     集合。
%   \item \pkg{CJKpunct} 宏包。
%   \item \pkg{ifpdf}, \pkg{kvoptions} 宏包，同属于 \pkg{oberdiek} 集合。
% \end{itemize}
%
% 编译使用 \pkg{zhmCJK} 的文档需要 \eTeX{} 支持，并要求使用较新版本的
% pdf\TeX{} 或 DVIPDFMx 生成 PDF 文件。
%
% \subsection{生成与安装}
%
% 生成格式文件和文档：
% \begin{enumerate}
%   \item 对 \TeX\ Live 等发行版，执行
%     \begin{quote}
%       "texlua zhmCJK.lua map"
%     \end{quote}
%     生成：
%     \begin{itemize}
%       \item "zhmCJK.tfm"：通用的 CJK 字符 TFM 文件，可用于大部分常见的中文字
%       体。
%       \item "zhmCJK.map", "texfonts.map"：字体名映射文件。
%     \end{itemize}
%
%     对 MiKTeX 等发行版，执行
%     \begin{quote}
%       "texlua zhmCJK.lua nomap"
%     \end{quote}
%     生成目录 "fallback" 下的 32 个子目录 "zhm*"，每个子目录下有 256 个 TFM
%     文件 "zhm**.tfm"。共 8192 个 TFM 文件 \path{fallback/zhm*/zhm**.tfm}。
%
%   \item 执行：
%     \begin{quote}
%       "latex zhmCJK.ins"
%     \end{quote}
%     生成格式文件 "zhmCJK.sty" 和示例文件 "zhmCJK-test.tex"。
%
%   \item 执行：
%     \begin{quote}
%       "latex zhmCJK.dtx" \\
%       "makeindex -s gind zhmCJK.idx" \\
%       "makeindex -s gglo -o zhmCJK.gls zhmCJK.glo" \\
%       "latex zhmCJK.dtx" \\
%       "latex zhmCJK.dtx" \\
%       "dvipdfmx zhmCJK.dvi"
%     \end{quote}
%     生成宏包文档。编译文档可以使用 "pdflatex" 命令。编译文档需要系统安装有
%     "simsun.ttc"（宋体）和 "simkai.ttf"（楷体）两种中文 Windows 预装字体。
% \end{enumerate}
%
% 设 "TEXMF" 是 \TeX{} 系统的 TDS 根目录，按如下目录结构复制宏包的各个文件：
% \begin{Verbatim}
% TEXMF/doc/latex/zhmCJK/zhmCJK-test.tex
% TEXMF/doc/latex/zhmCJK/zhmCJK.pdf
% TEXMF/doc/latex/zhmCJK/README.txt
% TEXMF/fonts/map/fontname/texfonts.map
% TEXMF/fonts/map/fontname/zhmCJK.map
% TEXMF/fonts/tfm/zhmCJK/zhmCJK.tfm
% TEXMF/source/latex/zhmCJK/zhmCJK.dtx
% TEXMF/source/latex/zhmCJK/zhmCJK.ins
% TEXMF/source/latex/zhmCJK/zhmCJK.lua
% TEXMF/tex/latex/zhmCJK/zhmCJK.sty
% \end{Verbatim}
% 如果目录中原来已有非空的 "texfonts.map"，可以把 \pkg{zhmCJK} 所附的
% "texfonts.map" 文件内容附加在原有的 "texfonts.map" 之后。复制完所有文件后运
% 行 "texhash" 命令（可能需要管理员权限）刷新文件名数据库，宏包即可使用。
%
% 对于 MiKTeX，"texfonts.map" 和 "zhmCJK.map" 的映射机制无效，则需要复制整个
% "fallback" 目录下的所有文件：
% \begin{Verbatim}
% TEXMF/fonts/tfm/zhmCJK/fallback/zhm*/zhm**.tfm
% \end{Verbatim}
%
% 注：实际下载的安装包已经生成好上述文件和文档，可以不必手工生成。如果下载的是
% TDS 安装包，则只需按目录结构解压复制，刷新文件名数据库即可。对于 MiKTeX
% 系统，需要把打包的 TFM 文件解压出来。
%
% \subsection{字体搜索路径}
%
% \pkg{zhmCJK} 可以使用 kpathsea 库 \cite{Berry2011} 所能搜索到的 Unicode 编码
% CJK 字体，包括操作系统安装的字体。pdf\TeX{} 支持 TrueType 格式（扩展名
% ".ttf", ".ttc"），DVIPDFMx 还支持 OpenType 格式（扩展名 ".otf"）。
%
% Windows 操作系统下，MiKTeX 和 \TeX\ Live 可以不做特别的设置，即可正确搜索操
% 作系统的字体目录。
%
% 在 Linux 操作系统下，需要设置 \TeX\ Live 的 "texmf.cnf" 配置文件，在其中的
% "OSFONTDIR" 变量中增加操作系统字体目录。例如 \TeX\ Live 在目录
% \path{/usr/local/share/texlive/} 安装，则新建（或修改）文件
% \path{/usr/local/share/texlive/texmf.cnf}，在其中增加如下内容：
% \begin{Verbatim}
% OSFONTDIR = /usr/share/fonts//;~/.fonts//
% \end{Verbatim}
% 详情可参考 \TeX\ Live 手册及原有 "texmf.cnf" 文件中的相关注释说明。
%
% 可以使用 "kpsewhich" 命令检查 \pkg{zhmCJK} 能否搜索到指定的字体文件。例如在
% Windows 系统中使用命令：
% \begin{Verbatim}
% kpsewhich simsun.ttc
% \end{Verbatim}
% 应该得到输出：
% \begin{Verbatim}
% c:/Windows/fonts/simsun.ttc
% \end{Verbatim}
% 对非 Windows 系统，文件和路径区分大小写。
%
% \section{已知问题}
%
% \begin{itemize}
%  \item 受制于预定义的映射文件 "texfonts.map"，使用 \pkg{zhmCJK} 在同一文档中
%  能够使用的字体文件是有限的。目前只有 32 个。
%  \item 在 MiKTeX 中 "texfonts.map" 映射无效，无法使用单一 TFM 文件处理所有的
%  CJK 字体，因此需要生成所有对应的 TFM 文件才能使用。
% \end{itemize}
%
% \StopEventually{
% \begin{thebibliography}{9}
% \bibitem{adobe2001}
%   \textsc{{Adobe Systems Incorporated}}.
%   \newblock \textit{PDF reference: Adobe portable document format version
%   1.4}.
%   \newblock Addison-Wesley, third edition, 2001
%   \newline\url{http://www.adobe.com/devnet/pdf/pdf_reference.html}
% \bibitem{Berry2011}
%   \textsc{Karl Berry, Olaf Weber and Taco Hoekwater}.
%   \newblock \textit{Kpathsea library}, version 6.0.1, 2011
%   \newline\url{CTAN://info/doc-k/kpathsea.pdf}
% \bibitem{Cho2009}
%   \textsc{Jin-Hwan Cho}.
%   \newblock \enquote{DVI specials for PDF generation}.
%   \newblock \textit{TUGboat}, volume~30(1):pages 6--11, 2009
%   \newline\url{http://www.tug.org/TUGboat/Articles/tb30-1/tb94cho.pdf}
% \bibitem{Lemberg2008}
%   \textsc{Werner Lemberg}.
%   \newblock \textit{\pkg{CJK}}, version 4.8.2, 2008
%   \newline\url{CTAN://language/chinese/CJK/cjk-4.8.2/doc/CJK.txt}
% \bibitem{Lemberg2008fonts}
%   \textsc{Werner Lemberg}.
%   \newblock \textit{The fonts}, 2008
%   \newline\url{CTAN://language/chinese/CJK/cjk-4.8.2/doc/fonts.txt}
% \bibitem{Thanh2009}
%   \textsc{H\`an~Th\^{\'e} Th\`anh}.
%   \newblock \enquote{A closer look at TrueType fonts and pdf\TeX}.
%   \newblock \textit{TUGboat}, volume~30(1):pages 32--34, 2009
%   \newline\url{http://www.tug.org/TUGboat/Articles/tb30-1/tb94thanh.pdf}
% \bibitem{Sun2012}
%   孙文昌.
%   \newblock \textit{\pkg{xeCJK} 宏包}, 版本 2.4.5, 2012
%   \newline\url{CTAN://macros/xetex/latex/xecjk/xeCJK.pdf}
% \bibitem{Wang2009}
%   王越.
%   \newblock \textit{\pkg{CJK} 宏包中，中文字体的秘密}.
%   \newblock C\TeX{} 论坛, 2009 年 5 月
%   \newline\url{http://bbs.ctex.org/viewthread.php?tid=50078}
% \end{thebibliography}
% }
%
% \clearpage
% \section{代码实现}
%
% \subsection{字体设置包 \texttt{zhmCJK.sty}}
% 
%    \begin{macrocode}
%<*package>
%    \end{macrocode}
%
% \changes{v0.7}{2012/02/06}{宏包载入时进行编译引擎测试}
% 首先进行编译引擎测试。
%
% \begin{macro}{\ifzhm@primitive}
% 测试是否为原始控制序列，用于判断编译引擎。代码参考 \pkg{ifetex} 宏包。注意在
% 使用时总要补全 "\else\endgroup" 部分。
%    \begin{macrocode}
\def\ifzhm@primitive#1{\begingroup
  \edef\tempa{\meaning#1}%
  \edef\tempb{\string#1}%
  \ifx\tempa\tempb
  \endgroup}
%    \end{macrocode}
% \end{macro}
%
% 需要 \eTeX{} 支持。对非 \eTeX{} 引擎报错并退出宏包。
%    \begin{macrocode}
\ifzhm@primitive\eTeXversion\else\endgroup
  \PackageError{zhmCJK}%
    {You are not running an eTeX-compatible engine.
     zhmCJK needs an eTeX-compatible TeX engine}%
    {If `latex' and `pdflatex' commands fails,
     try `elatex' or `pdfelatex' command.
     If all fails, you may need to upgrade your TeX system.}
  \expandafter\endinput
\fi
%    \end{macrocode}
% 
% 不支持 Lua\TeX{}。遇到 Lua\TeX{} 引擎报错并退出宏包。
%    \begin{macrocode}
\ifzhm@primitive\luatexversion
  \PackageError{zhmCJK}%
    {You are wrongly use lualatex or dvilualatex to compile
     the file. zhmCJK do not support LuaTeX engine.}%
    {Use pdflatex or latex+dvipdfmx to compile the file.}
  \expandafter\endinput
\else\endgroup\fi
%    \end{macrocode}
% 
% 不支持 XeTeX。当发现使用 XeTeX 时报错，并载入 \pkg{xeCJK} 宏包再退出。
%    \begin{macrocode}
\ifzhm@primitive\XeTeXrevision
  \PackageError{zhmCJK}%
    {You are wrongly use xelatex to compile the file.
     zhmCJK do not support XeTeX engine.}%
    {You can use xeCJK instead.}
  \RequirePackage{xeCJK}
  \expandafter\endinput
\else\endgroup\fi
%    \end{macrocode}
%
% 载入工具宏包。
%    \begin{macrocode}
\RequirePackage{ifpdf}
\RequirePackage{kvoptions}
\SetupKeyvalOptions{
  family=zhm@opt,
  prefix=zhm@}
%    \end{macrocode}
%
% \changes{v0.8}{2012/02/06}{增加宏包 \texttt{encoding} 选项选择默认编码。}
% 定义编码选项。初始化为 "UTF8"，使用时不能省略参数。
%    \begin{macrocode}
\DeclareStringOption[UTF8]{encoding}
%    \end{macrocode}
%
% \changes{v0.3}{2012/02/02}{增加宏包 \texttt{pdffakebold} 选项}
% "pdffakebold" 选项选择是否使用 PDF 原语生成伪粗体。默认是 "true"，如果选
% "false" 则改用原来 \pkg{CJK} 宏包平移输出的伪粗体机制。
%    \begin{macrocode}
\DeclareBoolOption[true]{pdffakebold}
%    \end{macrocode}
%
% \changes{v0.4}{2012/02/04}{增加宏包 \texttt{AutoFakeBold} 选项}
% "AutoFakeBold" 选项使用 PDF 原语对 "b" 和 "bx" 系列生成伪粗体，并设置伪粗体描
% 边线宽。初始化为 0.4 (bp)，无参数缺省值为 0.4。
%    \begin{macrocode}
\DeclareStringOption[0.4]{AutoFakeBold}[0.4]
%    \end{macrocode}
%
% \changes{v0.6}{2012/02/05}{增加宏包 \texttt{AutoFakeSlant} 选项}
% "AutoFakeSlant" 使用 PDF 原语对 "sl" 形状生成伪斜体，并设置伪斜体倾斜度。初始
% 化为 0（禁用），没有参数时缺省值为 0.167。
%    \begin{macrocode}
\DeclareStringOption[0]{AutoFakeSlant}[0.167]
%    \end{macrocode}
%
% 执行选项。
%    \begin{macrocode}
\ProcessKeyvalOptions*
%    \end{macrocode}
%
%
% 载入 CJK 相关支持包。
%
% \pkg{CJK}：基本 CJK 支持。
%    \begin{macrocode}
\RequirePackage{CJK}
%    \end{macrocode}
%
% \begin{macro}{\zhm@check@encoding}
% 检查编码有效性。
%    \begin{macrocode}
\def\zhm@check@encoding{%
  \unless\ifcsname CJK@\zhm@encoding @nfssenc\endcsname
    \PackageError{zhmCJK}%
      {There is no CJK encoding `\zhm@encoding', please
      check it over. `UTF8' is used as default encoding.}%
      {You can use `UTF8', `GBK', `Bg5', `JIS', `KS', etc.
       Read CJK.txt from CJK package for all valid encodings.}
    \def\zhm@encoding{UTF8}
  \fi}
%    \end{macrocode}
% \end{macro}
% 检查全局编码。
%    \begin{macrocode}
\zhm@check@encoding
%    \end{macrocode}
%
% 如果使用 UTF8 编码，载入 \pkg{CJKutf8} 包。注意为避免与前面已经载入的
% \pkg{CJK} 发生选项冲突，在载入前模拟使用了 "encapsulated" 选项。
%    \begin{macrocode}
\begingroup
\def\zhm@UTF{UTF8}
\ifx\zhm@encoding\zhm@UTF\endgroup
  \@namedef{opt@CJK.sty}{encapsulated}
  \let\CJK@global\relax
  \let\CJK@active\relax
  \let\CJK@local\relax
  \RequirePackage{CJKutf8}
\else\endgroup\fi
%    \end{macrocode}
%
% CJK 字符与西文字符之间的空格。
%    \begin{macrocode}
\RequirePackage{CJKspace}
%    \end{macrocode}
%
% CJK 标点禁则与压缩。
%    \begin{macrocode}
\RequirePackage{CJKpunct}
%    \end{macrocode}
%
%
% \begin{macro}{\zhm@nfssenc}
% 保存当前编码对应的 NFSS 编码，如 "\zhm@encoding" 为默认值 "UTF8" 时，对应编
% 码为 "C70"。
%    \begin{macrocode}
\edef\zhm@nfssenc{\@nameuse{CJK@\zhm@encoding @nfssenc}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\zhm@sfd}
% 保存当前编码对应的 SFD（subfont definition）文件名，不包括扩展名 ".sfd"。如
% "\zhm@encodings" 为 "UTF8" 时，SFD 文件为 "Unicode.sfd"，取值 "Unicode"。
%    \begin{macrocode}
\edef\zhm@sfd{\@nameuse{zhm@\zhm@encoding @sfd}}
%    \end{macrocode}
% \end{macro}
%
% 下面定义已知的编码与 SFD 文件名对应。注意这里假定使用的都是 Unicode 内码的字
% 体，SFD 文件名以 "U" 开头。常见 \TeX{} 发行版附带的其他非 Unicode 的 SFD 文
% 件不作考虑。
%    \begin{macrocode}
\def\zhm@def@sfd#1#2{\@namedef{zhm@#1@sfd}{#2}}
\zhm@def@sfd{UTF8}{Unicode}
\zhm@def@sfd{Bg5}{UBig5}
\zhm@def@sfd{Bg5+}{UBg5plus}
\zhm@def@sfd{JIS}{UJIS}
\zhm@def@sfd{KS}{UKS}
\zhm@def@sfd{GB}{UGB}
\zhm@def@sfd{GBK}{UGBK}
%    \end{macrocode}
%
% \begin{macro}{\zhm@check@sfd}
% 检查编码对应的 SFD 文件是否支持。
%    \begin{macrocode}
\def\zhm@check@sfd{%
  \unless\ifcsname zhm@\zhm@encoding @sfd\endcsname
    \PackageError{zhmCJK}%
      {No SFD file specified for `\zhm@encoding' encoding.
       Only `UTF8', `Bg5', `Bg5+', `GB', `GBK', `JIS' and
       `KS' are supported by now.}%
      {}
    \def\zhm@sfd{Unicode}
  \fi}
\zhm@check@sfd
%    \end{macrocode}
% \end{macro}
%
% 在导言区和正文中分别开启 \pkg{CJK} 的功能。
%    \begin{macrocode}
\AtEndOfPackage{\CJK@makeActive}
\AtBeginDocument{\begin{CJK*}{\zhm@encoding}{\CJKfamilydefault}}
\AtEndDocument{\clearpage\end{CJK*}}
%    \end{macrocode}
%
% \begin{macro}{\zhm@fontnum}
% 已定义的 CJK 字体数。
%    \begin{macrocode}
\newcount\zhm@fontnum
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\zhm@pdfliteral}
% 插入 PDF 原语 \cite{Cho2009,Thanh2009}。用于实现伪斜体。
%    \begin{macrocode}
\ifpdf
  \def\zhm@pdfliteral#1{\pdfliteral{#1}}
\else
  \def\zhm@pdfliteral#1{\special{pdf:literal #1}}
\fi
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\zhm@pdfliteraldirect}
% 直接插入 PDF 原语 \cite{Cho2009,Thanh2009}。用于实现伪粗体。相比
% "\zhm@pdfliteral"，这里不用先保存 PDF 坐标等状态，生成的代码更直接。伪斜体采
% 用坐标变换实现，因此不能不保存位置直接插入。
%    \begin{macrocode}
\ifpdf
  \def\zhm@pdfliteraldirect#1{\pdfliteral direct {#1}}
\else
  \def\zhm@pdfliteraldirect#1{\special{pdf:literal direct #1}}
\fi
%    \end{macrocode}
% \end{macro}
%
% \pkg{CJK} 原始的伪粗体。
% \begin{macro}{\zhm@old@CJKbold}
%    \begin{macrocode}
\let\zhm@old@CJKbold\CJKbold
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\zhm@old@CJKnormal}
%    \begin{macrocode}
\let\zhm@old@CJKnormal\CJKnormal
%    \end{macrocode}
% \end{macro}
%
% 使用 PDF 原语生成伪粗体，参考 \cite[\S~4.3.3, \S~5.2.5]{adobe2001}。这里伪粗
% 体是通过将字体轮廓用 "AutoFakeBold" 参数指定的宽度进行描边得到的。
% \changes{v0.3}{2012/02/02}{使用 PDF 原语生成伪粗体}
% \begin{macro}{\zhm@pdf@CJKbold}
%    \begin{macrocode}
\def\zhm@pdf@CJKbold{%
  \zhm@pdfliteraldirect{2 Tr \@nameuse{zhm@\CJK@family @embolden} w}%
  \aftergroup\zhm@pdf@CJKnormal}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\zhm@pdf@CJKnormal}
%    \begin{macrocode}
\def\zhm@pdf@CJKnormal{\zhm@pdfliteraldirect{0 Tr}}
%    \end{macrocode}
% \end{macro}
%
% 根据选项选择伪粗体类型。
%    \begin{macrocode}
\ifzhm@pdffakebold
  \let\CJKbold\zhm@pdf@CJKbold
  \let\CJKnormal\zhm@pdf@CJKnormal
\fi
%    \end{macrocode}
% 当选项 "AutoFakeBold=0" 时，禁用伪粗体。
%    \begin{macrocode}
\def\zhm@zero{0}
\def\ifzhm@fakebold{\expandafter\unless\expandafter\ifx
  \csname zhm@\zhm@fam @embolden\endcsname
  \zhm@zero}
\def\zhm@fakeboldfalse{\@namedef{zhm@\zhm@fam @embolden}{0}}
%    \end{macrocode}
%
%
% 使用 PDF 原语生成伪斜体，参考 \cite[\S~4.3.3]{adobe2001}。这里伪斜体是通过局
% 部坐标变换得到的，变换公式为：
% \begin{align*}
%   \begin{pmatrix} x' \\ y' \end{pmatrix}
%   &= \begin{pmatrix} a & c \\ b & d \end{pmatrix}
%     \times \begin{pmatrix} x \\ y \end{pmatrix}
%     + \begin{pmatrix} e \\ f \end{pmatrix} \\
%   &= \begin{pmatrix} 1 & \mathit{slant} \\ 0 & 1 \end{pmatrix}
%     \times \begin{pmatrix} x \\ y \end{pmatrix}
%     + \begin{pmatrix} 0 \\ 0 \end{pmatrix} \\
%   &= \begin{pmatrix} x + \mathit{slant}\cdot y \\ y \end{pmatrix}
% \end{align*}
%
% \begin{macro}{\zhm@pdf@CJKslant}
%    \begin{macrocode}
\def\zhm@pdf@CJKslant{%
  \zhm@pdfliteral{1 0 \@nameuse{zhm@\CJK@family @slant} 1 0 0 cm}%
  \aftergroup\zhm@pdf@CJKunslant}
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\zhm@pdf@CJKunslant}
%    \begin{macrocode}
\def\zhm@pdf@CJKunslant{%
  \zhm@pdfliteral{1 0 \@nameuse{zhm@\CJK@family @negslant} 1 0 0 cm}}
%    \end{macrocode}
% \end{macro}
%
% 当选项 "AutoFakeSlant=0" 时，禁用伪斜体。
%    \begin{macrocode}
\def\ifzhm@fakeslant{\expandafter\unless\expandafter\ifx
  \csname zhm@\zhm@fam @slant\endcsname
  \zhm@zero}
\def\zhm@fakeslantfalse{%
  \@namedef{zhm@\zhm@fam @slant}{0}%
  \@namedef{zhm@\zhm@fam @negslant}{0}}
%    \end{macrocode}
%
%
% \begin{macro}{\zhm@DeclareFontShape}
% "\DeclareFontShape" 内部需要修改 "\catcode"，因此在其他宏中声明时，使用
% "\scantokens" 处理。
%    \begin{macrocode}
\def\zhm@DeclareFontShape#1#2#3#4#5#6{%
  \scantokens{\DeclareFontShape{#1}{#2}{#3}{#4}{#5}{#6}}}
%    \end{macrocode}
% \end{macro}
%
% 类似 "CJKb"，定义 "CJKsl" 尺寸函数，用于伪斜体字形声明。
%    \begin{macrocode}
\DeclareSizeFunction{CJKsl}{\CJK@empty\@font@warning}
%    \end{macrocode}
%
% \begin{macro}{\zhm@mapline}
% 添加实际字体映射行，两个参数是字体编号和字体文件名。为 pdf\TeX{} 与 DVIPDFMx
% 引擎使用不同的命令完成 \cite{Thanh2009}。
%    \begin{macrocode}
\ifpdf
  \def\zhm@mapline#1#2{%
    \pdfmapline{=zhm#1@\zhm@sfd @ <#2}}
\else
  \def\zhm@mapline#1#2{%
    \special{pdf:mapline zhm#1@\zhm@sfd @ unicode #2}}
\fi
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\zhm@setfontmap}
% 设置字体映射，两个参数是字体编号和字体文件名。字体映射需要在输出例程初始处设
% 置。如果载入了 \pkg{atbegshi} 宏包，则还要处理修改了的输出例程。这会影响
% \pkg{eso-pic} 等用户层宏包。
%    \begin{macrocode}
\def\zhm@setfontmap#1#2{%
  \AtBeginDvi{\zhm@mapline{#1}{#2}}
  \AtBeginDocument{%
    \@ifpackageloaded{atbegshi}{\AtBeginShipoutFirst{%
      \zhm@mapline{#1}{#2}}}{}}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\zhm@DeclareRealFont}
% 分配实际字体，并设置字体映射。参数是字体文件名。如果实际字体已经分配，则不改
% 变。
%    \begin{macrocode}
\def\zhm@DeclareRealFont#1{
  \unless\ifcsname zhm@#1@fontnum\endcsname
    \global\advance\zhm@fontnum\@ne
    \ifnum\zhm@fontnum>\@xxxii
      \PackageError{zhmCJK}%
        {No more CJK font families can be setup.}%
        {There are at most 32 families setup by zhmCJK.}
    \else
      \expandafter\xdef\csname zhm@#1@fontnum\endcsname{\the\zhm@fontnum}
      \zhm@setfontmap{\the\zhm@fontnum}{#1}
    \fi
  \fi
  \edef\zhm@tfm{zhm\@nameuse{zhm@#1@fontnum}}}
%    \end{macrocode}
% \end{macro}
%
% \changes{v0.8}{2012/02/06}{设置字体 \texttt{encoding} 选项。}
%    \begin{macrocode}
\define@key{zhm}{encoding}{%
  \edef\zhm@encoding{#1}%
  \zhm@check@encoding
  \edef\zhm@nfssenc{\@nameuse{CJK@\zhm@encoding @nfssenc}}%
  \edef\zhm@sfd{\@nameuse{zhm@\zhm@encoding @sfd}}%
  \zhm@check@sfd}
%    \end{macrocode}
%
% \changes{v0.4}{2012/02/04}{设置字体 \texttt{AutoFakeBold} 选项。}
% 设置字体 "AutoFakeBold" 选项。缺省值是非 0 的全局选项值，或 0.4。
%    \begin{macrocode}
\define@key{zhm}{AutoFakeBold}%
  [\ifx\zhm@AutoFakeBold\zhm@zero 0.4\else\zhm@AutoFakeBold \fi]%
  {\expandafter\xdef\csname zhm@\zhm@fam @embolden\endcsname{#1}}
%    \end{macrocode}
%
% \begin{macro}{\zhm@neg}
% 利用长度计算取负数。
%    \begin{macrocode}
\def\zhm@neg#1{\strip@pt\dimexpr-#1pt\relax}
%    \end{macrocode}
% \end{macro}
% \changes{v0.6}{2012/02/05}{增加字体 \texttt{AutoFakeSlant} 选项}
% 设置字体 "AutoFakeSlant" 选项。缺省值是非 0 的全局选项值，或 0.167。
%    \begin{macrocode}
\define@key{zhm}{AutoFakeSlant}%
  [\ifx\zhm@AutoFakeSlant\zhm@zero 0.167\else\zhm@AutoFakeSlant \fi]%
  {\expandafter\xdef\csname zhm@\zhm@fam @slant\endcsname{#1}%
   \expandafter\xdef\csname zhm@\zhm@fam @negslant\endcsname{\zhm@neg{#1}}}
%    \end{macrocode}
%
% \changes{v0.4}{2012/02/04}{设置字体 \texttt{BoldFont} 选项。}
% 设置 "BoldFont" 选项。
%    \begin{macrocode}
\define@key{zhm}{BoldFont}{
  \zhm@DeclareRealFont{#1}
  \zhm@DeclareFontShape{\zhm@nfssenc}{\zhm@fam}{b}{n}{<-> CJK * \zhm@tfm}{}
  \zhm@DeclareFontShape{\zhm@nfssenc}{\zhm@fam}{bx}{n}{<-> CJK * \zhm@tfm}{}
  \zhm@fakeboldfalse}
%    \end{macrocode}
%
% \changes{v0.4}{2012/02/04}{设置字体 \texttt{ItalicFont} 选项。}
% 设置 "ItalicFont" 选项。
%    \begin{macrocode}
\define@key{zhm}{ItalicFont}{
  \zhm@DeclareRealFont{#1}
  \zhm@DeclareFontShape{\zhm@nfssenc}{\zhm@fam}{m}{it}{<-> CJK * \zhm@tfm}{}}
%    \end{macrocode}
%
% \changes{v0.4}{2012/02/04}{设置字体 \texttt{BoldItalicFont} 选项。}
% 设置 "BoldItalicFont" 选项。
%    \begin{macrocode}
\define@key{zhm}{BoldItalicFont}{
  \zhm@DeclareRealFont{#1}
  \zhm@DeclareFontShape{\zhm@nfssenc}{\zhm@fam}{b}{it}{<-> CJK * \zhm@tfm}{}
  \zhm@DeclareFontShape{\zhm@nfssenc}{\zhm@fam}{bx}{it}%
    {<-> CJK * \zhm@tfm}{}}
%    \end{macrocode}
%
% \changes{v0.4}{2012/02/04}{设置字体 \texttt{SlantedFont} 选项。}
% 设置 "SlantedFont" 选项。
%    \begin{macrocode}
\define@key{zhm}{SlantedFont}{
  \zhm@DeclareRealFont{#1}
  \zhm@DeclareFontShape{\zhm@nfssenc}{\zhm@fam}{m}{sl}{<-> CJK * \zhm@tfm}{}
  \zhm@fakeslantfalse}
%    \end{macrocode}
%
% \changes{v0.4}{2012/02/04}{设置字体 \texttt{BoldSlantedFont} 选项。}
% 设置 "BoldSlantedFont" 选项。
%    \begin{macrocode}
\define@key{zhm}{BoldSlantedFont}{
  \zhm@DeclareRealFont{#1}
  \zhm@DeclareFontShape{\zhm@nfssenc}{\zhm@fam}{b}{sl}{<-> CJK * \zhm@tfm}{}
  \zhm@DeclareFontShape{\zhm@nfssenc}{\zhm@fam}{bx}{sl}%
    {<-> CJK * \zhm@tfm}{}}
%    \end{macrocode}
%
% \begin{macro}{\zhm@newfontfamily}
% \changes{v0.7}{2012/02/06}{更改语法，修改选项位置。}
% 设置一个 CJK 新字体族。三个参数分别为：字体族名，选项，字体文件名。
%    \begin{macrocode}
\def\zhm@newfontfamily#1[#2]#3{
  \begingroup
%    \end{macrocode}
% 警告字体族重定义
%    \begin{macrocode}
  \ifcsname zhm@#1@font\endcsname
    \PackageWarning{zhmCJK}{Redefnition of CJK family `#1'.}
  \fi
%    \end{macrocode}
% 缓存字体族名及对应主字体文件名。
%    \begin{macrocode}
  \edef\zhm@fam{#1}
  \expandafter\xdef\csname zhm@#1@font\endcsname{#3}
%    \end{macrocode}
% 检查并定义实际字体。
%    \begin{macrocode}
  \zhm@DeclareRealFont{#3}
%    \end{macrocode}
% 定义 CJK 字体族和标准字形。模拟 ".fd" 文件的定义 \cite{Lemberg2008fonts}。
%    \begin{macrocode}
  \DeclareFontFamily{\zhm@nfssenc}{\zhm@fam}{\hyphenchar\font\m@ne}
  \zhm@DeclareFontShape{\zhm@nfssenc}{\zhm@fam}{m}{n}{<-> CJK * \zhm@tfm}{}
%    \end{macrocode}
% 使全局的 "AutoFakeBold" 和 "AutoFakeSlant" 生效。
%    \begin{macrocode}
  \setkeys{zhm}{%
    AutoFakeBold=\zhm@AutoFakeBold,
    AutoFakeSlant=\zhm@AutoFakeSlant}
%    \end{macrocode}
% 按选项定义其他字形。
%    \begin{macrocode}
  \setkeys{zhm}{#2}
%    \end{macrocode}
% 按需要，定义伪粗体、伪斜体字形。
%    \begin{macrocode}
  \ifzhm@fakebold
    \zhm@DeclareRealFont{#3}
    \zhm@DeclareFontShape{\zhm@nfssenc}{\zhm@fam}{bx}{n}%
      {<-> CJKb * \zhm@tfm}{\CJKbold}
    \zhm@DeclareFontShape{\zhm@nfssenc}{\zhm@fam}{b}{n}%
      {<-> CJKb * \zhm@tfm}{\CJKbold}
  \fi
  \ifzhm@fakeslant
    \zhm@DeclareRealFont{#3}
    \zhm@DeclareFontShape{\zhm@nfssenc}{\zhm@fam}{m}{sl}%
      {<-> CJKsl * \zhm@tfm}{\zhm@pdf@CJKslant}
  \fi
  \endgroup}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\setCJKfamilyfont}
% \changes{v0.7}{2012/02/06}{修改可选参数位置，以与 \pkg{xeCJK} 包语法一致。}
% 设置一个 CJK 字体族。实际有三个参数，语法与 "\zhm@newfontfamily" 大致相同，
% 第二个参数可选。
%    \begin{macrocode}
\newcommand*\setCJKfamilyfont[1]{%
  \@ifnextchar[%]
    {\zhm@newfontfamily{#1}}%
    {\zhm@newfontfamily{#1}[]}}
\@onlypreamble\setCJKfamilyfont
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\setCJKmainfont}
% 设置 CJK 普通（罗马）字体。
%    \begin{macrocode}
\newcommand*\setCJKmainfont[2][]{%
  \zhm@newfontfamily{\CJKrmdefault}[#1]{#2}}
\@onlypreamble\setCJKmainfont
%    \end{macrocode}
% \end{macro}
% \begin{macro}{\setCJKromanfont}
% \changes{v0.3}{2012/02/02}{新增。}
% "\setCJKmainfont" 的别名。
%    \begin{macrocode}
\let\setCJKromanfont\setCJKmainfont
\@onlypreamble\setCJKromanfont
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\setCJKsansfont}
% 设置 CJK 无衬线字体。
%    \begin{macrocode}
\newcommand*\setCJKsansfont[2][]{%
  \zhm@newfontfamily{\CJKsfdefault}[#1]{#2}}
\@onlypreamble\setCJKsansfont
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\setCJKmonofont}
% 设置 CJK 等宽（打字机）字体。
%    \begin{macrocode}
\newcommand*\setCJKmonofont[2][]{%
  \zhm@newfontfamily{\CJKttdefault}[#1]{#2}}
\@onlypreamble\setCJKmonofont
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\CJKrmdefault}
% CJK 罗马体默认字体族，作用于 "\rmfamily"。
%    \begin{macrocode}
\providecommand*\CJKrmdefault{rm}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\CJKsfdefault}
% CJK 无衬线体默认字体族，作用于 "\sffamily"。
%    \begin{macrocode}
\providecommand*\CJKsfdefault{sf}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\CJKttdefault}
% CJK 打字机体默认字体族，作用于 "\ttfamily"。
%    \begin{macrocode}
\providecommand*\CJKttdefault{tt}
%    \end{macrocode}
% \end{macro}
%
%
% \begin{macro}{\CJKfamilydefault}
% CJK 默认字体族，作用于 "\normalfont"。
%    \begin{macrocode}
\providecommand*\CJKfamilydefault{\CJKrmdefault}
%    \end{macrocode}
% \end{macro}
%
% 重定义 "\normalfont", "\rmfamily", "\sffamily" 和 "\ttfamily"，使其同时设置
% CJK 字体。
%    \begin{macrocode}
\DeclareRobustCommand\normalfont
        {\CJKfamily{\CJKfamilydefault}%
         \usefont\encodingdefault
                 \familydefault
                 \seriesdefault
                 \shapedefault
         \relax}
\let\reset@font\normalfont
\DeclareRobustCommand\rmfamily
        {\not@math@alphabet\rmfamily\mathrm
         \fontfamily\rmdefault\CJKfamily{\CJKrmdefault}\selectfont}
\DeclareRobustCommand\sffamily
        {\not@math@alphabet\sffamily\mathsf
         \fontfamily\sfdefault\CJKfamily{\CJKsfdefault}\selectfont}
\DeclareRobustCommand\ttfamily
        {\not@math@alphabet\ttfamily\mathtt
         \fontfamily\ttdefault\CJKfamily{\CJKttdefault}\selectfont}
%</package>
%    \end{macrocode}
%
% \subsection{TFM 及映射文件生成脚本 \texttt{zhmCJK.lua}}
%
% 这里字体脚本的实现参考了 \pkg{zhmetrics} 项目中吴凌云\footnote{中科院应用数
% 学研究所副研究员。\nolinkurl{wulingyun@gmail.com}}、
% zwhuang\footnote{\nolinkurl{zwhuang@gmail.com}} 编写的 "zhtfm.lua" 脚本。其
% 中 TFM 生成原理参看 \cite{Wang2009}。
%
% \VerbatimInput[gobble=0,numbers=left,fontsize=\small]{zhmCJK.lua}
% \changes{v0.7}{2012/02/06}{生成 TFM 时加入版权说明。}
%
% \PrintChanges
% \PrintIndex
% \Finale
\endinput
