% \iffalse meta-comment
% !TeX program  = XeLaTeX
% !TeX encoding = UTF-8
%
% $Id$
% $URL$
%
% Copyright (C) 2003--2014
% CTEX.ORG and any individual authors listed elsewhere in this file.
% --------------------------------------------------------------------------
%
% This work may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either
% version 1.3c of this license or (at your option) any later
% version. This version of this license is in
%    http://www.latex-project.org/lppl/lppl-1-3c.txt
% and the latest version of this license is in
%    http://www.latex-project.org/lppl.txt
% and version 1.3 or later is part of all distributions of
% LaTeX version 2005/12/01 or later.
%
% This work has the LPPL maintenance status `maintained'.
%
% The Current Maintainers of this work are Leo Liu and Qing Lee.
% --------------------------------------------------------------------------
%
%<*internal>
\iffalse
%</internal>
%<*readme>
ctex is a collection of macro packages and document classes
for LaTeX Chinese typesetting.

This package is licensed in LPPL.

The authors and contributors of this package are:

    * Wu Lingyun <aloft@ctex.org>
    * Jiang Jiang <gzjjgod@gmail.com>
    * Wang Yue <yuleopen@gmail.com>
    * Liu Haiyang <leoliu.pku@gmail.com>
    * Li Yanrui <liyanrui.m2@gmail.com>
    * Chen Zhichu <zhichu.chen@gmail.com>
    * Li Qing <sobenlee@gmail.com>
    * Liam Huang <liamhuang0205@gmail.com>

If you are interested in the process of development you
may observe

    http://code.google.com/p/ctex-kit/updates/list

Report feedback in the Issues section of ctex-kit project,
or in [ctex](http://bbs.ctex.org) forum.

This package consists of the file ctex.dtx, and the derived files

    ctex.pdf,
    ctex.ins,
    ctex.sty,
    ctexcap.sty,
    ctexsize.sty,
    ctexart.cls,
    ctexbook.cls,
    ctexrep.cls,
    ctex-article.def,
    ctex-book.def,
    ctex-report.def,
    ctexcap-gbk.cfg,
    ctexcap-utf8.cfg,
    ctex.cfg,
    ctexopts.cfg,
    ctex-engine-pdftex.def,
    ctex-engine-xetex.def,
    ctex-engine-luatex.def,
    c19rm.fd,
    c19sf.fd,
    c19tt.fd,
    c70rm.fd,
    c70sf.fd,
    c70tt.fd,
    ctex-fontset-windows.def,
    ctex-fontset-adobe.def,
    ctex-fontset-fandol.def,
    ctex-fontset-mac.def,
    ctex-fontset-founder.def,
    ctex-fontset-ubuntu.def,
    zhwinfonts.tex,
    zhadobefonts.tex,
    zhfandolfonts.tex,
    zhfounderfonts.tex,
    zhubuntufonts.tex, and
    README (this file).

%</readme>
%<*internal>
\fi
\begingroup
  \edef\tempa{\fmtname}
  \edef\tempb{plain}
\expandafter\endgroup
\ifx\tempa\tempb
\csname fi\endcsname
%</internal>
%<*install>

\input l3docstrip.tex

\keepsilent
\askforoverwritefalse

\preamble

    Copyright (C) 2003-2014
    CTEX.ORG and any individual authors listed in the documentation.
--------------------------------------------------------------------------

    This work may be distributed and/or modified under the
    conditions of the LaTeX Project Public License, either
    version 1.3c of this license or (at your option) any later
    version. This version of this license is in
       http://www.latex-project.org/lppl/lppl-1-3c.txt
    and the latest version of this license is in
       http://www.latex-project.org/lppl.txt
    and version 1.3 or later is part of all distributions of
    LaTeX version 2005/12/01 or later.

    This work has the LPPL maintenance status `maintained'.

    The Current Maintainers of this work are Leo Liu and Qing Lee.
--------------------------------------------------------------------------

\endpreamble

\postamble

    This package consists of the file  ctex.dtx,
                 and the derived files ctex.pdf,
                                       ctex.ins,
                                       ctex.sty,
                                       ctexcap.sty,
                                       ctexsize.sty,
                                       ctexart.cls,
                                       ctexbook.cls,
                                       ctexrep.cls,
                                       ctex-article.def,
                                       ctex-book.def,
                                       ctex-report.def,
                                       ctexcap-gbk.cfg,
                                       ctexcap-utf8.cfg,
                                       ctex.cfg,
                                       ctexopts.cfg,
                                       ctex-engine-pdftex.def,
                                       ctex-engine-xetex.def,
                                       ctex-engine-luatex.def,
                                       c19rm.fd,
                                       c19sf.fd,
                                       c19tt.fd,
                                       c70rm.fd,
                                       c70sf.fd,
                                       c70tt.fd,
                                       ctex-fontset-windows.def,
                                       ctex-fontset-adobe.def,
                                       ctex-fontset-fandol.def,
                                       ctex-fontset-mac.def,
                                       ctex-fontset-founder.def,
                                       ctex-fontset-ubuntu.def,
                                       zhwinfonts.tex,
                                       zhadobefonts.tex,
                                       zhfandolfonts.tex,
                                       zhfounderfonts.tex,
                                       zhubuntufonts.tex, and
                                       README.
\endpostamble

\declarepostamble\emptypostamble
\endpostamble


\generate
  {
    \usedir{tex/latex/ctex}
    \file{ctex.sty}                 {\from{\jobname.dtx}{package,style}}
    \file{ctexcap.sty}              {\from{\jobname.dtx}{package,ctexcap}}
    \file{ctexsize.sty}             {\from{\jobname.dtx}{package,ctexsize}}
    \file{ctexart.cls}              {\from{\jobname.dtx}{class,article}}
    \file{ctexbook.cls}             {\from{\jobname.dtx}{class,book}}
    \file{ctexrep.cls}              {\from{\jobname.dtx}{class,report}}
    \usepostamble\emptypostamble
    \file{ctex-article.def}         {\from{\jobname.dtx}{heading,article}}
    \file{ctex-book.def}            {\from{\jobname.dtx}{heading,book}}
    \file{ctex-report.def}          {\from{\jobname.dtx}{heading,report}}
    \file{ctexcap-gbk.cfg}          {\from{\jobname.dtx}{GBK}}
    \file{ctexcap-utf8.cfg}         {\from{\jobname.dtx}{UTF8}}
    \file{ctex.cfg}                 {\from{\jobname.dtx}{config}}
    \file{ctexopts.cfg}             {\from{\jobname.dtx}{ctexopts}}
    \file{ctex-engine-pdftex.def}   {\from{\jobname.dtx}{pdftex}}
    \file{ctex-engine-xetex.def}    {\from{\jobname.dtx}{xetex}}
    \file{ctex-engine-luatex.def}   {\from{\jobname.dtx}{luatex}}
    \file{c19rm.fd}                 {\from{\jobname.dtx}{rm,c19}}
    \file{c19sf.fd}                 {\from{\jobname.dtx}{sf,c19}}
    \file{c19tt.fd}                 {\from{\jobname.dtx}{tt,c19}}
    \file{c70rm.fd}                 {\from{\jobname.dtx}{rm,c70}}
    \file{c70sf.fd}                 {\from{\jobname.dtx}{sf,c70}}
    \file{c70tt.fd}                 {\from{\jobname.dtx}{tt,c70}}
    \file{ctex-fontset-windows.def} {\from{\jobname.dtx}{fontset,windows}}
    \file{ctex-fontset-adobe.def}   {\from{\jobname.dtx}{fontset,adobe}}
    \file{ctex-fontset-fandol.def}  {\from{\jobname.dtx}{fontset,fandol}}
    \file{ctex-fontset-mac.def}     {\from{\jobname.dtx}{fontset,mac}}
    \file{ctex-fontset-founder.def} {\from{\jobname.dtx}{fontset,founder}}
    \file{ctex-fontset-ubuntu.def}  {\from{\jobname.dtx}{fontset,ubuntu}}
    \file{zhwinfonts.tex}           {\from{\jobname.dtx}{zhmap,windows}}
    \file{zhadobefonts.tex}         {\from{\jobname.dtx}{zhmap,adobe}}
    \file{zhfandolfonts.tex}        {\from{\jobname.dtx}{zhmap,fandol}}
    \file{zhfounderfonts.tex}       {\from{\jobname.dtx}{zhmap,founder}}
    \file{zhubuntufonts.tex}        {\from{\jobname.dtx}{zhmap,ubuntu}}
    \usedir{source/latex/ctex}
    \file{\jobname.ins}             {\from{\jobname.dtx}{install}}
    \nopreamble\nopostamble
    \usedir{doc/latex/ctex}
    \file{README.txt}               {\from{\jobname.dtx}{readme}}
  }

\catcode32=12\space

\Msg{*************************************************************}
\Msg{*                                                           *}
\Msg{* To finish the installation you have to move the following *}
\Msg{* file into proper directories searched by TeX:             *}
\Msg{*                                                           *}
\Msg{* The recommended directory is TDS:tex/latex/ctex           *}
\Msg{*                                                           *}
\Msg{*     ctex.sty                                              *}
\Msg{*     ctexcap.sty                                           *}
\Msg{*     ctexsize.sty                                          *}
\Msg{*     ctexart.cls                                           *}
\Msg{*     ctexbook.cls                                          *}
\Msg{*     ctexrep.cls                                           *}
\Msg{*     ctex-article.def                                      *}
\Msg{*     ctex-book.def                                         *}
\Msg{*     ctex-report.def                                       *}
\Msg{*     ctexcap-gbk.cfg                                       *}
\Msg{*     ctexcap-utf8.cfg                                      *}
\Msg{*     ctex.cfg                                              *}
\Msg{*     ctexopts.cfg                                          *}
\Msg{*     ctex-engine-pdftex.def                                *}
\Msg{*     ctex-engine-xetex.def                                 *}
\Msg{*     ctex-engine-luatex.def                                *}
\Msg{*     c19rm.fd                                              *}
\Msg{*     c19sf.fd                                              *}
\Msg{*     c19tt.fd                                              *}
\Msg{*     c70rm.fd                                              *}
\Msg{*     c70sf.fd                                              *}
\Msg{*     c70tt.fd                                              *}
\Msg{*     ctex-fontset-windows.def                              *}
\Msg{*     ctex-fontset-adobe.def                                *}
\Msg{*     ctex-fontset-fandol.def                               *}
\Msg{*     ctex-fontset-mac.def                                  *}
\Msg{*     ctex-fontset-founder.def                              *}
\Msg{*     ctex-fontset-ubuntu.def                               *}
\Msg{*     zhwinfonts.tex                                        *}
\Msg{*     zhadobefonts.tex                                      *}
\Msg{*     zhfandolfonts.tex                                     *}
\Msg{*     zhfounderfonts.tex                                    *}
\Msg{*     zhubuntufonts.tex                                     *}
\Msg{*                                                           *}
\Msg{* To produce the documentation run the file ctex.dtx        *}
\Msg{* through XeLaTeX.                                          *}
\Msg{*                                                           *}
\Msg{* Happy TeXing!                                             *}
\Msg{*                                                           *}
\Msg{*************************************************************}

\endbatchfile
%</install>
%<*internal>
\fi
%</internal>
%<*!(readme|install|zhmap)>
%<*!(c19|c70)>
%<*driver|package|class>
\NeedsTeXFormat{LaTeX2e}
\RequirePackage{expl3}
%</driver|package|class>
\GetIdInfo$Id$
%<*driver>
  {ctex source file}
\ProvidesExplFile{\ExplFileName.\ExplFileExtension}
%</driver>
%<style>  {Chinese adapter in LaTeX (CTEX)}
%<style>\ProvidesExplPackage{\ExplFileName}
%<ctexcap>  {Chinese adapter in LaTeX (CTEX)}
%<ctexcap>\ProvidesExplPackage{ctexcap}
%<ctexsize>  {Chinese font size definition (CTEX)}
%<ctexsize>\ProvidesExplPackage{ctexsize}
%<article&!heading>  {Chinese adapter for class article (CTEX)}
%<article&!heading>\ProvidesExplClass{ctexart}
%<book&!heading>  {Chinese adapter for class book (CTEX)}
%<book&!heading>\ProvidesExplClass{ctexbook}
%<report&!heading>  {Chinese adapter for class report (CTEX)}
%<report&!heading>\ProvidesExplClass{ctexrep}
%<article&heading>  {Heading modification for article (CTEX)}
%<article&heading>\ProvidesExplFile{ctex-article.def}
%<book&heading>  {Heading modification for book (CTEX)}
%<book&heading>\ProvidesExplFile{ctex-book.def}
%<report&heading>  {Heading modification for report (CTEX)}
%<report&heading>\ProvidesExplFile{ctex-report.def}
%<GBK>  {Caption with encoding GBK (CTEX)}
%<GBK>\ProvidesExplFile{ctexcap-gbk.cfg}
%<UTF8>  {Caption with encoding UTF8 (CTEX)}
%<UTF8>\ProvidesExplFile{ctexcap-utf8.cfg}
%<config>  {Configuration file (CTEX)}
%<config>\ProvidesExplFile{\ExplFileName.cfg}
%<ctexopts>  {Option configuration file (CTEX)}
%<ctexopts>\ProvidesExplFile{ctexopts.cfg}
%<pdftex>  {(pdf)LaTeX adapter (CTEX)}
%<pdftex>\ProvidesExplFile{ctex-engine-pdftex.def}
%<xetex>  {XeLaTeX adapter (CTEX)}
%<xetex>\ProvidesExplFile{ctex-engine-xetex.def}
%<luatex>  {LuaLaTeX adapter (CTEX)}
%<luatex>\ProvidesExplFile{ctex-engine-luatex.def}
%<windows>  {Windows fonts definition (CTEX)}
%<windows>\ProvidesExplFile{ctex-fontset-windows.def}
%<adobe>  {Adobe fonts definition (CTEX)}
%<adobe>\ProvidesExplFile{ctex-fontset-adobe.def}
%<fandol>  {Fandol fonts definition (CTEX)}
%<fandol>\ProvidesExplFile{ctex-fontset-fandol.def}
%<mac>  {Mac OS X fonts definition (CTEX)}
%<mac>\ProvidesExplFile{ctex-fontset-mac.def}
%<founder>  {Founder fonts definition (CTEX)}
%<founder>\ProvidesExplFile{ctex-fontset-founder.def}
%<ubuntu>  {Ubuntu fonts definition (CTEX)}
%<ubuntu>\ProvidesExplFile{ctex-fontset-ubuntu.def}
  {\ExplFileDate}{2.0}{\ExplFileDescription}
%</!(c19|c70)>
%<rm&c19>\ProvidesFile{c19rm.fd}%
%<sf&c19>\ProvidesFile{c19sf.fd}%
%<tt&c19>\ProvidesFile{c19tt.fd}%
%<rm&c70>\ProvidesFile{c70rm.fd}%
%<sf&c70>\ProvidesFile{c70sf.fd}%
%<tt&c70>\ProvidesFile{c70tt.fd}%
%<c19|c70>  [2014/03/08 v2.0 Chinese font definition (CTEX)]
%</!(readme|install|zhmap)>
%<*driver>
\ExplSyntaxOff
\let\ctexrevnum\ExplFileVersion
\expandafter\let\csname ver@thumbpdf.sty\endcsname\fmtversion
\documentclass[a4paper,full,numbered]{l3doc}
\usepackage[UTF8]{ctex}
\ctexset{
  abstractname=简介,
}
\appto\abstract{\parindent=2\ccwd} ^^A l3doc.cls 设置列表环境中 \listparindent=\z@
\usepackage[toc]{multitoc}
\usepackage{geometry}
\geometry{includemp,hmargin={0mm,15mm},vmargin=15mm,footskip=7mm}
\hypersetup{pdfstartview=FitH}
\setcounter{secnumdepth}{4}
\newcommand*\email{\nolinkurl}
\setmainfont{TeX Gyre Pagella}
\setsansfont{CMU Sans Serif}
\setmonofont[
  Mapping=,WordSpace={1,0,0}, %% 固定空格宽度
  SlantedFont=* Oblique]{CMU Typewriter Text Light}
\xeCJKsetup{PunctStyle=kaiming}
\linespread{1.2}
\AtBeginUTFCommand[\textlangle]{\begingroup\makexeCJKinactive}
\AtEndUTFCommand[\textlangle]{\endgroup}
\AtBeginUTFCommand[\textrangle]{\begingroup\makexeCJKinactive}
\AtEndUTFCommand[\textrangle]{\endgroup}
\fvset{
  fontsize=\small,baselinestretch=1,
  listparameters=\setlength\topsep{\MacrocodeTopsep}}
\preto\MacroFont{\linespread{1}}
\appto\MacroFont{\hyphenchar\font=-1 \xeCJKVerbAddon}
\preto\AltMacroFont{\linespread{1}}
\appto\AltMacroFont{\hyphenchar\font=-1 \xeCJKVerbAddon}
\def\Module#1{\mbox{\normalfont\sffamily\textlangle#1\textrangle}}
\csdef{meta }#1{\mbox{\texttt{\textlangle}\textit{#1}\texttt{\textrangle}}}
\def\XeTeX{\hologo{XeTeX}}
\def\XeLaTeX{\hologo{XeLaTeX}}
\def\LuaLaTeX{\hologo{LuaLaTeX}}
\def\pdfLaTeX{\hologo{pdfLaTeX}}
\def\LaTeX{\hologo{LaTeX}}
\def\LaTeXe{\hologo{LaTeX2e}}
\def\ctexkitrev#1{%
  \href{http://code.google.com/p/ctex-kit/source/detail?r=#1}{\texttt{ctex-kit} rev#1}}
\patchcmd\theCodelineNo{\sffamily\tiny}{\normalfont\sffamily\tiny}{}{}
\makeatletter
\appto\GlossaryParms{%
  \def\@idxitem{\par\hangindent 2em }%
  \def\subitem{\@idxitem\hspace*{1em}}%
  \def\subsubitem{\@idxitem\hspace*{2em}}}
\patchcmd\l@section{2.5em}{1.5em}{}{}
\patchcmd\l@subsection{2.5em}{1.5em}{}{}
\patchcmd\changes@{\space}{\lbrack}{}{}
\patchcmd\@wrglossary{hdpindex}{hdclindex{\the\c@HD@hypercount}}{}{}
\makeatother
\EnableCrossrefs
\CodelineIndex
\RecordChanges
\def\indexname{代码索引}
\def\glossaryname{版本历史}
\GlossaryPrologue{\section*{\glossaryname}}
\IndexPrologue{%
  \section*{\indexname}
  \textit{意大利体的数字表示描述对应索引项的页码；
  带下划线的数字表示定义对应索引项的代码行号；
  罗马字体的数字表示使用对应索引项的代码行号。}}
\begin{document}
  \DocInput{\jobname.dtx}
  \newgeometry{margin=15mm,footskip=7mm}
  \PrintChanges
  \PrintIndex
\end{document}
%</driver>
%
% \fi
%
% \changes{v2.0}{2014/03/06}{应用 \hologo{LaTeX3} 重新整理代码。}
% \changes{v2.0}{2014/03/12}{删除 \file{c19gbsn.fd} 和 \file{c19gkai.fd}。}
%
%
% \CheckSum{3111}
%
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
% \GetFileInfo{\jobname.dtx}%
%
% \title{\bfseries \pkg{ctex} 宏包说明}
% \author{\href{http://www.ctex.org}{ctex.org}}
% \date{\filedate\qquad\fileversion\thanks{\ctexkitrev{\ctexrevnum}.}}
% \maketitle
%
% \begin{abstract}
% \pkg{ctex} 宏包是面向中文排版的通用 \LaTeX{} 排版框架，为中文 \LaTeX{} 文档
% 提供了汉字输出支持、标点压缩、字体字号命令、标题文字汉化、中文版式调整、数字
% 日期转换等支持功能，可适应论文、报告、书籍、幻灯片等不同类型的中文文档。
%
% \pkg{ctex} 宏包支持 \pdfLaTeX、\XeLaTeX、\LuaLaTeX{} 等多种不同的编译方式，
% 主要功能由宏包 \pkg{ctex} 或中文文档类 \pkg{ctexart}、\pkg{ctexrep}、
% \pkg{ctexbook} 实现。
% \end{abstract}
%
% \tableofcontents
% \clearpage
%
% \begin{documentation}
%
% \section{简明教程}
%
%
% \section{参考手册}
%
% \subsection{依赖与安装}
%
% \subsection{\pkg{ctex} 宏包与文档类}
%
% \subsection{宏包选项}
%
% \subsection{中文字体}
%
% \subsection{字号与间距}
%
% \begin{function}{\zihao}
%   \begin{syntax}
%     \cs{zihao} \Arg{字号}
%   \end{syntax}
%   其中\meta{字号}的有效值如下表所示。
%   \begin{quote}
%   \def~{\phantom{0}}
%   \tabcolsep=1em
%   \begin{tabular}{>{\ttfamily}rll}
%   \toprule
%   \meta{字号} & 大小(bp) & 意义 \\
%   \midrule
%   0    &   42 & \zihao{0}    初号    \\
%   -0   &   36 & \zihao{-0}   小初号  \\
%   1    &   26 & \zihao{1}    一号    \\
%   -1   &   24 & \zihao{-1}   小一号  \\
%   2    &   22 & \zihao{2}    二号    \\
%   -2   &   18 & \zihao{-2}   小二号  \\
%   3    &   16 & \zihao{3}    三号    \\
%   -3   &   15 & \zihao{-3}   小三号  \\
%   4    &   14 & \zihao{4}    四号    \\
%   -4   &   12 & \zihao{-4}   小四号  \\
%   5    & 10.5 & \zihao{5}    五号    \\
%   -5   &   ~9 & \zihao{-5}   小五号  \\
%   6    & ~7.5 & \zihao{6}    六号    \\
%   -6   & ~6.5 & \zihao{-6}   小六号  \\
%   7    & ~5.5 & \zihao{7}    七号    \\
%   8    &   ~5 & \zihao{8}    八号    \\
%   \bottomrule
%   \end{tabular}
%   \end{quote}
% \end{function}
%
% \subsection{中文数字与日期}
%
% \subsection{文档内容汉化}
%
% \subsection{标题格式定义}
%
% \subsection{开发人员}
%
% \begin{itemize}[noitemsep]
% \item 吴凌云 (\email{aloft@ctex.org})
% \item 江疆 (\email{gzjjgod@gmail.com})
% \item 王越 (\email{yuleopen@gmail.com})
% \item 刘海洋 (\email{LeoLiu.PKU@gmail.com})
% \item 李延瑞 (\email{LiYanrui.m2@gmail.com})
% \item 陈之初 (\email{zhichu.chen@gmail.com})
% \item 李清 (\email{sobenlee@gmail.com})
% \item Liam Huang (\email{liamhuang0205@gmail.com}) ^^A FIXME: nickname?
% \end{itemize}
%
%
% \end{documentation}
%
%
% \StopEventually{}
%
%
%\begin{implementation}
%
% \section{代码实现}
%
%    \begin{macrocode}
%<@@=ctex>
%<*ctexcap>
%    \end{macrocode}
%
%    \begin{macrocode}
\PassOptionsToPackage { heading = true } { ctexcap }
\RequirePackageWithOptions { ctex }
%    \end{macrocode}
%
%    \begin{macrocode}
%</ctexcap>
%<*class|style|ctexsize>
%    \end{macrocode}
%
%    \begin{macrocode}
\RequirePackage { xparse , l3keys2e }
%<*!ctexsize>
\RequirePackage { xpatch , ifpdf , fix-cm , everysel }
%    \end{macrocode}
%
% \subsection{内部函数与变量}
%
% \begin{variable}[internal]
% {\l_@@_tmp_tl,\g_@@_tmp_bool,\l_@@_tmp_int,\l_@@_tmp_dim}
%    \begin{macrocode}
\tl_new:N \l_@@_tmp_tl
\bool_new:N \g_@@_tmp_bool
\int_new:N \l_@@_tmp_int
\dim_new:N \l_@@_tmp_dim
%    \end{macrocode}
% \end{variable}
%
% \begin{macro}[internal,pTF]{\ctex_if_pdfmode:}
%    \begin{macrocode}
\prg_new_conditional:Npnn \ctex_if_pdfmode: { p , T , F , TF }
  { \ifpdf \prg_return_true: \else: \prg_return_false: \fi: }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[internal]{\ctex_file_input:n}
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \ctex_file_input:n #1
  { \@pushfilename \file_input:n {#1} \@popfilename }
\@onlypreamble \ctex_file_input:n
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[internal]{\ctex_patch_cmd:Nnn}
%    \begin{macrocode}
\cs_new_protected:Npn \ctex_patch_cmd:Nnn
  {
    \group_begin:
    \char_set_catcode_other:N \#
    \@@_patch_cmd:Nnn
  }
\cs_new_protected:Npn \@@_patch_cmd:Nnn #1#2#3
  {
    \group_end:
    \group_begin:
    \ExplSyntaxOff
    \xpatchcmd #1 {#2} {#3}
      {
        \cs_gset_eq:NN \@@_tmp:w #1
        \group_end:
        \cs_set_eq:NN #1 \@@_tmp:w
        \cs_undefine:N \@@_tmp:w
      }
      { \group_end: \ctex_patch_failure:N #1 }
  }
\cs_new_protected:Npn \ctex_patch_failure:N #1
  { \msg_warning:nnx { ctex } { patch-failure } { \token_to_str:N #1 } }
\msg_new:nnn { ctex } { patch-failure }
  {
    Patching~command~`#1'~failed.\\
    ctex~may~not~work~as~expected.
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[internal]{\ctex_add_to_selectfont:n,\CTEX@selectfont@hook}
% \cs{EverySelectfont} 直到文档开始时才有效。为了 \cs{ccwd} 和 \pkg{luatexja} 的
% 字体设置在导言区也可用，我们还需要在这里手工修改 \cs{selectfont}。\pkg{everysel}
% 宏包会用 \cs{CheckCommand} 来检查 \cs{selectfont} 是否为标准定义。我们修改了
% \cs{selectfont}，所以会给出一个警告。为了消除这个警告，在它检查之前，还原本来
% 定义。
%    \begin{macrocode}
\EverySelectfont { \CTEX@selectfont@hook }
\cs_new_protected:Npn \ctex_add_to_selectfont:n #1
  {
    \cs_set_protected_nopar:Npx \CTEX@selectfont@hook
      { \exp_not:o { \CTEX@selectfont@hook #1 } }
  }
\cs_new_eq:NN \CTEX@selectfont@hook \prg_do_nothing:
\cs_new_eq:Nc \@@_save_selectfont: { selectfont ~ }
\use:n
  {
    \ExplSyntaxOff
    \xpretocmd \selectfont { \CTEX@selectfont@hook }
      {
        \tl_put_left:Nn \@EverySelectfont@Init
          { \cs_set_eq:cN { selectfont ~ } \@@_save_selectfont: }
      }
      { \ctex_patch_failure:N \selectfont }
  }
\ExplSyntaxOn
%    \end{macrocode}
% \end{macro}
%
% \begin{variable}[internal]{\l_@@_encoding_tl}
%    \begin{macrocode}
\tl_new:N \l_@@_encoding_tl
\tl_set:Nx \l_@@_encoding_tl
  { \pdftex_if_engine:TF { GBK } { UTF8 } }
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}[internal]{\l_@@_space_int,\l_@@_section_depth_int}
%    \begin{macrocode}
\int_new:N \l_@@_space_int
\int_new:N \l_@@_section_depth_int
\int_set_eq:NN \l_@@_section_depth_int \c_two
%</!ctexsize>
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}[internal]{\l_@@_font_size_int}
%    \begin{macrocode}
\int_new:N \l_@@_font_size_int
%    \end{macrocode}
% \end{variable}
%
% \subsection{宏包选项}
%
%   \begin{macrocode}
\keys_define:nn { ctex / option }
  {
%    \end{macrocode}
%
% \begin{macro}{c5size,cs4size}
%    \begin{macrocode}
    c5size  .code:n = { \int_zero:N \l_@@_font_size_int } ,
    cs4size .code:n = { \int_set_eq:NN \l_@@_font_size_int \c_one } ,
    c5size  .value_forbidden: ,
    cs4size .value_forbidden: ,
%    \end{macrocode}
% \end{macro}
%
% \changes{v2.0}{2014/03/13}{新增 \texttt{autoindent} 选项。}
%
% \begin{macro}{autoindent}
% 自动调整段落的首行缩进功能。
%    \begin{macrocode}
    autoindent .bool_set:N = \l_@@_autoindent_bool ,
    autoindent  .initial:n = { true } ,
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{indent}
% 仅为兼容性保留，不建议使用。
%    \begin{macrocode}
    indent .bool_set:N = \l_@@_indent_bool ,
    noindent   .meta:n = { indent = false } ,
    noindent   .value_forbidden: ,
%<ctexsize>  }
%<*!ctexsize>
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{GBK,UTF8}
%   \begin{macrocode}
    GBK  .code:n = { \tl_set:Nn \l_@@_encoding_tl { GBK } } ,
    UTF8 .code:n = { \tl_set:Nn \l_@@_encoding_tl { UTF8 } } ,
    GBK  .value_forbidden: ,
    UTF8 .value_forbidden: ,
%    \end{macrocode}
% \end{macro}
%
% \changes{v2.0}{2014/03/08}{新增 \texttt{fontset} 选项。}
%
% \begin{macro}{fontset}
%   \begin{macrocode}
    fontset   .tl_set:N = \l_@@_fontset_tl ,
    fontset  .initial:n = { windows } ,
    nofonts     .meta:n = { fontset = none } ,
    adobefonts  .meta:n = { fontset = adobe } ,
    winfonts    .meta:n = { fontset = windows } ,
    fontset     .value_required: ,
    nofonts     .value_forbidden: ,
    winfonts    .value_forbidden: ,
    adobefonts  .value_forbidden: ,
%    \end{macrocode}
% \end{macro}
%
% \changes{v2.0}{2014/03/08}{新增 \texttt{zhmCJK} 选项。}
%
% \begin{macro}{zhmCJK}
%   \begin{macrocode}
    zhmCJK .bool_set:N = \l_@@_zhmCJK_bool ,
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{zhmap}
%   \begin{macrocode}
    zhmap .bool_set:N = \l_@@_zhmap_bool ,
    zhmap  .initial:n = { true } ,
    nozhmap   .meta:n = { zhmap = false } ,
    nozhmap   .value_forbidden: ,
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{punct}
%   \begin{macrocode}
    punct .bool_set:N = \l_@@_punct_bool ,
    punct  .initial:n = { true } ,
    nopunct   .meta:n = { punct = false } ,
    nopunct   .value_forbidden: ,
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{space}
%   \begin{macrocode}
    space .choices:nn =
      { true , auto , false }
      { \int_set_eq:NN \l_@@_space_int \l_keys_choice_int } ,
    space  .default:n = { true } ,
    space  .initial:n = { false } ,
    nospace   .meta:n = { space = false } ,
    nospace   .value_forbidden: ,
%    \end{macrocode}
% \end{macro}
%
% \changes{v2.0}{2014/03/08}{\pkg{ctex.sty} 新增 \texttt{heading} 选项。}
%
% \begin{macro}{heading}
%   \begin{macrocode}
%<*style>
    heading .bool_set:N = \l_@@_heading_bool ,
%</style>
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{cap,nocap}
%    \begin{macrocode}
    cap .bool_set:N = \l_@@_caption_bool ,
    cap  .initial:n = { true } ,
    nocap   .meta:n = { cap = false } ,
    nocap   .value_forbidden: ,
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{sub3section,sub4section}
% \begin{macrocode}
    sub3section .code:n =
      { \int_set_eq:NN \l_@@_section_depth_int \c_three } ,
    sub4section .code:n =
      { \int_set_eq:NN \l_@@_section_depth_int \c_four } ,
    sub3section .value_forbidden: ,
    sub4section .value_forbidden: ,
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{fntef,fancyhdr,hyperref}
%   \begin{macrocode}
    fntef    .bool_set:N = \l_@@_fntef_bool ,
    fancyhdr .bool_set:N = \l_@@_fancyhdr_bool ,
    hyperref .bool_set:N = \l_@@_hyperref_bool
  }
%</!ctexsize>
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{10pt,11pt,12pt}
%    \begin{macrocode}
\clist_map_inline:nn { 10pt , 11pt , 12pt }
  {
    \keys_define:nn { ctex / option }
      {
        #1 .code:n =
%<*!class>
          { \int_set_eq:NN \l_@@_font_size_int \c_minus_one } ,
%</!class>
%<*class>
          {
            \int_set_eq:NN \l_@@_font_size_int \c_minus_one
%<article>            \PassOptionsToPackage {#1} { article }
%<book>            \PassOptionsToPackage {#1} { book }
%<report>            \PassOptionsToPackage {#1} { report }
          } ,
%</class>
        #1 .value_forbidden:
      }
  }
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
%<!ctexsize>\ctex_file_input:n { ctexopts.cfg }
%    \end{macrocode}
%
%    \begin{macrocode}
\ProcessKeysOptions { ctex / option }
%    \end{macrocode}
%
% \begin{macro}{autoindent}
% |autoindent| 也是可以用在正文中的选项，意义与宏包选项 |option/autoindent| 相同。
%    \begin{macrocode}
\keys_define:nn { ctex }
  {
    autoindent .choice: ,
    autoindent .default:n = { true } ,
    autoindent / true  .code:n =
      {
        \bool_set_true:N \l_@@_autoindent_bool
        \ctex_update_parindent:
      } ,
    autoindent / false .code:n =
      { \bool_set_false:N \l_@@_autoindent_bool }
  }
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
%<*class>
%<article>\PassOptionsToClass  { \@unusedoptionlist } { article }
%<book>\PassOptionsToClass  { \@unusedoptionlist } { book }
%<report>\PassOptionsToClass  { \@unusedoptionlist } { report }
\tl_clear:N \@unusedoptionlist
%    \end{macrocode}
%
%    \begin{macrocode}
\if_case:w \l_@@_font_size_int
%<article>  \PassOptionsToClass { 10pt } { article }
%<book>  \PassOptionsToClass { 10pt } { book }
%<report>  \PassOptionsToClass { 10pt } { report }
\or:
%<article>  \PassOptionsToClass { 12pt } { article }
%<book>  \PassOptionsToClass { 12pt } { book }
%<report>  \PassOptionsToClass { 12pt } { report }
\fi:
%    \end{macrocode}
%
%    \begin{macrocode}
%<article>\LoadClass { article }
%<book>\LoadClass { book }
%<report>\LoadClass { report }
%</class>
%    \end{macrocode}
%
%    \begin{macrocode}
%<*class|style>
\tl_set_eq:Nc \l_@@_tmp_tl { ver@ \@currname . \@currext }
%<*class>
\cs_new_eq:cN { ver@ctex.     \@pkgextension } \l_@@_tmp_tl
\cs_new_eq:cN { ver@ctexcap.  \@pkgextension } \l_@@_tmp_tl
\cs_new_eq:cN { ver@ctexsize. \@pkgextension } \l_@@_tmp_tl
%</class>
%<*style>
\msg_new:nnnn { ctex } { ctexsize-loaded }
  { Package~`ctexsize'~can~not~be~loaded~before~`ctex'. }
  {
    `ctexsize'~is~actually~a~part~of~`ctex'.\\
    It~is~not~necessary~to~load~it~separately.
  }
\@ifpackageloaded { ctexsize }
  { \msg_error:nn { ctex } { ctexsize-loaded } }
  { \cs_new_eq:cN { ver@ctexsize. \@pkgextension } \l_@@_tmp_tl }
%</style>
%</class|style>
%    \end{macrocode}
%
% \subsection{用户设置接口}
%
% \changes{v2.0}{2014/03/18}{新增统一设置接口 \cs{ctexset}。}
%
% \begin{macro}{\ctexset}
%    \begin{macrocode}
\NewDocumentCommand \ctexset { +m }
  { \keys_set:nn { ctex } {#1} }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\CTEXsetup}
%    \begin{macrocode}
%<*class|style>
\NewDocumentCommand \CTEXsetup { +o > { \TrimSpaces } m }
  { \IfNoValueF {#1} { \keys_set:nn { ctex / #2 } {#1} } }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\CTEXoptions}
%    \begin{macrocode}
\NewDocumentCommand \CTEXoptions { +o }
  { \IfNoValueF {#1} { \keys_set:nn { ctex } {#1} } }
%</class|style>
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
%</class|style|ctexsize>
%<*class|style>
%    \end{macrocode}
%
% \subsection{引擎支持}
%
% \begin{macro}[internal]{\hypersetup}
%    \begin{macrocode}
\bool_if:NT \l_@@_hyperref_bool
  {
    \cs_if_exist:NF \hypersetup
      {
        \cs_new_protected:Npn \hypersetup #1
          { \PassOptionsToPackage {#1} { hyperref } }
      }
    \hypersetup { colorlinks = true }
    \AtEndPreamble { \RequirePackage { hyperref } }
  }
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
\pdftex_if_engine:TF
  {
    \tl_set:Nx \l_@@_encoding_tl { \l_@@_encoding_tl }
    \ctex_file_input:n { ctex-engine-pdftex.def }
  }
  {
    \tl_set:Nn \l_@@_encoding_tl { UTF8 }
    \xetex_if_engine:TF
      { \ctex_file_input:n { ctex-engine-xetex.def } }
      { \ctex_file_input:n { ctex-engine-luatex.def } }
  }
%    \end{macrocode}
%
%    \begin{macrocode}
%</class|style>
%<*pdftex>
%    \end{macrocode}
%
% \subsubsection{\pkg{ctex-engine-pdftex.def}}
%
% 首先检查选项，决定是否载入 \pkg{zhmCJK} 宏包。
%    \begin{macrocode}
\if_bool:N \l_@@_zhmCJK_bool
  \PassOptionsToPackage { encoding = \l_@@_encoding_tl } { zhmCJK }
  \RequirePackage { zhmCJK }
%    \end{macrocode}
% 不载入 \pkg{zhmCJK} 宏包时直接调用 \pkg{CJK} 及相关宏包。
%    \begin{macrocode}
\else:
  \str_if_eq:onTF { \l_@@_encoding_tl } { GBK }
    { \RequirePackage { CJK } }
    { \RequirePackage { CJKutf8 } }
  \bool_if:NT \l_@@_punct_bool
    { \RequirePackage { CJKpunct } }
  \int_compare:nNnT \l_@@_space_int = \c_two
    { \RequirePackage { CJKspace } }
%    \end{macrocode}
%
% \begin{macro}[internal]{\ctex_load_zhmap:n}
%    \begin{macrocode}
  \cs_new_protected_nopar:Npn \ctex_load_zhmap:n #1
    {
      \tl_set:Nn \CJKrmdefault { rm }
      \tl_set:Nn \CJKsfdefault { sf }
      \tl_set:Nn \CJKttdefault { tt }
      \AtBeginDvi { \ctex_file_input:n {#1} }
      \AtBeginDocument
        { \cs_if_exist_use:NT \AtBeginShipoutFirst { { \file_input:n {#1} } } }
    }
  \@onlypreamble \ctex_load_zhmap:n
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
  \group_begin:
  \int_compare:nNnTF \l_@@_space_int > \c_one
    {
      \tl_set:Nn \l_@@_tmp_tl { CJK* }
      \tl_set:Nn \CJKtilde { \CJKtilde }
    }
    {
      \tl_set:Nn \l_@@_tmp_tl { CJK }
      \tl_clear:N \CJKtilde
    }
  \use:x
    {
      \group_end:
      \AtEndPreamble
        {
          \AfterEndPreamble
            {
              \exp_not:N \begin { \l_@@_tmp_tl }
                { \l_@@_encoding_tl } { \exp_not:N \CJKfamilydefault }
              \exp_not:o { \CJKtilde }
            }
        }
      \AtEndEnvironment { document }
        { \exp_not:N \clearpage \exp_not:N \end { \l_@@_tmp_tl } }
    }
%    \end{macrocode}
%
%    \begin{macrocode}
  \tl_if_exist:NF \CJKfamilydefault
    { \tl_const:Nn \CJKfamilydefault { \CJKrmdefault } }
  \tl_if_exist:NF \CJKrmdefault { \tl_new:N \CJKrmdefault }
  \tl_if_exist:NF \CJKsfdefault { \tl_new:N \CJKsfdefault }
  \tl_if_exist:NF \CJKttdefault { \tl_new:N \CJKttdefault }
  \xpretocmd \rmfamily { \CJKfamily { \CJKrmdefault } } { }
    { \ctex_patch_failure:N \rmfamily }
  \xpretocmd \sffamily { \CJKfamily { \CJKsfdefault } } { }
    { \ctex_patch_failure:N \sffamily }
  \xpretocmd \ttfamily { \CJKfamily { \CJKttdefault } } { }
    { \ctex_patch_failure:N \ttfamily }
  \xpretocmd \normalfont { \CJKfamily { \CJKfamilydefault } }
    { \cs_set_eq:NN \reset@font \normalfont }
    { \ctex_patch_failure:N \normalfont }
%    \end{macrocode}
%
% \cs{CJK@makeActive} 应该先于 \file{ctexcap-gbk.cfg} 等文件的载入，将汉字的
% 首字节设置为活动字符。使用 \pkg{zhmCJK} 时，此功能已经被启用。
%    \begin{macrocode}
  \CJK@makeActive
%    \end{macrocode}
%
% \pkg{zhmCJK} 判断结束。
%    \begin{macrocode}
\fi:
%    \end{macrocode}
%
% \begin{macro}[internal]{\ctex_CJK_input:n,\CJK@input}
% \pkg{breqn} 包可能会在正文中将 |^| 的 \cs{catcode} 改为 $12$ 或 $13$，这将
% 破坏 \pkg{CJK} 对汉字的首字节的定义（\cs{CJK@loadBinding} 和
% \cs{CJK@loadEncoding}）。因此需要确保载入 \file{.enc} 和 \file{.bdg} 文件时，
% |^| 的 \cs{catcode} 为 $7$。
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \ctex_CJK_input:n #1
  {
    \use:x
      {
        \char_set_catcode_other:n            { 60 } % <
        \char_set_catcode_letter:n           { 64 } % @
        \char_set_catcode_math_superscript:n { 94 } % ^
        \int_set_eq:NN \tex_endlinechar:D \c_minus_one
        \file_input:n {#1}
        \int_set:Nn \tex_endlinechar:D { \int_use:N \tex_endlinechar:D }
        \char_set_catcode:nn { 60 } { \char_value_catcode:n { 60 } }
        \char_set_catcode:nn { 64 } { \char_value_catcode:n { 64 } }
        \char_set_catcode:nn { 94 } { \char_value_catcode:n { 94 } }
      }
  }
\cs_set_eq:NN \CJK@input \ctex_CJK_input:n
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[internal]{\ctex_update_ccglue:}
%    \begin{macrocode}
\cs_new_eq:NN \ctex_update_ccglue: \prg_do_nothing:
\cs_set_protected_nopar:Npn \CJKglue { \skip_horizontal:N \l_@@_ccglue_skip }
%    \end{macrocode}
% \end{macro}
%
% \pkg{CJK} 宏包也修改了 \cs{selectfont}，会覆盖我们之前的修改，在这里把它补上。
%    \begin{macrocode}
\cs_set_eq:Nc \@@_save_selectfont: { selectfont ~ }
\use:n
  {
    \ExplSyntaxOff
    \xapptocmd \selectfont { \CTEX@selectfont@hook } { }
      { \ctex_patch_failure:N \selectfont }
  }
\ExplSyntaxOn
%    \end{macrocode}
%
%    \begin{macrocode}
%</pdftex>
%<*xetex>
%    \end{macrocode}
%
% \subsubsection{\pkg{ctex-engine-xetex.def}}
%
%    \begin{macrocode}
\RequirePackage [ indentfirst = false ] { xeCJK }
\defaultfontfeatures { Ligatures = TeX }
\xeCJKsetup { AutoFakeBold = true }
\int_compare:nNnF \l_@@_space_int > \c_one
  { \xeCJKsetup { CJKspace = true } }
\bool_if:NF \l_@@_punct_bool
  { \xeCJKsetup { PunctStyle = plain } }
%    \end{macrocode}
%
% \begin{macro}[internal]{\ctex_update_ccglue:}
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \ctex_update_ccglue:
  { \xeCJKsetup { CJKglue = { \skip_horizontal:N \l_@@_ccglue_skip } } }
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
%</xetex>
%<*luatex>
%    \end{macrocode}
%
% \subsubsection{\pkg{ctex-engine-luatex.def}}
%
% \changes{v2.0}{2014/03/08}{通过 \pkg{luatexja} 宏包支持 \LuaLaTeX。}
%
% \pkg{luatexja} 为了兼容 p\LaTeX 的使用习惯，对 \LaTeXe 的 \pkg{NFSS} 作了不少
% 修改和扩充，这对于简体中文用户来说不是必要的。我们在这里禁用它。
%    \begin{macrocode}
\msg_new:nnn { ctex } { luatexja-loaded }
  {
    Package~`luatexja'~can~not~be~loaded~before~`ctex'.\\
    Loading~file~`#1'~will~abort!
  }
\@ifpackageloaded { luatexja }
  { \msg_critical:nnx { ctex } { luatexja-loaded } { \g_file_current_name_tl } }
  { \cs_new_eq:cN { ver@ltj-latex.\@pkgextension } \ExplFileDate }
%    \end{macrocode}
%
%    \begin{macrocode}
\RequirePackage { luatexja } [ 2013/05/14 ]
\RequirePackage { fontspec }
%    \end{macrocode}
%
% \paragraph{\pkg{luatexja} 的默认设置}
%
%    \begin{macrocode}
\ExplSyntaxOff
%    \end{macrocode}
%
% 以下设置抄录自 \file{lltjdefs.sty}。
%    \begin{macrocode}
\ltjdefcharrange{1}{"80-"36F, "1E00-"1EFF}
\ltjdefcharrange{2}{"370-"4FF, "1F00-"1FFF}
\ltjdefcharrange{3}{%
  "2000-"243F, "2500-"27BF, "2900-"29FF, "2B00-"2BFF}
\ltjdefcharrange{4}{%
   "500-"10FF, "1200-"1DFF, "2440-"245F, "27C0-"28FF, "2A00-"2AFF,
  "2C00-"2E7F, "4DC0-"4DFF, "A4D0-"A82F, "A840-"ABFF, "FB00-"FE0F,
  "FE20-"FE2F, "FE70-"FEFF, "10000-"1FFFF, "E000-"F8FF} % non-Japanese
\ltjdefcharrange{5}{"D800-"DFFF, "E0000-"E00FF, "E01F0-"10FFFF}
\ltjdefcharrange{6}{%
  "2460-"24FF, "2E80-"2EFF, "3000-"30FF, "3190-"319F, "31F0-"4DBF,
  "4E00-"9FFF, "F900-"FAFF, "FE10-"FE6F, "20000-"2FFFF, "E0100-"E01EF}
\ltjdefcharrange{7}{
  "1100-"11FF, "2F00-"2FFF, "3100-"31EF, "A000-"A4CF, "A830-"A83F,
  "AC00-"D7FF}
\ltjdefcharrange{8}{"A7, "A8, "B0, "B1, "B4, "B6, "D7, "F7}
\ltjsetparameter{jacharrange={-1, +2, +3, -4, -5, +6, +7, +8}}
\directlua{for x=128,255 do luatexja.math.is_math_letters[x] = true end}
%    \end{macrocode}
%
% 以下设置抄录自 \file{ltj-latex.sty}。
%    \begin{macrocode}
\directlua{
  local s = kpse.find_file('ltj-kinsoku.lua', 'tex')
  luatexja.stack.charprop_stack_table[0] = s and dofile(s) or {}
}
\ltjsetparameter{kanjiskip=0pt plus 0.4pt minus 0.4pt,
  xkanjiskip=.25\zw plus 1pt minus 1pt,
  autospacing, autoxspacing, jacharrange={-1},
  yalbaselineshift=0pt, yjabaselineshift=0pt,
  jcharwidowpenalty=500, differentjfm=paverage
}
%    \end{macrocode}
%
% \paragraph{字体切换方式}
%
%    \begin{macrocode}
%<@@=ctex_ltj>
%    \end{macrocode}
%
%    \begin{macrocode}
\ExplSyntaxOn
%    \end{macrocode}
%
% \begin{macro}[internal]{\ctex_ltj_select_font:,\CJK@family}
% \cs{CJK@family} 保存的是当前 CJK 实际的字体族名，如果为空表示没有设置过字体。
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \ctex_ltj_select_font:
  {
    \cs_if_exist_use:cF { \l_@@_current_font_tl }
      { \tl_if_empty:NF \CJK@family { \@@_select_font_aux: } }
  }
\tl_new:N \CJK@family
\tl_new:N \l_@@_current_font_tl
\tl_set:Nn \l_@@_current_font_tl
  { \CJK@encoding / \CJK@family / \f@series / \f@shape / \f@size }
\ctex_add_to_selectfont:n { \ctex_ltj_select_font: }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[internal]{\@@_select_font_aux:}
% 使用 \cs{pickup@font} 取得字体名称前，总需要先设置 \cs{font@name}。在这里将
% \cs{f@family} 换成 CJK 字体族，并确保编码正确。
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \@@_select_font_aux:
  {
    \group_begin:
      \tl_set_eq:NN \f@encoding \CJK@encoding
      \tl_set_eq:NN \f@family \CJK@family
      \cs_gset_eq:NN \@@_save_fontname:w \font@name
      \cs_gset_nopar:Npx \font@name { \use:c { \curr@fontshape / \f@size } }
      \ctex_ltj_pickup_font:
    \group_end:
    \font@name
    \cs_gset_eq:NN \font@name \@@_save_fontname:w
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[internal]{\ctex_ltj_pickup_font:}
% 替换 \cs{pickup@font} 内部调用的 \cs{extract@font} 和 \cs{do@subst@correction}。
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \ctex_ltj_pickup_font:
  {
    \group_begin:
      \cs_set_eq:NN \extract@font \ctex_ltj_extract_font:
      \cs_set_eq:NN \do@subst@correction \ctex_ltj_subst_font:
      \define@newfont
    \group_end:
  }
\cs_new_eq:NN \pickup@jfont \ctex_ltj_pickup_font:
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[internal]{\ctex_ltj_extract_font:}
% \pkg{luatexja} 的 \cs{globaljfont} 在 \pkg{luatexja-core} 中定义：
% \begin{verbatim}
%   %%%%%%%% \jfont\CS={...:...;jfm=metric;...}, \globaljfont
%   \protected\def\jfont{\afterassignment\ltj@@jfont\directlua{luatexja.jfont.jfontdefX(false)}}
%   \protected\def\globaljfont{%
%   \afterassignment\ltj@@jfont\directlua{luatexja.jfont.jfontdefX(true)}}
%   \def\ltj@@jfont{\directlua{luatexja.jfont.jfontdefY()}}
% \end{verbatim}
% \texttt{jfontdefX} 函数的作用是把 \cs{CS} 定义为其后的字体，\texttt{jfontdefY}
% 的作用是更新 \texttt{JFM} 和记录相关字体信息。最后的工作是：
% \begin{verbatim}
%   tex.sprint(cat_lp, global_flag .. '\\protected\\expandafter\\def\\csname '
%     .. cstemp  .. '\\endcsname{\\ltj@curjfnt=' .. fn .. '\\relax}')
% \end{verbatim}
% \cs{CS} 的作用就是把 \cs{ltj@curjfnt} 设置为刚才定义的字体的 \texttt{font.id}。
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \ctex_ltj_extract_font:
  {
    \get@external@font
    \exp_after:wN \globaljfont \font@name \external@font \scan_stop:
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[internal]{\ctex_ltj_font_adjustment:}
% 分别是 \cs{DeclareFontFamily} 和 \cs{DeclareFontShape} 的最后一个参数的内容，
% 一般留空或者是对字体参数的一些设置。
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \ctex_ltj_font_adjustment:
  {
    \font@name
    \use:c { \f@encoding + \f@family }
    \use:c { \curr@fontshape }
  }
%    \end{macrocode}
% \end{macro}
%
%     \begin{macrocode}
%<@@=>
%    \end{macrocode}
%
% 使用 \cs{globaljfont} 定义 \cs{CS} 之后，\cs{CS} 不是通常意义上的字体命令，
% 运行它不会直接改变当前字体。这里把 \cs{ctex_ltj_font_adjustment:} 放在
% |\ltj@@jfont| 前面，是为了能得到正确的 \cs{font}。
%    \begin{macrocode}
\cs_if_free:NF \ltj@@jfont
  {
    \cs_set_protected_nopar:Npx \ltj@@jfont
      {
        \ctex_ltj_font_adjustment:
        \exp_not:o { \ltj@@jfont }
      }
  }
%    \end{macrocode}
%
%     \begin{macrocode}
%<@@=ctex_ltj>
%    \end{macrocode}
%
% \begin{macro}[internal]{\ctex_ltj_subst_font:}
% \cs{do@subst@correction} 在设置通过 \texttt{sub} 或者 \texttt{ssub} 函数定义的
% 字体时会用到。如果没有设置 \texttt{SlantedFont}，\pkg{fontspec} 会设置
% \cs{itdefault} 作为 \cs{sldefault} 的替代字形，因而会用到这个函数。它的本来定义是：
% \begin{verbatim}
%   \def\do@subst@correction{%
%       \xdef\subst@correction{%
%          \font@name
%          \global\expandafter\font
%            \csname \curr@fontshape/\f@size\endcsname
%            \noexpand\fontname\font
%           \relax}%
%       \aftergroup\subst@correction
%   }
% \end{verbatim}
% 我们在这里不需要定义新字体，而是设置对应字体的命令。
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \ctex_ltj_subst_font:
  {
    \group_begin:
    \tl_set_eq:NN \CJK@family \f@family
    \cs_if_exist:cF { \l_@@_current_font_tl  }
      {
        \cs_gset_protected_nopar:Npx \subst@correction
          { \cs_new_eq:NN \exp_not:c { \l_@@_current_font_tl } \font@name }
        \group_insert_after:N \group_insert_after:N
        \group_insert_after:N \subst@correction
      }
    \group_end:
  }
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
\ExplSyntaxOff
%    \end{macrocode}
%
%    \begin{macrocode}
%<@@=>
%    \end{macrocode}
%
% 以下内容抄录自 \file{lltjfont.sty}，目的是让汉字可以在数学环境中直接使用。
%    \begin{macrocode}
\def\ltj@@IsFontJapanese#1{%
  \directlua{luatexja.jfont.is_kenc(string.match(
      '\luatexluaescapestring{#1}', '[^/]+'))}}
{\catcode`M=12%
\gdef\ltj@@mathJapaneseFonts#1M#2#3\relax{\ltj@@IsFontJapanese{#3}}}
\let\ltj@@al@getanddefine@fonts=\getanddefine@fonts
\def\ltj@@ja@getanddefine@fonts#1#2{%
  \xdef\font@name{\csname \string#2/\tf@size\endcsname}%
  \pickup@jfont\let\textfont@name\font@name
  \xdef\font@name{\csname \string#2/\sf@size\endcsname}%
  \pickup@jfont\let\scriptfont@name\font@name
  \xdef\font@name{\csname \string#2/\ssf@size\endcsname}%
  \pickup@jfont
  \edef\math@fonts{\math@fonts\ltj@setpar@global%
    \ltj@@set@stackfont#1,\textfont@name:{MJT}%
    \ltj@@set@stackfont#1,\scriptfont@name:{MJS}%
    \ltj@@set@stackfont#1,\font@name:{MJSS}%
  }%
}
\def\getanddefine@fonts#1#2{%
  \ltj@tempcnta=#1\ltj@@IsFontJapanese{\string#2}%
  \ifin@\let\ltj@temp=\ltj@@ja@getanddefine@fonts%
  \else \let\ltj@temp=\ltj@@al@getanddefine@fonts\fi
  \ltj@temp{#1}{#2}%
}
\def\use@mathgroup#1#2{\relax\ifmmode
  \math@bgroup
    \expandafter\ifx\csname M@\f@encoding\endcsname#1\else
    #1\fi\ltj@tempcnta=#2 \expandafter\ltj@@mathJapaneseFonts\string#1\relax%
    \ifin@\jfam#2\relax\else\mathgroup#2\relax\fi
  \expandafter\math@egroup\fi}%
%    \end{macrocode}
%
%    \begin{macrocode}
%<@@=ctex_ltj>
%    \end{macrocode}
%
%    \begin{macrocode}
\ExplSyntaxOn
%    \end{macrocode}
%
% \begin{macro}[internal]{\CJK@encoding,\@@_change_encoding:}
% 在 \LaTeX 下，\pkg{luatexja} 依赖字体编码来实现特殊设置。例如上述的
% |\ltj@@IsFontJapanese| 就是通过判断编码来实现的，它在设置数学字体时会用到。所以
% 不应该与西文共用 \texttt{EU2}。定义字体族 song 为 \cs{CJK@encoding} 的默认替换
% 字体。
%    \begin{macrocode}
\tl_const:Nn \CJK@encoding { LTJY3 }
\DeclareFontEncoding { \CJK@encoding } { } { }
\DeclareFontSubstitution { LTJY3 } { song } { \mddefault } { \updefault }
\lua_now_x:n { luatexja.jfont.add_kyenc_list('\CJK@encoding') }
\cs_new_protected_nopar:Npn \@@_change_encoding:
  { \tl_set_eq:NN \g_fontspec_encoding_tl \CJK@encoding }
\DeclareFontFamily { \CJK@encoding } { song } { }
\DeclareFontShape { \CJK@encoding } { song } { \mddefault } { \updefault }
  { <-> psft:SimSun:cid=Adobe-GB1-5;jfm=quanjiao } { }
\DeclareFontShape { \CJK@encoding } { song } { \bfdefault } { \updefault }
  { <-> psft:SimHei:cid=Adobe-GB1-5;jfm=quanjiao } { }
\tl_const:Nn \c_@@_math_tl { CJKmath }
\DeclareSymbolFont { \c_@@_math_tl }
  { \CJK@encoding } { song } { \mddefault } { \updefault }
\SetSymbolFont { \c_@@_math_tl } { bold }
  { \CJK@encoding } { song } { \bfdefault } { \updefault }
\int_const:Nn \c_@@_math_fam_int { \use:c { sym \c_@@_math_tl } }
%    \end{macrocode}
% \end{macro}
%
% Attribute 寄存器 \cs{ltj@curjfnt} 的初始值是 $-1$，必须把它设置为一个有效的
% \texttt{font.id}，否则编译时会直接退出。
%    \begin{macrocode}
\tl_set:Nn \CJK@family { song } \selectfont
\tl_clear:N \CJK@family
\jfam \c_@@_math_fam_int
%    \end{macrocode}
%
% \paragraph{字体族的定义与使用}
%
% 这是 \pkg{luatexja-fontspec} 中新增的一些字体选项。
%     \begin{macrocode}
\keys_define:nn { fontspec }
  {
    CID     .meta:n = { RawFeature = {    cid = #1 } } ,
    JFM     .meta:n = { RawFeature = {    jfm = #1 } } ,
    JFM-var .meta:n = { RawFeature = { jfmvar = #1 } } ,
    CID     .value_required: ,
    JFM     .value_required: ,
    JFM-var .value_required:
  }
\keys_define:nn { fontspec-preparse-external }
  {
    NoEmbed .code:n =
      { \cs_set_eq:NN \fontspec_namewrap:n \@@_noembed_wrap:n }
  }
\cs_new_nopar:Npn \@@_noembed_wrap:n #1 { psft: #1 }
%    \end{macrocode}
%
% \begin{macro}[internal]{\ctex_ltj_set_family:nnn}
% 将自定义的字体族名与 \pkg{fontspec} 实际设置的名字对应起来。
%    \begin{macrocode}
\cs_new_protected:Npn \ctex_ltj_set_family:nnn #1#2#3
  {
    \int_gincr:N \g_@@_family_int
    \@@_check_family:n {#1}
    \clist_set:Nn \l_@@_font_options_clist {#2}
    \prop_gput:Nnn \g_@@_family_font_name_prop {#1} {#3}
    \prop_gput:Nno \g_@@_family_font_options_prop
      {#1} { \l_@@_font_options_clist }
    \clist_concat:NNN \l_@@_font_options_clist
      \g_@@_default_features_clist \l_@@_font_options_clist
    \@@_gset_family_cs:nn {#1} {#3}
  }
\cs_new_protected:Npn \ctex_ltj_set_family:xxx #1#2#3
  { \use:x { \ctex_ltj_set_family:nnn {#1} {#2} {#3} } }
\int_new:N \g_@@_family_int
\clist_new:N \l_@@_font_options_clist
%    \end{macrocode}
% \end{macro}
%
% \begin{variable}[internal]
%  {\g_@@_family_name_prop,\g_@@_family_font_name_prop,\g_@@_family_font_options_prop}
% 分别保存 \pkg{fontspec} 设置的字体族名、字体名称和字体选项。
%    \begin{macrocode}
\prop_new:N \g_@@_family_name_prop
\prop_new:N \g_@@_family_font_name_prop
\prop_new:N \g_@@_family_font_options_prop
%    \end{macrocode}
% \end{variable}
%
% \begin{macro}[internal]{\@@_check_family:n}
% 删除重复的定义。
%   \begin{macrocode}
\cs_new_protected_nopar:Npn \@@_check_family:n #1
  {
    \prop_gpop:NnNT \g_@@_family_font_name_prop {#1} \l_@@_tmp_tl
      {
        \prop_gpop:NnNT \g_@@_family_name_prop {#1} \l_@@_tmp_tl
          { \cs_undefine:c { \@@_family_csname:n {#1} } }
        \@@_warning:nxx { redefine-family } {#1} { \l_@@_tmp_tl }
      }
  }
\tl_new:N \l_@@_tmp_tl
\msg_new:nnn { ctex } { redefine-family }
  { Redefining~CJKfamily~`\@@_msg_family_map:n {#1}'~(#2). }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[internal]{\@@_gset_family_cs:nn}
% 在设置字体时，实际上并不是马上就定义。而是只保存相关参数，在通过 \cs{CJKfamily}
% 第一次使用时才定义。需要注意将编码改为 \cs{CJK@encoding}。
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \@@_gset_family_cs:nn #1#2
  {
    \cs_gset_protected_nopar:cpx { \@@_family_csname:n {#1} }
      {
        \group_begin:
        \@@_change_encoding:
        \exp_not:n { \cs_set_eq:NN \CJKfamily \use_none:n }
        \exp_not:n { \fontspec_set_family:Nnn \g_@@_fontspec_family_tl }
          { \exp_not:o { \l_@@_font_options_clist } } {#2}
        \prop_gput:Nno \exp_not:N \g_@@_family_name_prop {#1}
          { \exp_not:N \g_@@_fontspec_family_tl }
        \tl_gset_eq:NN \exp_not:N \g_@@_fontspec_family_tl
          \exp_not:N \g_@@_fontspec_family_tl
        \group_end:
      }
  }
\tl_new:N \g_@@_fontspec_family_tl
\cs_new_nopar:Npn \@@_family_csname:n #1 { ctex_ltj/family/#1 }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[internal]{\CJKfamily}
% 切换字体。
%    \begin{macrocode}
\NewDocumentCommand \CJKfamily { m }
  { \ctex_ltj_switch_family:x {#1} \tex_ignorespaces:D }
\cs_new_protected_nopar:Npn \ctex_ltj_switch_family:n #1
  {
    \ctex_ltj_family_if_exist:xNTF {#1} \CJK@family
      {
        \tl_set:Nn \l_ctex_ltj_family_tl {#1}
        \selectfont
      }
      { \@@_family_unknown_warning:n {#1} }
  }
\tl_new:N \l_ctex_ltj_family_tl
\cs_generate_variant:Nn \ctex_ltj_switch_family:n { x }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[internal,pTF]{\ctex_ltj_family_if_exist:n}
% 判断 CJK 字体族 |#1| 是否存在，若存在则把实际族名保存到 |#2| 中。
%    \begin{macrocode}
\prg_new_protected_conditional:Npnn \ctex_ltj_family_if_exist:xN #1#2 { T , F , TF }
  {
    \prop_get:NxNTF \g_@@_family_name_prop {#1} #2
      { \prg_return_true: }
      {
        \cs_if_exist_use:cTF { \@@_family_csname:n {#1} }
          {
            \tl_set_eq:NN #2 \g_@@_fontspec_family_tl
            \prg_return_true:
          }
          { \prg_return_false: }
      }
  }
\cs_generate_variant:Nn \prop_get:NnNTF { Nx }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[internal]{\@@_family_unknown_warning:n}
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \@@_family_unknown_warning:n #1
  {
    \prop_if_empty:NF \g_@@_family_font_name_prop
      {
        \seq_if_in:NnF \g_@@_unknown_family_seq {#1}
          {
            \seq_gput_right:Nn \g_@@_unknown_family_seq {#1}
            \msg_warning:nnn { ctex } { family-unknown } {#1}
          }
      }
  }
\seq_new:N \g_@@_unknown_family_seq
\msg_new:nnn { ctex } { family-unknown }
  {
    Unknown~CJK~family~`\@@_msg_family_map:n {#1}'~is~being~ignored.\\
    Try~to~use~`\@@_msg_def_family_map:n {#1}'~to~define~it.
  }
\cs_new_nopar:Npn \@@_msg_def_family_map:n #1
  {
    \str_case_x:nnn {#1}
      {
        \CJKrmdefault { \token_to_str:N \setCJKmainfont }
        \CJKsfdefault { \token_to_str:N \setCJKsansfont }
        \CJKttdefault { \token_to_str:N \setCJKmonofont }
      }
      { \token_to_str:N \setCJKfamilyfont \{ #1 \} }
    [...]\{...\}
  }
\cs_new_nopar:Npn \@@_msg_family_map:n #1
  {
    \str_case_x:nnn {#1}
      {
        \CJKrmdefault { \token_to_str:N \CJKrmdefault }
        \CJKsfdefault { \token_to_str:N \CJKsfdefault }
        \CJKttdefault { \token_to_str:N \CJKttdefault }
      }
      {#1}
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[internal]{\ctex_ltj_fontspec:nn}
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \ctex_ltj_fontspec:nn #1#2
  {
    \prop_get:NnNTF \g_@@_fontspec_prop
      { CJKfontspec/#1/#2/id } \l_ctex_ltj_family_tl
      { \ctex_ltj_switch_family:x { \l_ctex_ltj_family_tl } }
      {
        \@@_fontspec:xnn
          { CJKfontspec ( \int_eval:n { \g_@@_family_int + \c_one } ) }
          {#1} {#2}
      }
  }
\cs_new_protected_nopar:Npn \ctex_ltj_fontspec:xx #1#2
  { \use:x { \ctex_ltj_fontspec:nn {#1} {#2} } }
\cs_new_protected_nopar:Npn \@@_fontspec:nnn #1#2#3
  {
    \prop_gput:Nnn \g_@@_fontspec_prop { CJKfontspec/#2/#3/id } {#1}
    \ctex_ltj_set_family:nnn {#1} {#2} {#3}
    \ctex_ltj_switch_family:n {#1}
  }
\cs_generate_variant:Nn \@@_fontspec:nnn { x }
\prop_new:N \g_@@_fontspec_prop
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[internal]
% {\ctex_ltj_add_font_features:n,\ctex_ltj_add_font_features:nn}
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \ctex_ltj_add_font_features:n #1
  { \ctex_ltj_add_font_features:xn { \l_ctex_ltj_family_tl } {#1} }
\cs_new_protected_nopar:Npn \ctex_ltj_add_font_features:nn #1#2
  {
    \prop_get:NnNTF \g_@@_family_font_name_prop
      {#1} \l_@@_tmp_tl
      {
        \prop_get:NnN \g_@@_family_font_options_prop
          {#1} \l_@@_font_options_clist
        \clist_put_right:Nn \l_@@_font_options_clist {#2}
        \ctex_ltj_fontspec:xx
          { \exp_not:o { \l_@@_font_options_clist } }
          { \exp_not:o { \l_@@_tmp_tl } }
      }
      { \msg_warning:nn { ctex } { addCJKfontfeature-ignored } }
  }
\cs_generate_variant:Nn \ctex_ltj_add_font_features:n  { x }
\cs_generate_variant:Nn \ctex_ltj_add_font_features:nn { x }
\msg_new:nnn { ctex } { addCJKfontfeature-ignored }
  {
    \token_to_str:N \addCJKfontfeature (s)~ignored.\\
    It~cannot~be~used~with~a~font~that~wasn't~selected~by~ctex.
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[internal]
% {\setCJKfamilyfont,\newCJKfontfamily,\CJKfontspec,\addCJKfontfeatures}
%    \begin{macrocode}
\NewDocumentCommand \setCJKfamilyfont { m O { } m }
  { \ctex_ltj_set_family:xxx {#1} {#2} {#3} }
\NewDocumentCommand \newCJKfontfamily { o m O { } m }
  {
    \tl_set:Nx \l_@@_tmp_tl
      { \IfNoValueTF {#1} { \cs_to_str:N #2 } {#1} }
    \cs_new_protected_nopar:Npx #2
      { \ctex_ltj_switch_family:n { \l_@@_tmp_tl } }
    \ctex_ltj_set_family:xxx { \l_@@_tmp_tl } {#3} {#4}
  }
\NewDocumentCommand \CJKfontspec { O { } m }
  {
    \ctex_ltj_fontspec:xx {#1} {#2}
    \tex_ignorespaces:D
  }
\NewDocumentCommand \addCJKfontfeatures { m }
  {
    \ctex_ltj_add_font_features:x {#1}
    \tex_ignorespaces:D
  }
\cs_new_eq:NN \addCJKfontfeature \addCJKfontfeatures
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[internal]
% {\setCJKmainfont,\setCJKsansfont,\setCJKmonofont,
%  \setCJKmathfont,\defaultCJKfontfeatures}
%    \begin{macrocode}
\NewDocumentCommand \setCJKmainfont { O { } m }
  {
    \ctex_ltj_set_family:xxx { \CJKrmdefault } {#1} {#2}
    \normalfont
  }
\cs_new_eq:NN \setCJKromanfont \setCJKmainfont
\NewDocumentCommand \setCJKsansfont { O { } m }
  {
    \ctex_ltj_set_family:xxx { \CJKsfdefault } {#1} {#2}
    \normalfont
  }
\NewDocumentCommand \setCJKmonofont { O { } m }
  {
    \ctex_ltj_set_family:xxx { \CJKttdefault } {#1} {#2}
    \normalfont
  }
\NewDocumentCommand \setCJKmathfont { O { } m }
  { \ctex_ltj_set_family:xxx { \c_@@_math_tl } {#1} {#2} }
\NewDocumentCommand \defaultCJKfontfeatures { m }
  { \clist_gset:Nn \g_@@_default_features_clist {#1} }
\clist_new:N \g_@@_default_features_clist
\@onlypreamble \setCJKmainfont
\@onlypreamble \setCJKsansfont
\@onlypreamble \setCJKmonofont
\@onlypreamble \setCJKmathfont
\@onlypreamble \setCJKromanfont
\@onlypreamble \defaultCJKfontfeatures
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
\tl_if_exist:NF \CJKrmdefault { \tl_const:Nn \CJKrmdefault { rm } }
\tl_if_exist:NF \CJKsfdefault { \tl_const:Nn \CJKsfdefault { sf } }
\tl_if_exist:NF \CJKttdefault { \tl_const:Nn \CJKttdefault { tt } }
\xpretocmd \rmfamily { \CJKfamily { \CJKrmdefault } } { }
  { \ctex_patch_failure:N \rmfamily }
\xpretocmd \sffamily { \CJKfamily { \CJKsfdefault } } { }
  { \ctex_patch_failure:N \sffamily }
\xpretocmd \ttfamily { \CJKfamily { \CJKttdefault } } { }
  { \ctex_patch_failure:N \ttfamily }
\xpretocmd \normalfont { \CJKfamily { \CJKfamilydefault } }
  { \cs_set_eq:NN \reset@font \normalfont }
  { \ctex_patch_failure:N \normalfont }
%    \end{macrocode}
%
% \begin{macro}[internal]{\ctex_ltj_update_default_family:}
% 根据西文字体的情况更新 CJK 的默认字体族。
%     \begin{macrocode}
\tl_new:N \l_@@_family_default_init_tl
\cs_new_eq:NN \@@_family_default_wrap:n \use:n
\tl_set:Nx \l_@@_family_default_init_tl
  {
    \exp_not:N \@@_family_default_wrap:n
      {
        \tl_if_exist:NTF \CJKfamilydefault
          { \exp_not:o { \CJKfamilydefault } }
          { \exp_not:N \CJKrmdefault }
      }
  }
\tl_gset_eq:NN \CJKfamilydefault \l_@@_family_default_init_tl
\cs_new_protected_nopar:Npn \ctex_ltj_update_default_family:
  {
    \tl_if_eq:NNT \CJKfamilydefault \l_@@_family_default_init_tl
      {
        \cs_set_eq:NN \@@_family_default_wrap:n \exp_not:n
        \tl_gset:Nx \CJKfamilydefault
          {
            \str_case_x:nnn { \familydefault }
              {
                { \rmdefault } { \exp_not:N \CJKrmdefault }
                { \sfdefault } { \exp_not:N \CJKsfdefault }
                { \ttdefault } { \exp_not:N \CJKttdefault }
              }
              { \CJKfamilydefault }
          }
        \cs_undefine:N \@@_family_default_wrap:n
      }
    \prop_if_empty:NF \g_@@_family_font_name_prop
      {
        \ctex_ltj_family_if_exist:xNF { \CJKfamilydefault } \l_@@_tmpa_tl
          {
            \str_if_eq_x:nnTF { \CJKfamilydefault } { \CJKrmdefault }
              { \use:n }
              {
                \ctex_ltj_family_if_exist:xNTF { \CJKrmdefault } \l_@@_tmpa_tl
                  { \tl_gset:Nn \CJKfamilydefault { \CJKrmdefault } \use_none:n }
                  { \use:n }
              }
              {
                \prop_map_inline:Nn \g_@@_family_font_name_prop
                  {
                    \prop_map_break:n
                      { \tl_gset_rescan:Nnn \CJKfamilydefault { } { ##1 } }
                  }
              }
          }
        \normalfont
        \ctex_ltj_update_mathfont:
      }
  }
\AtBeginDocument { \ctex_ltj_update_default_family: }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[internal]{\ctex_ltj_update_mathfont:}
% 更新数学字体为实际的字体。
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \ctex_ltj_update_mathfont:
  {
    \ctex_ltj_family_if_exist:xNTF { \c_@@_math_tl } \l_@@_tmp_tl
      { \ctex_ltj_update_mathfont:n { \l_@@_tmp_tl } }
      {
        \ctex_ltj_family_if_exist:xNT { \CJKfamilydefault } \l_@@_tmp_tl
          { \ctex_ltj_update_mathfont:n { \l_@@_tmp_tl } }
      }
  }
\cs_new_protected_nopar:Npn \ctex_ltj_update_mathfont:n #1
  {
    \tl_const:Nx \c_@@_math_family_tl {#1}
    \DeclareSymbolFont { \c_@@_math_tl } { \CJK@encoding }
      { \c_@@_math_family_tl } { \mddefault } { \updefault }
    \cs_if_free:cTF
      { \CJK@encoding/\c_@@_math_family_tl/\bfdefault/\updefault }
      {
        \SetSymbolFont { \c_@@_math_tl } { bold } { \CJK@encoding }
          { \c_@@_math_family_tl } { \mddefault } { \updefault }
      }
      {
        \SetSymbolFont { \c_@@_math_tl } { bold } { \CJK@encoding }
          { \c_@@_math_family_tl } { \bfdefault } { \updefault }
      }
  }
%    \end{macrocode}
% \end{macro}
%
% \paragraph{其它设置}
%
%    \begin{macrocode}
%<@@=ctex>
%    \end{macrocode}
%
% \begin{macro}[internal]{\CJKspace,\CJKnospace}
%    \begin{macrocode}
\NewDocumentCommand \CJKspace { }
  { \ltjsetparameter { autospacing = false } }
\NewDocumentCommand \CJKnospace { }
  { \ltjsetparameter { autospacing = true } }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[internal]{\ctex_update_ccglue:}
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \ctex_update_ccglue:
  { \ltjsetparameter { kanjiskip = \l_@@_ccglue_skip } }
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
\int_compare:nNnTF \l_@@_space_int > \c_one
  { \ltjsetparameter { autospacing = true } }
  { \ltjsetparameter { autospacing = false } }
\bool_if:NTF \l_@@_punct_bool
  { \defaultCJKfontfeatures { JFM = quanjiao } }
  { \defaultCJKfontfeatures { JFM = mono } }
%    \end{macrocode}
%
%    \begin{macrocode}
%</luatex>
%<*pdftex|xetex|luatex>
%    \end{macrocode}
%
% \subsubsection{\pkg{hyperref} 的支持选项}
%
%    \begin{macrocode}
%<*pdftex>
\cs_if_free:NF \hypersetup
  {
    \hypersetup { driverfallback = dvipdfmx }
    \str_if_eq:onTF { \l_@@_encoding_tl } { GBK }
      {
        \ctex_if_pdfmode:TF
          { \RequirePackage { xCJK2uni } }
          {
            \hypersetup { CJKbookmarks = true }
            \AtBeginDvi { \special { pdf:tounicode~GBK-EUC-UCS2 } }
          }
      }
      { \hypersetup { unicode } }
  }
%</pdftex>
%<*xetex|luatex>
\cs_if_exist_use:NT \hypersetup { { unicode } }
%</xetex|luatex>
%    \end{macrocode}
%
% \begin{macro}[internal]{\ctex_update_ccwd:}
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \ctex_update_ccwd:
%<*pdftex|xetex>
  {
    \group_begin:
      \hbox_set:Nn \l_tmpa_box { \CJKglue }
    \exp_after:wN \group_end: \exp_after:wN
    \dim_set:Nn \exp_after:wN \ccwd \exp_after:wN
      { \dim_use:N \box_wd:N \l_tmpa_box + \f@size \p@ }
  }
%</pdftex|xetex>
%<*luatex>
  { \skip_set:Nn \ccwd { \ltjgetparameter { kanjiskip } + \zw } }
%</luatex>
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
%<*luatex>
\msg_new:nnn { ctex } { fntef-not-available }
  { Option~`fntef'~is~not~available~in~LuaLaTeX. }
%</luatex>
\if_bool:N \l_@@_fntef_bool
%<pdftex>  \RequirePackage { CJKfntef } \normalem
%<xetex>  \RequirePackage { xeCJKfntef }
%<luatex>  \msg_warning:nn { ctex } { fntef-not-available }
  \clist_map_inline:nn
    { underdot , underline , underdblline , underwave , sout , xout }
%<*pdftex|xetex>
    { \cs_new_protected_nopar:cpx { CTEX#1 } { \exp_not:c { CJK#1 } } }
  \cs_new_protected_nopar:Npn { \CTEXfilltwosides } { \CJKfilltwosides }
  \cs_new_protected_nopar:Npn { \endCTEXfilltwosides } { \endCJKfilltwosides }
  \clist_map_inline:nn
    {
      underdotbasesep ,   underdotsep ,     underlinebasesep ,
      underlinesep ,      underdbllinesep , underdbllinebasesep ,
      underwavebasesep ,  underwavesep ,    southeight ,
      underdotcolor ,     underwavecolor ,  underlinecolor ,
      underdbllinecolor , soutcolor ,       xoutcolor
    }
    {
      \cs_new_eq:cc { CTEX#1 } { CJK#1 }
      \cs_set_nopar:cpx { CJK#1 } { \exp_not:c { CTEX#1 } }
    }
%</pdftex|xetex>
%<*luatex>
    { \cs_new_eq:cN { CTEX#1 } \use:n }
  \cs_new_eq:NN \CTEXfilltwosides \use_none:n
  \cs_new_eq:NN \endCTEXfilltwosides \prg_do_nothing:
%</luatex>
\fi:
%    \end{macrocode}
%
%    \begin{macrocode}
%</pdftex|xetex|luatex>
%<*class|style|ctexsize>
%    \end{macrocode}
%
% \subsection{中文字号}
%
% \changes{v2.0}{2014/03/08}{将中文字号功能提取到可以独立使用的 \pkg{ctexsize}。}
%
% \begin{macro}{\zihao}
%    \begin{macrocode}
\NewDocumentCommand \zihao { m }
  { \exp_args:Nx \ctex_zihao:n {#1} \tex_ignorespaces:D }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[internal]{\ctex_zihao:n}
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \ctex_zihao:n #1
  {
    \prop_get:NnNTF \c_@@_font_size_prop {#1} \l_@@_font_size_tl
      { \exp_after:wN \fontsize \l_@@_font_size_tl \selectfont }
      { \msg_error:nnn { ctex } { fontsize } {#1} }
  }
\msg_new:nnnn { ctex } { fontsize }
  { Undefined~Chinese~font~size~`#1'~in~command~\token_to_str:N \zihao.}
  {
    The~old~font~size~is~used~if~you~continue.\\
    The~available~font~sizes~are~listed~as~follow.\\
    \seq_use:Nnnn \c_@@_font_size_seq { ~and~ } { ,~ } { ,~and~ }.
  }
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{定义中文字号}
%
% \changes{v2.0}{2014/03/08}{中文字号不再采用近似值。}
%
% \begin{variable}[internal]{\c_@@_font_size_prop}
% \begin{macro}[aux]{\@@_save_font_size:nn}
%    \begin{macrocode}
\prop_new:N \c_@@_font_size_prop
\seq_new:N \c_@@_font_size_seq
\cs_new_protected_nopar:Npn \@@_save_font_size:nn #1#2
  {
    \use:x
      {
        \prop_gput:Nnn \exp_not:N \c_@@_font_size_prop {#1}
          {
            { \dim_to_pt:n {#2} }
            { \dim_to_pt:n { 1.2 \etex_dimexpr:D #2 \scan_stop: } }
          }
      }
    \seq_gput_right:Nn \c_@@_font_size_seq {#1}
  }
\clist_map_inline:nn
  {
    {  8 } { 5    bp } ,
    {  7 } { 5.5  bp } ,
    { -6 } { 6.5  bp } ,
    {  6 } { 7.5  bp } ,
    { -5 } { 9    bp } ,
    {  5 } { 10.5 bp } ,
    { -4 } { 12   bp } ,
    {  4 } { 14   bp } ,
    { -3 } { 15   bp } ,
    {  3 } { 16   bp } ,
    { -2 } { 18   bp } ,
    {  2 } { 22   bp } ,
    { -1 } { 24   bp } ,
    {  1 } { 26   bp } ,
    { -0 } { 36   bp } ,
    {  0 } { 42   bp }
  }
  { \@@_save_font_size:nn #1 }
%    \end{macrocode}
% \end{macro}
% \end{variable}
%
% \subsubsection{修改缺省字号大小}
%
% \begin{macro}[internal]{\ctex_set_font_size:Nnn}
%    \begin{macrocode}
\cs_new_protected:Npn \ctex_set_font_size:Nnn #1#2#3
  {
    \prop_get:NnNTF \c_@@_font_size_prop {#2} \l_@@_font_size_tl
      { \exp_after:wN \@@_set_font_size:nnNn \l_@@_font_size_tl #1 {#3} }
      { \msg_error:nnn { ctex } { fontsize } {#2} }
  }
\cs_new_protected:Npn \@@_set_font_size:nnNn #1#2#3#4
  { \cs_set_protected_nopar:Npn #3 { \@setfontsize #3 {#1} {#2} #4 } }
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
\if_case:w \l_@@_font_size_int
  \ctex_set_font_size:Nnn \normalsize { 5 }
    {
      \abovedisplayskip 10\p@ \@plus2\p@ \@minus5\p@
      \abovedisplayshortskip \z@ \@plus3\p@
      \belowdisplayshortskip 6\p@ \@plus3\p@ \@minus3\p@
      \belowdisplayskip \abovedisplayskip
      \let\@listi\@listI
    }
  \ctex_set_font_size:Nnn \small { -5 }
    {
      \abovedisplayskip 8.5\p@ \@plus3\p@ \@minus4\p@
      \abovedisplayshortskip \z@ \@plus2\p@
      \belowdisplayshortskip 4\p@ \@plus2\p@ \@minus2\p@
      \def\@listi{\leftmargin\leftmargini
                  \topsep 4\p@ \@plus2\p@ \@minus2\p@
                  \parsep 2\p@ \@plus\p@ \@minus\p@
                  \itemsep \parsep}
      \belowdisplayskip \abovedisplayskip
    }
  \ctex_set_font_size:Nnn \footnotesize { 6 }
    {
      \abovedisplayskip 6\p@ \@plus2\p@ \@minus4\p@
      \abovedisplayshortskip \z@ \@plus\p@
      \belowdisplayshortskip 3\p@ \@plus\p@ \@minus2\p@
      \def\@listi{\leftmargin\leftmargini
                  \topsep 3\p@ \@plus\p@ \@minus\p@
                  \parsep 2\p@ \@plus\p@ \@minus\p@
                  \itemsep \parsep}
      \belowdisplayskip \abovedisplayskip
    }
  \ctex_set_font_size:Nnn \scriptsize { -6 } { }
  \ctex_set_font_size:Nnn \tiny  {  7 } { }
  \ctex_set_font_size:Nnn \large { -4 } { }
  \ctex_set_font_size:Nnn \Large { -3 } { }
  \ctex_set_font_size:Nnn \LARGE { -2 } { }
  \ctex_set_font_size:Nnn \huge  {  2 } { }
  \ctex_set_font_size:Nnn \Huge  {  1 } { }
\or:
  \ctex_set_font_size:Nnn \normalsize { -4 }
    {
      \abovedisplayskip 12\p@ \@plus3\p@ \@minus7\p@
      \abovedisplayshortskip \z@ \@plus3\p@
      \belowdisplayshortskip 6.5\p@ \@plus3.5\p@ \@minus3\p@
      \belowdisplayskip \abovedisplayskip
      \let\@listi\@listI
    }
  \ctex_set_font_size:Nnn \small { 5 }
    {
      \abovedisplayskip 11\p@ \@plus3\p@ \@minus6\p@
      \abovedisplayshortskip \z@ \@plus3\p@
      \belowdisplayshortskip 6.5\p@ \@plus3.5\p@ \@minus3\p@
      \def\@listi{\leftmargin\leftmargini
                  \topsep 9\p@ \@plus3\p@ \@minus5\p@
                  \parsep 4.5\p@ \@plus2\p@ \@minus\p@
                  \itemsep \parsep}
      \belowdisplayskip \abovedisplayskip
    }
  \ctex_set_font_size:Nnn \footnotesize { -5 }
    {
      \abovedisplayskip 10\p@ \@plus2\p@ \@minus5\p@
      \abovedisplayshortskip \z@ \@plus3\p@
      \belowdisplayshortskip 6\p@ \@plus3\p@ \@minus3\p@
      \def\@listi{\leftmargin\leftmargini
                  \topsep 6\p@ \@plus2\p@ \@minus2\p@
                  \parsep 3\p@ \@plus2\p@ \@minus\p@
                  \itemsep \parsep}
      \belowdisplayskip \abovedisplayskip
    }
  \ctex_set_font_size:Nnn \scriptsize { 6 } { }
  \ctex_set_font_size:Nnn \tiny  { -6 } { }
  \ctex_set_font_size:Nnn \large { -3 } { }
  \ctex_set_font_size:Nnn \Large { -2 } { }
  \ctex_set_font_size:Nnn \LARGE {  2 } { }
  \ctex_set_font_size:Nnn \huge  { -1 } { }
  \ctex_set_font_size:Nnn \Huge  {  1 } { }
\fi:
%    \end{macrocode}
%
% \begin{macro}[internal]{\ctex_declare_math_sizes:nnnn}
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \ctex_declare_math_sizes:nnnn #1#2#3#4
  {
    \@@_get_font_sizes:Nn \l_@@_font_size_tl { {#1} {#2} {#3} {#4} }
    \exp_after:wN \DeclareMathSizes \l_@@_font_size_tl
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[aux]{\@@_get_font_sizes:Nn}
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \@@_get_font_sizes:Nn #1#2
  {
    \tl_clear:N #1
    \tl_map_inline:nn {#2}
      {
        \prop_get:NnNTF \c_@@_font_size_prop {##1} \l_@@_tmp_tl
          { \tl_put_right:Nx #1 { { \tl_head:N \l_@@_tmp_tl } } }
          { \tl_put_right:Nx #1 { { \dim_to_pt:n { ##1 pt } } } }
      }
  }
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
\clist_map_inline:nn
  {
    {  8 }{  8 }{ 5pt }{ 5pt } ,
    {  7 }{  7 }{ 5pt }{ 5pt } ,
    { -6 }{ -6 }{ 5pt }{ 5pt } ,
    {  6 }{  6 }{ 5pt }{ 5pt } ,
    { -5 }{ -5 }{ 6pt }{ 5pt } ,
    {  5 }{  5 }{ 7pt }{ 5pt } ,
    { -4 }{ -4 }{ 8pt }{ 6pt } ,
    {  4 }{  4 }{  5 }{  6 } ,
    { -3 }{ -3 }{ -4 }{ -5 } ,
    {  3 }{  3 }{  4 }{  5 } ,
    { -2 }{ -2 }{ -3 }{ -4 } ,
    {  2 }{  2 }{  3 }{  4 } ,
    { -1 }{ -1 }{ -2 }{ -3 } ,
    {  1 }{  1 }{  2 }{  3 } ,
    { -0 }{ -0 }{ -1 }{ -2 } ,
    {  0 }{  0 }{  1 }{  2 }
  }
  { \ctex_declare_math_sizes:nnnn #1 }
%    \end{macrocode}
%
% \subsubsection{行距与缩进}
%
% \begin{macro}[internal]{\CTEXsetfont,\ccwd}
% 在字号变化时更新 \cs{ccwd} 和 \cs{parindent}。字距为零则恢复正常设置。
%    \begin{macrocode}
\NewDocumentCommand \CTEXsetfont { }
  {
    \tl_if_eq:NNTF \l_@@_ziju_tl \c_@@_zero_tl
      {
        \ctex_update_stretch:
        \ctex_update_parindent:
      }
      { \ctex_update_ziju: }
  }
\dim_new:N \ccwd
\tl_const:Nx \c_@@_zero_tl { \fp_use:N \c_zero_fp }
\tl_new:N \l_@@_ziju_tl
\tl_set_eq:NN \l_@@_ziju_tl \c_@@_zero_tl
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[internal]{\ctex_update_size:}
% 在 \cs{selectfont} 中，若 \cs{size@update} 为 \cs{relax}，说明字体大小没有变化，
% 我们也就不用更新相关参数。
%    \begin{macrocode}
\ctex_add_to_selectfont:n { \ctex_update_size: }
\cs_new_protected_nopar:Npn \ctex_update_size:
  { \cs_if_free:NF \size@update { \CTEXsetfont } }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{linestretch}
% 若行宽不是汉字宽度的整数倍，自然要求伸展它们之间的差。这里设置的是在此基础上的
% 额外伸展量，初始化为 |\f@size\p@|。若设置为 \cs{maxdimen}，则禁用此功能。
%    \begin{macrocode}
\keys_define:nn { ctex }
  {
    linestretch  .tl_set:N = \l_@@_line_stretch_tl ,
    linestretch .initial:n = { \f@size \p@ }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[internal]{\ctex_update_stretch:}
% 首先计算一行上汉字的字数，\cs{CJKglue} 相当于将 \cs{linewidth} 与汉字总宽度之差
% 均匀地填充到汉字之间。\hologo{eTeX} 的除法是四舍五入，而我们这里应该用截断。由于
% 没有可展性的要求，直接用原语 \cs{tex_divide:D} 要比 \cs{int_div_truncate:nn}
% 快一些。下面的算法还兼顾到了 \cs{linewidth} 不为汉字字宽的整数倍的情况。
% 需要注意的是，这里假定汉字的宽度是 |\f@size\p@|，这应该对大多数汉字字体都成立，
% 但不适用于诸如“方正兰亭黑长”之类的特殊字体。\cs{ccwd} 的情况类似。
% 用 |\f@size\p@| 作为汉字的宽度，而不采用 \texttt{1 em}，因为这时的 \texttt{1 em}
% 实际上来自西文字体的信息，未必等于汉字的宽度，这似乎在传统的 \file{.tfm} 字体上
% 表现较更明显。
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \ctex_update_stretch:
  {
    \dim_set:Nn \ccwd { \f@size \p@ }
    \dim_set:Nn \l_@@_tmp_dim { \l_@@_line_stretch_tl }
    \dim_compare:nNnTF \l_@@_tmp_dim = \c_max_dim
      { \ctex_update_ccwd: }
      {
        \int_set:Nn \l_@@_tmp_int
          { \etex_dimexpr:D \linewidth - \ccwd - \l_@@_tmp_dim \scan_stop: }
        \tex_divide:D \l_@@_tmp_int \ccwd
        \skip_set:Nn \l_@@_ccglue_skip
          {
            \c_zero_dim plus \dim_eval:n
              { ( \linewidth - \ccwd - \l_@@_tmp_int \ccwd ) / \l_@@_tmp_int }
          }
        \ctex_update_ccglue:
      }
  }
\skip_new:N \l_@@_ccglue_skip
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[internal]{\ctex_update_ccwd:}
% \pkg{ctexsize} 单独使用时，分情况定义。
%    \begin{macrocode}
%<*ctexsize>
\cs_if_exist:NTF \CJKglue
  {
    \cs_new_protected_nopar:Npn \ctex_update_ccwd:
      {
        \group_begin:
          \hbox_set:Nn \l_tmpa_box { \CJKglue }
        \exp_after:wN \group_end: \exp_after:wN
        \dim_set:Nn \exp_after:wN \ccwd \exp_after:wN
          { \dim_use:N \box_wd:N \l_tmpa_box + \f@size \p@ }
      }
  }
  {
    \cs_if_exist:NTF \ltjgetparameter
      {
        \cs_new_protected_nopar:Npn \ctex_update_ccwd:
          { \skip_set:Nn \ccwd { \ltjgetparameter { kanjiskip } + \zw } }
      }
      {
        \cs_new_protected_nopar:Npn \ctex_update_ccwd:
          { \dim_set:Nn \ccwd { \f@size \p@ } }
      }
  }
%</ctexsize>
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[internal]{\ctex_update_parindent:}
% 更新段落首行缩进。此函数在字号变化时调用。
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \ctex_update_parindent:
  {
    \bool_if:NT \l_@@_autoindent_bool
      {
        \dim_compare:nNnF \parindent = \c_zero_dim
          { \dim_set:Nn \parindent { 2 \ccwd } }
      }
  }
%    \end{macrocode}
% \end{macro}
%
% 行距为 $1.2\times 1.3=2.56$ 倍字体大小。
%    \begin{macrocode}
\linespread { 1.3 }
%    \end{macrocode}
%
% 激活默认字体大小，更新 \cs{parindent}。
%    \begin{macrocode}
\normalsize
%    \end{macrocode}
%
% \begin{macro}{\CTEXindent,\CTEXnoindent}
% 过时命令。
%    \begin{macrocode}
\NewDocumentCommand \CTEXindent { }
  { \ctex_update_ccwd: \dim_set:Nn \parindent { 2 \ccwd } }
\NewDocumentCommand \CTEXnoindent { }
  { \dim_zero:N \parindent }
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
\bool_if:NT \l_@@_indent_bool
  { \RequirePackage { indentfirst } }
%    \end{macrocode}
%
% \subsubsection{字距}
%
%    \begin{macrocode}
%<*ctexsize>
\msg_new:nnn { ctex } { ziju-unavailable }
  { Command~`\token_to_str:N \ziju'~is~unavailable. }
\cs_if_exist:NTF \xeCJKsetup
  {
    \cs_new_protected_nopar:Npn \ctex_update_ccglue:
      { \xeCJKsetup { CJKglue = { \skip_horizontal:N \l_@@_ccglue_skip } } }
  }
  {
    \cs_if_exist:NTF \CJKglue
      {
        \cs_new_eq:NN \ctex_update_ccglue: \prg_do_nothing:
        \cs_set_protected_nopar:Npn \CJKglue
          { \skip_horizontal:N \l_@@_ccglue_skip }
      }
      {
        \cs_if_exist:NTF \ltjsetparameter
          {
            \cs_new_protected_nopar:Npn \ctex_update_ccglue:
              { \ltjsetparameter { kanjiskip = \l_@@_ccglue_skip } }
          }
          {
            \msg_warning:nn { ctex } { ziju-unavailable }
            \cs_set_eq:NN \ctex_update_stretch: \prg_do_nothing:
            \cs_set_eq:NN \ctex_update_ziju: \prg_do_nothing:
            \tex_endinput:D
          }
      }
  }
%</ctexsize>
%    \end{macrocode}
%
% \begin{macro}{\ziju}
% 若参数为 $0$，则恢复正常间距。使用 \cs{selectfont} 是为了保证字体大小值的正确。
%    \begin{macrocode}
\NewDocumentCommand \ziju { m }
  { \exp_args:Nx \ctex_ziju:n {#1} \tex_ignorespaces:D }
\cs_new_protected_nopar:Npn \ctex_ziju:n #1
  {
    \tl_set:Nx \l_@@_ziju_tl { \fp_eval:n {#1} }
    \cs_if_free:NTF \size@update
      { \CTEXsetfont } { \selectfont }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[internal]{\ctex_update_ziju:}
% 更新字距。若字距不大于 $-1$，即 \cs{ccwd} 为非正值，则不计算伸缩值。
% 否则，首先假定汉字的宽度为正常宽度加上字距，看一行上能正常放下多少个汉字。
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \ctex_update_ziju:
  {
    \dim_set:Nn \ccwd { \f@size \p@ }
    \dim_set:Nn \l_@@_ziju_dim { \l_@@_ziju_tl \ccwd }
    \dim_add:Nn \ccwd { \l_@@_ziju_dim }
    \dim_compare:nNnTF \ccwd > \c_zero_dim
%    \end{macrocode}
% 伸展量保证行内的剩余空白能够被均匀地填充到汉字之间，收缩的最大限度是让当前行
% 还能够再挤下一个汉字并且不会出现负间距。由 \TeX{} 决定伸展还是收缩。
%    \begin{macrocode}
      {
        \dim_set:Nn \l_@@_tmp_dim { \linewidth - \f@size \p@ }
        \int_set:Nn \l_@@_tmp_int { \l_@@_tmp_dim }
        \tex_divide:D \l_@@_tmp_int \ccwd
        \dim_sub:Nn \l_@@_tmp_dim { \l_@@_tmp_int \ccwd }
%    \end{macrocode}
% 由于 \cs{parindent} 是一个固定值，并不参与伸缩，容易导致第一行出现坏盒子。
% 我们在这里将字数减去 $2$，以此放大伸缩值。
%    \begin{macrocode}
        \dim_compare:nNnF \parindent = \c_zero_dim
          {
            \int_compare:nNnF \l_@@_tmp_int < \c_three
              { \int_sub:Nn \l_@@_tmp_int { \c_two } }
          }
        \skip_set:Nn \l_@@_ccglue_skip
          {
            \l_@@_ziju_dim
            plus  \dim_eval:n { \l_@@_tmp_dim / ( \l_@@_tmp_int ) }
            minus \dim_min:nn { \dim_abs:n { \l_@@_ziju_dim } }
              { ( \ccwd - \l_@@_tmp_dim ) / ( \l_@@_tmp_int + \c_one ) }
          }
      }
      { \skip_set:Nn \l_@@_ccglue_skip { \l_@@_ziju_dim } }
    \ctex_update_ccglue:
%    \end{macrocode}
% 字距设置得比较大时，为了尽量保证段首缩进能够与下一行对齐，应该需要相应地加上
% 或者减去伸缩值。但是这里并不清楚 \TeX{} 是伸展还是收缩，之前以“当前行是否还
% 放得下一个汉字”为标准加上或减去伸缩值的做法也未必与实际结果一致，所以只好还
% 是设置为 |2\ccwd|。
%    \begin{macrocode}
    \ctex_update_parindent:
  }
\dim_new:N \l_@@_ziju_dim
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
%</class|style|ctexsize>
%<*class|style>
%    \end{macrocode}
%
% \subsection{中文数字与日期}
%
%    \begin{macrocode}
\RequirePackage [ encoding = \l_@@_encoding_tl ] { zhnumber }
%    \end{macrocode}
%
% \begin{macro}{\chinese}
%    \begin{macrocode}
\cs_new_eq:NN \chinese \zhnum
\cs_new_eq:NN \Chinese \chinese
\cs_new_eq:NN \CTEXcounter \use_none:n
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\CTEXnumber,\CTEXdigits}
%    \begin{macrocode}
\NewDocumentCommand \CTEXnumber { m m }
  { \protected@edef #1 { \zhnumber {#2} } }
\NewDocumentCommand \CTEXdigits { m m }
  { \protected@edef #1 { \zhdigits {#2} } }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{today}
%    \begin{macrocode}
\cs_set_eq:NN \CTEX@todayold \today
\keys_define:nn { ctex }
  {
    today .choice: ,
    today / old     .code:n =
      { \cs_set_eq:NN \today \CTEX@todayold } ,
    today / small   .code:n =
      {
        \cs_set_eq:NN \today \zhtoday
        \zhnumsetup { time = Arabic }
      } ,
    today / big     .code:n =
      {
        \cs_set_eq:NN \today \zhtoday
        \zhnumsetup { time = Chinese }
      } ,
    today / unknown .code:n =
      { \msg_error:nnx { ctex } { today-undef } {#1} }
  }
\msg_new:nnnn { ctex } { today-undef }
  { Today~format~`#1'~is~undefined. }
  { Available~today~formats~are~`old',~`small',~and~`big'. }
\bool_if:NT \l_@@_caption_bool
  { \keys_set:nn { ctex } { today = small } }
%    \end{macrocode}
% \end{macro}
%
% \subsection{其它中文标题定义}
%
% \changes{v2.0}{2014/03/08}{将标题汉化功能加入 \pkg{ctex.sty}。}
%
%    \begin{macrocode}
\keys_define:nn { ctex }
  {
    contentsname   .tl_set:N = \contentsname ,
    listfigurename .tl_set:N = \listfigurename ,
    listtablename  .tl_set:N = \listtablename ,
    figurename     .tl_set:N = \figurename ,
    tablename      .tl_set:N = \tablename ,
    abstractname   .tl_set:N = \abstractname ,
    indexname      .tl_set:N = \indexname ,
    appendixname   .tl_set:N = \appendixname ,
%<article>    bibname        .tl_set:N = \refname
%<book|report>    bibname        .tl_set:N = \bibname
  }
%    \end{macrocode}
%
%    \begin{macrocode}
%<*style>
\msg_new:nnn { ctex } { ctexbibname }
  {
    Neither~`\token_to_str:N \bibname'~nor~`\token_to_str:N \refname'~can~be~found.\\
    The~key~`bibname'~will~set~`\token_to_str:N \ctexbibname'~to~the~given~value.
  }
\tl_if_exist:NTF \bibname
  { \keys_define:nn { ctex } { bibname .tl_set:N = \bibname } }
  {
    \tl_if_exist:NTF \refname
      { \keys_define:nn { ctex } { bibname .tl_set:N = \refname } }
      {
        \msg_warning:nn { ctex } { ctexbibname }
        \keys_define:nn { ctex } { bibname .tl_set:N = \ctexbibname }
      }
  }
%</style>
%    \end{macrocode}
%
%    \begin{macrocode}
%</class|style>
%<*class|heading>
%    \end{macrocode}
%
% \subsection{中文化的标题结构}
%
% \subsubsection{定义标题格式选项}
%
% \begin{variable}[internal]{\c_@@_headings_seq}
%    \begin{macrocode}
\seq_new:N \c_@@_headings_seq
\seq_gset_from_clist:Nn \c_@@_headings_seq
  {
%<article>    part , section , subsection , subsubsection ,
%<book|report>    part , chapter , section , subsection , subsubsection ,
    paragraph , subparagraph
  }
%    \end{macrocode}
% \end{variable}
%
% \begin{macro}[internal]{\@@_initial_heading:n}
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \@@_initial_heading:n #1
  {
    \tl_new:c { CTEX@pre#1 }
    \tl_new:c { CTEX@post#1 }
    \tl_const:cx { CTEXthe#1 }
      {
        \exp_not:c { CTEX@pre#1 }
        \exp_not:c { CTEX@the#1 }
        \exp_not:c { CTEX@post#1 }
      }
    \tl_const:cx { CTEX@#1name }
      {
        \exp_not:c { CTEX@#1@nameformat }
        \exp_not:c { CTEX@pre#1 }
        \exp_not:N \tl_if_empty:NTF \exp_not:c { CTEX@#1@numberformat }
          { \exp_not:c { CTEX@the#1 } }
          {
            \group_begin:
              \exp_not:c { CTEX@#1@numberformat }
              \exp_not:c { CTEX@the#1 }
            \group_end:
          }
        \exp_not:c { CTEX@post#1 }
        \exp_not:c { CTEX@#1@aftername }
      }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[internal]{\@@_def_heading_keys:n}
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \@@_def_heading_keys:n #1
  {
    \tl_put_right:Nx \l_@@_tmp_tl
      {
        #1                 .meta:nn = { ctex / #1 } { ####1 } ,
        #1 / name           .code:n =
          { \ctex_assign_heading_name:nn {#1} { ####1 } } ,
        #1 / number       .tl_set:N = \exp_not:c { CTEX@the#1 } ,
        #1 / format       .tl_set:N = \exp_not:c { CTEX@#1@format } ,
        #1 / nameformat   .tl_set:N = \exp_not:c { CTEX@#1@nameformat } ,
        #1 / numberformat .tl_set:N = \exp_not:c { CTEX@#1@numberformat } ,
        #1 / aftername    .tl_set:N = \exp_not:c { CTEX@#1@aftername } ,
        #1 / titleformat  .tl_set:N = \exp_not:c { CTEX@#1@titleformat } ,
        #1 / beforeskip   .tl_set:N = \exp_not:c { CTEX@#1@beforeskip } ,
        #1 / afterskip    .tl_set:N = \exp_not:c { CTEX@#1@afterskip} ,
        #1 / indent       .tl_set:N = \exp_not:c { CTEX@#1@indent } ,
        #1 / format+        .code:n =
          { \tl_put_right:Nn \exp_not:c { CTEX@#1@format } { ####1 } } ,
        #1 / nameformat+    .code:n =
          { \tl_put_right:Nn \exp_not:c { CTEX@#1@nameformat } { ####1 } } ,
        #1 / numberformat+  .code:n =
          { \tl_put_right:Nn \exp_not:c { CTEX@#1@numberformat } { ####1 } } ,
        #1 / aftername+     .code:n =
          { \tl_put_right:Nn \exp_not:c { CTEX@#1@aftername } { ####1 } } ,
        #1 / titleformat+   .code:n =
          { \tl_put_right:Nn \exp_not:c { CTEX@#1@titleformat } { ####1 } } ,
        #1 / beforeskip  .initial:n = \c_zero_skip ,
        #1 / afterskip   .initial:n = \c_zero_skip ,
        #1 / indent      .initial:n = \c_zero_dim ,
        #1 / beforeskip  .value_required: ,
        #1 / afterskip   .value_required: ,
        #1 / indent      .value_required: ,
      }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[internal]{\ctex_assign_heading_name:nn,\@@_assign_heading_name:nnn}
% \texttt{name} 的值是一个至多两个元素的逗号分隔列表。由于 \hologo{LaTeX3} 的
% \texttt{clist} 总是会自动忽略空元素，所以设置 |name={,章}| 后，第一个元素将会
% 是“章”，必须用空的分组保护空元素：|name={{},章}|，这在使用中有些许不便。我们
% 可以改用 \texttt{seq} 或者手写函数解析参数来加以改进。为实现的简单起见，这里用
% 了 \pkg{xparse} 的 \cs{SplitArgument}，它带有参数的长度检查。
%    \begin{macrocode}
\NewDocumentCommand \ctex_assign_heading_name:nn
  { m > { \SplitArgument { \c_one } { , } } +m }
  { \@@_assign_heading_name:nnn {#1} #2 }
\cs_new_protected:Npn \@@_assign_heading_name:nnn #1#2#3
  {
    \tl_set:cn { CTEX@pre#1 } {#2}
    \IfNoValueTF {#3}
      { \tl_clear:c { CTEX@post#1 } }
      { \tl_set:cn { CTEX@post#1 } {#3} }
  }
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
\tl_clear:N \l_@@_tmp_tl
\seq_map_inline:Nn \c_@@_headings_seq
  {
    \@@_initial_heading:n {#1}
    \@@_def_heading_keys:n {#1}
  }
\use:x { \keys_define:nn { ctex } { \exp_not:o { \l_@@_tmp_tl } } }
\tl_clear:N \l_@@_tmp_tl
%    \end{macrocode}
%
% \changes{v2.0}{2014/03/21}{标题设置新增 \texttt{pagestyle} 选项。}
%
% \begin{macro}{pagestyle}
% 只在 \cls{ctexbook} 和 \cls{ctexrep} 下有定义。
%    \begin{macrocode}
%<*book|report>
\keys_define:nn { ctex }
  {
    part    / pagestyle .tl_set:N = \CTEX@part@pagestyle ,
    chapter / pagestyle .tl_set:N = \CTEX@chapter@pagestyle
  }
%</book|report>
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
\keys_set:nn { ctex / part }
  {
    name        = \partname \space ,
    number      = \thepart ,
%<*article>
    format      = \raggedright ,
    nameformat  = \Large \bfseries ,
    aftername   = \par \nobreak ,
    titleformat = \huge \bfseries ,
    beforeskip  = 4ex ,
    afterskip   = 3ex
%</article>
%<*book|report>
    format      = \centering ,
    nameformat  = \huge \bfseries ,
    aftername   = \par \vskip 20 \p@ ,
    titleformat = \Huge \bfseries ,
    pagestyle   = plain
%</book|report>
  }
%    \end{macrocode}
%
%    \begin{macrocode}
%<*book|report>
\keys_set:nn { ctex / chapter }
  {
    name        = \chaptername \space ,
    number      = \thechapter ,
    format      = \raggedright ,
    nameformat  = \huge \bfseries ,
    aftername   = \par \nobreak \vskip 20 \p@ ,
    titleformat = \Huge \bfseries ,
    beforeskip  = 50 \p@ ,
    afterskip   = 40 \p@ ,
    pagestyle   = plain
  }
%</book|report>
%    \end{macrocode}
%
%    \begin{macrocode}
\keys_set:nn { ctex / section }
  {
    number      = \thesection ,
    format      = \Large \bfseries ,
    aftername   = \quad ,
    beforeskip  = 3.5ex \@plus 1ex \@minus .2ex ,
    afterskip   = 2.3ex \@plus .2ex
  }
%    \end{macrocode}
%
%    \begin{macrocode}
\keys_set:nn { ctex / subsection }
  {
    number      = \thesubsection ,
    format      = \large \bfseries ,
    aftername   = \quad ,
    beforeskip  = 3.25ex \@plus 1ex \@minus .2ex ,
    afterskip   = 1.5ex  \@plus .2ex
  }
%    \end{macrocode}
%
%    \begin{macrocode}
\keys_set:nn { ctex / subsubsection }
  {
    number      = \thesubsubsection ,
    format      = \normalsize \bfseries ,
    aftername   = \quad ,
    beforeskip  = 3.25ex \@plus 1ex \@minus .2ex ,
    afterskip   = 1.5ex  \@plus .2ex
  }
%    \end{macrocode}
%
%    \begin{macrocode}
\use:x
  {
    \keys_set:nn { ctex / paragraph }
      {
        \exp_not:n
          {
            number      = \theparagraph ,
            format      = \normalsize \bfseries ,
            aftername   = \quad ,
          }
        \int_compare:nNnTF \l_@@_section_depth_int > \c_two
          {
            \exp_not:n
              {
                beforeskip  = 3.25ex \@plus 1ex \@minus .2ex ,
                afterskip   = 1ex    \@plus .2ex
              }
          }
          {
            \exp_not:n
              {
                beforeskip  =  3.25ex \@plus 1ex \@minus .2ex ,
                afterskip   = -1em
              }
          }
      }
  }
%    \end{macrocode}
%
%    \begin{macrocode}
\use:x
  {
    \keys_set:nn { ctex / subparagraph }
      {
        \exp_not:n
          {
            number      = \thesubparagraph ,
            format      = \normalsize \bfseries ,
            aftername   = \quad ,
          }
        \int_compare:nNnTF \l_@@_section_depth_int > \c_three
          {
            \exp_not:n
              {
                beforeskip  = 3.25ex \@plus 1ex \@minus .2ex ,
                afterskip   = 1ex    \@plus .2ex ,
              }
          }
          {
            \exp_not:n
              {
                beforeskip  =  3.25ex \@plus 1ex \@minus .2ex ,
                afterskip   = -1em ,
              }
          }
        \int_compare:nNnF \l_@@_section_depth_int > \c_two
          { indent      = \exp_not:N \parindent }
      }
  }
%    \end{macrocode}
%
% \subsubsection{标准标题命令的修改}
%
% \paragraph{part 的标题}
%
%    \begin{macrocode}
%<@@=>
%    \end{macrocode}
%
% \begin{macro}[internal]{\part}
%    \begin{macrocode}
%<*article>
\renewcommand\part{%
   \if@noskipsec \leavevmode \fi
   \par
%  \addvspace{4ex}%
   \@tempskipa \CTEX@part@beforeskip \relax
   \ifdim \@tempskipa <\z@
     \@tempskipa -\@tempskipa \@afterindentfalse
   \else
     \@afterindenttrue
   \fi
   \addvspace{\@tempskipa}%
   \secdef\@part\@spart}
%</article>
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[internal]{\@part}
%    \begin{macrocode}
%<*article>
\def\@part[#1]#2{%
  \ifnum \c@secnumdepth >\m@ne
    \refstepcounter{part}%
%   \addcontentsline{toc}{part}{\thepart\hspace{1em}#1}%
    \addcontentsline{toc}{part}{\CTEXthepart\hspace{1em}#1}%
  \else
    \addcontentsline{toc}{part}{#1}%
  \fi
  {\interlinepenalty \@M
%  \normalfont \parindent \z@ \raggedright
   \normalfont \parindent \CTEX@part@indent \CTEX@part@format
   \ifnum \c@secnumdepth >\m@ne
%    \Large\bfseries\partname\nobreakspace\thepart\par\nobreak
     \CTEX@partname
   \fi
%  \huge\bfseries #2%
   \CTEX@part@titleformat{#2}%
   \markboth{}{}\par}%
  \nobreak
% \vskip 3ex
  \vskip \CTEX@part@afterskip
  \@afterheading}
%</article>
%    \end{macrocode}
%
% 标准文档类是在 \cs{part} 和 \cs{chapter} 定义的最开始设置 \cs{thispagestyle}，
% 我们这里的修改出现在它之后，可以覆盖之前的设置。
%    \begin{macrocode}
%<*book|report>
\def\@part[#1]#2{%
  \thispagestyle{\CTEX@part@pagestyle}%
  \ifnum \c@secnumdepth >-2\relax
    \refstepcounter{part}%
%   \addcontentsline{toc}{part}{\thepart\hspace{1em}#1}%
    \addcontentsline{toc}{part}{\CTEXthepart\hspace{1em}#1}%
  \else
    \addcontentsline{toc}{part}{#1}%
  \fi
  \markboth{}{}%
  {\interlinepenalty \@M
%  \normalfont \centering
   \normalfont \CTEX@part@format
   \ifnum \c@secnumdepth >-2\relax
%    \huge\bfseries\partname\nobreakspace\thepart\par\vskip 20\p@
     \CTEX@partname
   \fi
%  \Huge\bfseries #2\par}%
   \CTEX@part@titleformat{#2}\par}%
  \@endpart}
%</book|report>
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[internal]{\@spart}
%    \begin{macrocode}
%<*article>
\def\@spart#1{%
    {\interlinepenalty \@M
%    \normalfont \parindent \z@ \raggedright
     \normalfont \parindent \CTEX@part@indent \CTEX@part@format
%    \huge \bfseries #1\par}%
     \CTEX@part@titleformat{#1}\par}%
     \nobreak
%    \vskip 3ex
     \vskip \CTEX@part@afterskip
     \@afterheading}
%</article>
%<*book|report>
\def\@spart#1{%
    {\interlinepenalty \@M
%    \normalfont \centering
     \normalfont \CTEX@part@format
%    \Huge \bfseries #1\par}%
     \CTEX@part@titleformat{#1}\par}%
    \@endpart}
%</book|report>
%    \end{macrocode}
% \end{macro}
%
% \paragraph{chapter 的标题}
%
%    \begin{macrocode}
%<*book|report>
%    \end{macrocode}
%
% \begin{macro}[internal]{\@chapter}
%    \begin{macrocode}
\def\@chapter[#1]#2{%
  \ifnum \c@secnumdepth >\m@ne
%<book>    \if@mainmatter
      \refstepcounter{chapter}%
%     \typeout{\@chapapp\space\thechapter.}%
      \typeout{\CTEXthechapter}%
      \addcontentsline{toc}{chapter}
%       {\protect\numberline{\thechapter}#1}%
        {\protect\numberline{\CTEXthechapter\hspace{0.3em}}#1}%
%<book>    \else
%<book>      \addcontentsline{toc}{chapter}{#1}%
%<book>    \fi
  \else
    \addcontentsline{toc}{chapter}{#1}%
  \fi
  \chaptermark{#1}%
  \addtocontents{lof}{\protect\addvspace{10\p@}}%
  \addtocontents{lot}{\protect\addvspace{10\p@}}%
  \if@twocolumn
    \@topnewpage[\@makechapterhead{#2}]%
  \else
    \@makechapterhead{#2}%
  \@afterheading
  \fi}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[internal]{\@makechapterhead}
%    \begin{macrocode}
\def\@makechapterhead#1{%
  \thispagestyle{\CTEX@chapter@pagestyle}%
% \vspace*{50\p@}%
  \@tempskipa \CTEX@chapter@beforeskip \relax
  \ifdim \@tempskipa <\z@
    \@tempskipa -\@tempskipa \@afterindentfalse
  \else
    \@afterindenttrue
  \fi
  \vspace*{\@tempskipa}%
% {\normalfont \parindent \z@ \raggedright
  {\normalfont \parindent \CTEX@chapter@indent \CTEX@chapter@format
   \ifnum \c@secnumdepth >\m@ne
%<book>     \if@mainmatter
%      \huge\bfseries\@chapapp\space\thechapter\par\nobreak\vskip 20\p@
       \CTEX@chaptername
%<book>     \fi
   \fi
   \interlinepenalty\@M
%  \Huge \bfseries #1\par\nobreak
   \CTEX@chapter@titleformat{#1}\par\nobreak
%  \vskip 40\p@
   \vskip \CTEX@chapter@afterskip
  }}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[internal]{\@makeschapterhead}
%    \begin{macrocode}
\def\@makeschapterhead#1{%
  \thispagestyle{\CTEX@chapter@pagestyle}%
% \vspace*{50\p@}%
  \@tempskipa \CTEX@chapter@beforeskip \relax
  \ifdim \@tempskipa <\z@
    \@tempskipa -\@tempskipa \@afterindentfalse
  \else
    \@afterindenttrue
  \fi
  \vspace*{\@tempskipa}%
% {\normalfont \parindent \z@ \raggedright
  {\normalfont \parindent \CTEX@chapter@indent \CTEX@chapter@format
   \interlinepenalty\@M
%  \Huge \bfseries  #1\par\nobreak
   \CTEX@chapter@titleformat{#1}\par\nobreak
%  \vskip 40\p@
   \vskip \CTEX@chapter@afterskip
  }}
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
%</book|report>
%    \end{macrocode}
%
% \paragraph{section 类的标题}
%
% \begin{macro}[internal]{\@seccntformat}
%    \begin{macrocode}
\def\@seccntformat#1{%
  \@ifundefined{CTEX@#1name}%
    {\csname the#1\endcsname\quad}%
    {\csname CTEX@#1name\endcsname}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[internal]{\@sect}
%    \begin{macrocode}
\def\@sect#1#2#3#4#5#6[#7]#8{%
  \ifnum #2>\c@secnumdepth
    \let\@svsec\@empty
  \else
    \refstepcounter{#1}%
    \protected@edef\@svsec{\@seccntformat{#1}\relax}%
  \fi
  \@tempskipa #5\relax
  \ifdim \@tempskipa>\z@
    \begingroup
      #6{%
        \@hangfrom{\hskip #3\relax\@svsec}%
%       \interlinepenalty \@M #8\@@par}%
        \interlinepenalty \@M
        \csname CTEX@#1@titleformat\endcsname{#8}\@@par}%
    \endgroup
    \csname #1mark\endcsname{#7}%
    \addcontentsline{toc}{#1}{%
      \ifnum #2>\c@secnumdepth \else
%       \protect\numberline{\csname the#1\endcsname}%
        \protect\numberline{\@ifundefined{CTEXthe#1}%
                              {\csname the#1\endcsname}%
                              {\csname CTEXthe#1\endcsname}}%
      \fi
      #7}%
  \else
    \def\@svsechd{%
    #6{\hskip #3\relax
%     \@svsec #8}%
      \@svsec \csname CTEX@#1@titleformat\endcsname{#8}}%
    \csname #1mark\endcsname{#7}%
    \addcontentsline{toc}{#1}{%
      \ifnum #2>\c@secnumdepth \else
%       \protect\numberline{\csname the#1\endcsname}%
        \protect\numberline{\@ifundefined{CTEXthe#1}%
                              {\csname the#1\endcsname}%
                              {\csname CTEXthe#1\endcsname}}%
      \fi
      #7}}%
  \fi
  \@xsect{#5}}
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
%<@@=ctex>
%    \end{macrocode}
%
%    \begin{macrocode}
\int_zero:N \l_@@_tmp_int
\clist_map_inline:nn
  { section , subsection , subsubsection , paragraph , subparagraph }
  {
    \int_incr:N \l_@@_tmp_int
    \cs_gset_protected_nopar:cpx  {#1}
      {
        \exp_not:N \@startsection {#1}
          { \int_use:N \l_@@_tmp_int }
          { \exp_not:c { CTEX@#1@indent } }
          { \exp_not:c { CTEX@#1@beforeskip } }
          { \exp_not:c { CTEX@#1@afterskip } }
          { \exp_not:N \normalfont \exp_not:c { CTEX@#1@format } }
      }
  }
%    \end{macrocode}
%
%
% \paragraph{附录标题}
%
%    \begin{macrocode}
\tl_new:N \CTEX@preappendix
\tl_new:N \CTEX@postappendix
\keys_define:nn { ctex }
  { appendix .meta:nn = { ctex / appendix } {#1} }
\keys_define:nn { ctex / appendix }
  {
    name      .code:n = { \ctex_assign_heading_name:nn { appendix } {#1} } ,
    name   .initial:n = { \appendixname \space } ,
    number  .tl_set:N = \CTEX@appendixnumber ,
%<article>    number .initial:n = { \@Alph \c@section }
%<book|report>    number .initial:n = { \@Alph \c@chapter }
  }
%    \end{macrocode}
%
% \begin{macro}[internal]{\appendix}
%    \begin{macrocode}
\cs_new_eq:NN \CTEX@save@appendix \appendix
\cs_gset_protected_nopar:Npn \appendix
  {
    \CTEX@save@appendix
%<*article>
    \gdef \CTEX@presection { \CTEX@preappendix }
    \gdef \CTEX@thesection { \CTEX@appendixnumber }
    \gdef \CTEX@postsection { \CTEX@postappendix }
%</article>
%<*book|report>
    \gdef \CTEX@prechapter { \CTEX@preappendix }
    \gdef \CTEX@thechapter { \CTEX@appendixnumber }
    \gdef \CTEX@postchapter { \CTEX@postappendix }
%</book|report>
  }
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{目录标签的宽度}
%
% \begin{macro}[internal]{\numberline}
%   \begin{macrocode}
\cs_new_protected:Npn \CTEX@toc@width@n #1
  {
    \group_begin:
      \hbox_set:Nn \l_tmpa_box {#1}
    \exp_after:wN \group_end: \exp_after:wN
    \dim_set:Nn \exp_after:wN \@tempdima \exp_after:wN
      {
        \exp_after:wN \dim_max:nn \exp_after:wN
          { \dim_use:N \box_wd:N \l_tmpa_box + .5em } { \@tempdima }
      }
  }
\group_begin:
\char_set_catcode_other:N \#
\use:n
  {
    \group_end:
    \ExplSyntaxOff
    \xpretocmd \numberline { \CTEX@toc@width@n {#1} } { }
      { \ctex_patch_failure:N \numberline }
    \ExplSyntaxOn
    \AtBeginDocument
      {
        \@ifpackageloaded { tocloft }
          {
            \xpretocmd \numberline { \CTEX@toc@width@n {#1} } { }
              { \ctex_patch_failure:N \numberline }
          } { }
      }
  }
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{页眉信息的修改}
%
% \begin{macro}[internal]{\ps@headings}
%    \begin{macrocode}
%<*article>
\ctex_patch_cmd:Nnn \ps@headings { \thesection } { \CTEXthesection }
\if@twoside
  \ctex_patch_cmd:Nnn \ps@headings { \thesubsection } { \CTEXthesubsection }
\fi:
%</article>
%<*book|report>
\ctex_patch_cmd:Nnn \ps@headings
  { \@chapapp\ \thechapter.~\ } { \CTEXthechapter \quad }
\if@twoside
  \ctex_patch_cmd:Nnn \ps@headings { \thesection.~\ } { \CTEXthesection \quad }
\fi:
%</book|report>
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
\pagestyle { headings }
%    \end{macrocode}
%
%    \begin{macrocode}
\bool_if:NT \l_@@_fancyhdr_bool
  { \RequirePackage { fancyhdr } }
%    \end{macrocode}
%
% \begin{macro}[internal]{\ps@fancy}
%    \begin{macrocode}
\if_cs_exist:N \ps@fancy
  \ctex_patch_cmd:Nnn \ps@fancy
    { \thesection \hskip 1em \relax } { \CTEXthesection \quad }
  \ctex_patch_cmd:Nnn \ps@fancy
    { \thesubsection \hskip 1em \relax } { \CTEXthesubsection \quad }
%<*book|report>
  \ctex_patch_cmd:Nnn \ps@fancy { \@chapapp\ \thechapter.~\ }
%<book>    { \if@mainmatter \CTEXthechapter \quad \fi }
%<report>    { \CTEXthechapter \quad }
%</book|report>
  \ctex_patch_cmd:Nnn \ps@fancy { \thesection.~\ } { \CTEXthesection \quad }
\fi:
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{标签引用数字的汉化}
%
% \begin{macro}[internal]{\refstepcounter}
% 对标题进行引用时，设置标签为通过 \texttt{number} 选项设置的形式。
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \CTEX@setcurrentlabel@n #1
  {
    \protected@edef \@currentlabel
      {
        \cs_if_exist:cTF { CTEX@the#1 }
          { \exp_args:cc { p@#1 } { CTEX@the#1 } }
          { \exp_not:o { \@currentlabel } }
      }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[internal]{\ctex_varioref_hook:}
% 关于标签引用的宏包可能会修改 \cs{refstepcounter}。其中 \pkg{cleveref} 和
% \pkg{hyperref} 宏包都会保存之前的定义，并且它们都要求尽可能晚的被载入，所以
% 对我们上述的修改影响不大。需要注意的是 \pkg{varioref} 宏包，如果它在
% \pkg{ctex} 之后被载入，我们之前的修改将会被覆盖。
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \ctex_varioref_hook:
  {
    \seq_map_inline:Nn \c_@@_headings_seq
      { \ctex_fix_varioref_label:n { ##1 } }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[internal]{\@@_fix_varioref_label:n}
% \pkg{varioref} 宏包的 \cs{labelformat} 实际上是定义一个以 |\the<#1>| 为参数的宏
% |\p@<#1>|。\LaTeX{} 在定义计数器 |<#1>| 时，都会将 |\p@<#1>| 初始化为 \cs{@empty}。
% 如果这个宏非空，说明用户自定义了标签格式，我们就不再修改。这里不能使用
% \cs{exp_args:Nnc}，因为 \texttt{c} 这种展开格式不会将参数放在花括号内。而
% \cs{labelformat} 的定义是
% \begin{verbatim}
%   \def\labelformat#1{\expandafter\def\csname p@#1\endcsname##1}
% \end{verbatim}
% 它的第二个参数必须放在花括号内，否则将会被作为宏的定界符号。
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \ctex_fix_varioref_label:n #1
  {
    \tl_if_empty:cT { p@#1 }
      { \exp_args:Nno \labelformat {#1} { \cs:w CTEX@the#1 \cs_end: } }
  }
%    \end{macrocode}
% \end{macro}
%
% 如果 \pkg{varioref} 已经被载入，则使用它来设置。
%    \begin{macrocode}
\@ifpackageloaded { varioref }
  { \ctex_varioref_hook: }
  {
    \cs_new_eq:NN \CTEX@save@refstepcounter \refstepcounter
    \RenewDocumentCommand \refstepcounter { m }
      {
        \CTEX@save@refstepcounter {#1}
        \CTEX@setcurrentlabel@n {#1}
      }
    \AtBeginDocument
      { \@ifpackageloaded { varioref } { \ctex_varioref_hook: } { } }
  }
%    \end{macrocode}
%
% \subsubsection{修改默认标题格式}
%
%    \begin{macrocode}
\if_bool:N \l_@@_caption_bool
  \keys_set:nn { ctex / part }
    {
      number      = \chinese { part } ,
%<*article>
      format      = \centering ,
      aftername   = \quad ,
      titleformat = \Large\bfseries
%</article>
%<*book|report>
      titleformat = \huge \bfseries
%</book|report>
    }
%<*book|report>
  \keys_set:nn { ctex / chapter }
    {
      number      = \chinese { chapter } ,
      format      = \centering ,
      aftername   = \quad ,
      titleformat = \huge \bfseries
    }
%</book|report>
  \keys_set:nn  { ctex / section }
    { format = \Large \bfseries \centering }
%<article>  \keys_set:nn { ctex / appendix } { name = { } }
  \str_if_eq:onTF { \l_@@_encoding_tl } { GBK }
    { \ctex_file_input:n { ctexcap-gbk.cfg } }
    { \ctex_file_input:n { ctexcap-utf8.cfg } }
\fi:
%    \end{macrocode}
%
%    \begin{macrocode}
%</class|heading>
%<*style>
%    \end{macrocode}
%
% \subsubsection{\pkg{ctex.sty} 的 \texttt{heading} 选项}
%
%    \begin{macrocode}
\msg_new:nnn { warning } { not-standard-class }
  {
    None~of~the~standard~document~classes~was~loaded.\\
    ctex~may~not~work~as~expected.
  }
\bool_if:NTF \l_@@_heading_bool
  {
    \clist_map_inline:nn { article , book , report }
      {
        \@ifclassloaded {#1}
          { \clist_map_break:n { \tl_const:Nn \c_@@_class_tl {#1} } } { }
      }
    \tl_if_exist:NTF \c_@@_class_tl
      { \ctex_file_input:n { ctex- \c_@@_class_tl .def } }
      {
        \msg_warning:nn { ctex } { not-standard-class }
        \cs_if_exist:NTF \chapter
          {
            \cs_if_exist:NF \if@mainmatter
              { \cs_new_eq:NN \if@mainmatter \tex_iftrue:D }
            \ctex_file_input:n { ctex-book.def }
          }
          { \ctex_file_input:n { ctex-article.def } }
      }
  }
  {
    \bool_if:NT \l_@@_caption_bool
      {
        \str_if_eq:onTF { \l_@@_encoding_tl } { GBK }
          { \ctex_file_input:n { ctexcap-gbk.cfg } }
          { \ctex_file_input:n { ctexcap-utf8.cfg } }
      }
  }
%    \end{macrocode}
%
%    \begin{macrocode}
%</style>
%<*UTF8|GBK>
%    \end{macrocode}
%
% \subsubsection{标题配置文件}
%
%    \begin{macrocode}
\keys_set:nn { ctex }
  {
    contentsname   = 目录 ,
    listfigurename = 插图 ,
    listtablename  = 表格 ,
    figurename     = 图 ,
    tablename      = 表 ,
    abstractname   = 摘要 ,
    indexname      = 索引 ,
    bibname        = 参考文献 ,
    appendixname   = 附录
  }
%    \end{macrocode}
%
%    \begin{macrocode}
\keys_if_exist:nnT { ctex / part } { name }
  {
    \keys_set:nn { ctex / part } { name = { 第 , 部分 } }
    \keys_if_exist:nnT { ctex / chapter } { name }
      { \keys_set:nn { ctex / chapter } { name = { 第 , 章 } } }
  }
%    \end{macrocode}
%
%    \begin{macrocode}
%</UTF8|GBK>
%<*class|style>
%    \end{macrocode}
%
% \subsection{其它功能}
%
% \changes{v2.0}{2014/03/28}{\texttt{captiondelimiter} 是过时选项。}
% \begin{macro}[internal]{captiondelimiter}
% 过时选项。
%    \begin{macrocode}
\keys_define:nn { ctex }
  {
    captiondelimiter .code:n =
      { \msg_warning:nn { ctex } { captiondelimiter } }
  }
\msg_new:nnn { ctex } { captiondelimiter }
  {
    Option~`captiondelimiter'~is~deprecated.\\
    You~can~load~the~package~`caption'~to~get~its~functionality.
  }
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{列表环境的缩进}
%
% \begin{macro}[internal]{\verse,\quotation}
%    \begin{macrocode}
\ctex_patch_cmd:Nnn \verse { -1.5em } { -2 \ccwd }
\ctex_patch_cmd:Nnn \verse {  1.5em } {  2 \ccwd }
\ctex_patch_cmd:Nnn \quotation { 1.5em } { 2 \ccwd }
%    \end{macrocode}
% \end{macro}
%
% \subsubsection{其它兼容性修改}
%
% \begin{macro}[internal]{\end}
% \changes{v2.0}{2014/03/09}
% {解决 \pkg{etoolbox} 与 \pkg{breqn} 关于 \cs{end} 的冲突。}
% \pkg{breqn} 宏包对 \cs{end} 作了如下处理，然而这个处理并不保险。
% \begin{verbatim}
%   \def\@tempa#1\endcsname#2\@nil{\def\latex@end##1{#2}}
%   \expandafter\@tempa\end{#1}\@nil
%   \def\end#1{\csname end#1\endcsname \latex@end{#1}}%
% \end{verbatim}
% \pkg{etoolbox} 在 \cs{end} 定义中的 \cs{csname} 前加入
% 钩子 |\csuse{@end@#1@hook}|。如果 \pkg{etoolbox} 先于 \pkg{breqn} 被载入（这
% 在使用 \cls{ctexart} 等文档类时几乎是必然的），|\csuse{@end@#1@hook}| 将会被
% 忽略，即 \cs{AtEndEnvironment} 失效。如果交换两个宏包的载入顺序，则
% \pkg{etoolbox} 会给出警告：\cs{AfterEndEnvironment} 失效，我们不打算处理这种
% 情况。我们通过一个特殊的环境来完成检查。
%    \begin{macrocode}
\newenvironment { @@_test_env }
  { \bool_gset_false:N \g_@@_tmp_bool } { }
\AtEndEnvironment { @@_test_env }
  { \bool_gset_true:N \g_@@_tmp_bool }
\group_begin:
\char_set_catcode_other:N \#
\cs_new_protected_nopar:Npn \ctex_fix_end_env_hook:
  {
    \begin { @@_test_env } \end { @@_test_env }
    \bool_if:NF \g_@@_tmp_bool
      {
        \xpatchcmd \end { \csname end#1 \endcsname }
          {
            \csuse { @end@#1@hook }
            \csname end#1 \endcsname
          } { }
          {
            \xpretocmd \end { \csuse { @end@#1@hook } }
              { } { \ctex_patch_failure:N \end }
          }
      }
  }
\group_end:
\AtBeginDocument { \ctex_fix_end_env_hook: }
%    \end{macrocode}
% \end{macro}
%
% \subsection{载入中文字体}
%
%    \begin{macrocode}
\msg_new:nnnn { ctex } { fontset-undef }
  { CJK~fontset~`#1'~is~undefined. }
  { You~may~use~`fandol'~instead~of~it. }
%    \end{macrocode}
%
% \begin{macro}[internal]{\ctex_fontset_error:n}
%    \begin{macrocode}
\cs_new_protected_nopar:Npn \ctex_fontset_error:n #1
  { \msg_critical:nnn { ctex } { fontset-unavailable } {#1} }
\msg_new:nnn { ctex } { fontset-unavailable }
  { CJK~fontset~`#1'~is~unavailable~in~current~mode. }
%    \end{macrocode}
% \end{macro}
%
%    \begin{macrocode}
\str_if_eq:onF { \l_@@_fontset_tl } { none }
  {
    \file_if_exist:nTF { ctex-fontset- \l_@@_fontset_tl .def }
      { \ctex_file_input:n { ctex-fontset- \l_@@_fontset_tl .def } }
      { \msg_error:nnx { ctex } { fontset-undef } { \l_@@_fontset_tl } }
  }
%    \end{macrocode}
%
% \subsection{宏包配置文件}
%
% \subsubsection{\pkg{ctex.cfg}}
%
%    \begin{macrocode}
\AtEndOfPackage { \ctex_file_input:n { ctex.cfg } }
%    \end{macrocode}
%
%    \begin{macrocode}
%</class|style>
%    \end{macrocode}
%
%    \begin{macrocode}
%<*config>
%%
%</config>
%    \end{macrocode}
%
% \subsubsection{\pkg{ctexopts.cfg}}
%
%    \begin{macrocode}
%<*ctexopts>
%%
%% \keys_set:nn { ctex / option } { fontset = windows }
%</ctexopts>
%    \end{macrocode}
%
% \subsection{字体定义文件}
%
% \subsubsection{传统定义方式}
%
%    \begin{macrocode}
%<*c19|c70>
%%
%% Chinese characters
%%
%<c19>%% character set: GBK (extension of GB 2312)
%<c70>%% character set: Unicode
%% font encoding: Unicode
%%
%</c19|c70>
%    \end{macrocode}
%
%    \begin{macrocode}
%<rm&c19>\DeclareFontFamily{C19}{rm}{\hyphenchar \font\m@ne}
%<rm&c70>\DeclareFontFamily{C70}{rm}{\hyphenchar \font\m@ne}
%<sf&c19>\DeclareFontFamily{C19}{sf}{\hyphenchar \font\m@ne}
%<sf&c70>\DeclareFontFamily{C70}{sf}{\hyphenchar \font\m@ne}
%<tt&c19>\DeclareFontFamily{C19}{tt}{\hyphenchar \font\m@ne}
%<tt&c70>\DeclareFontFamily{C70}{tt}{\hyphenchar \font\m@ne}
%    \end{macrocode}
%
%    \begin{macrocode}
%<*rm>
%<*c19>
\DeclareFontShape{C19}{rm}{m}{n}{<-> CJK * gbksong}{\CJKnormal}
\DeclareFontShape{C19}{rm}{b}{n}{<-> CJK * gbkhei}{\CJKnormal}
\DeclareFontShape{C19}{rm}{bx}{n}{<-> CJK * gbkhei}{\CJKnormal}
\DeclareFontShape{C19}{rm}{m}{sl}{<-> CJK * gbksongsl}{\CJKnormal}
\DeclareFontShape{C19}{rm}{b}{sl}{<-> CJK * gbkheisl}{\CJKnormal}
\DeclareFontShape{C19}{rm}{bx}{sl}{<-> CJK * gbkheisl}{\CJKnormal}
\DeclareFontShape{C19}{rm}{m}{it}{<-> CJK * gbkkai}{\CJKnormal}
\DeclareFontShape{C19}{rm}{b}{it}{<-> CJKb * gbkkai}{\CJKbold}
\DeclareFontShape{C19}{rm}{bx}{it}{<-> CJKb * gbkkai}{\CJKbold}
%</c19>
%<*c70>
\DeclareFontShape{C70}{rm}{m}{n}{<-> CJK * unisong}{\CJKnormal}
\DeclareFontShape{C70}{rm}{b}{n}{<-> CJK * unihei}{\CJKnormal}
\DeclareFontShape{C70}{rm}{bx}{n}{<-> CJK * unihei}{\CJKnormal}
\DeclareFontShape{C70}{rm}{m}{sl}{<-> CJK * unisongsl}{\CJKnormal}
\DeclareFontShape{C70}{rm}{b}{sl}{<-> CJK * uniheisl}{\CJKnormal}
\DeclareFontShape{C70}{rm}{bx}{sl}{<-> CJK * uniheisl}{\CJKnormal}
\DeclareFontShape{C70}{rm}{m}{it}{<-> CJK * unikai}{\CJKnormal}
\DeclareFontShape{C70}{rm}{b}{it}{<-> CJKb * unikai}{\CJKbold}
\DeclareFontShape{C70}{rm}{bx}{it}{<-> CJKb * unikai}{\CJKbold}
%</c70>
%</rm>
%    \end{macrocode}
%
%    \begin{macrocode}
%<*sf>
%<*c19>
\DeclareFontShape{C19}{sf}{m}{n}{<-> CJK * gbkyou}{\CJKnormal}
\DeclareFontShape{C19}{sf}{b}{n}{<-> CJKb * gbkyou}{\CJKbold}
\DeclareFontShape{C19}{sf}{bx}{n}{<-> CJKb * gbkyou}{\CJKbold}
\DeclareFontShape{C19}{sf}{m}{sl}{<-> CJK * gbkyousl}{\CJKnormal}
\DeclareFontShape{C19}{sf}{b}{sl}{<-> CJKb * gbkyousl}{\CJKbold}
\DeclareFontShape{C19}{sf}{bx}{sl}{<-> CJKb * gbkyousl}{\CJKbold}
\DeclareFontShape{C19}{sf}{m}{it}{<-> CJK * gbkyou}{\CJKnormal}
\DeclareFontShape{C19}{sf}{b}{it}{<-> CJKb * gbkyou}{\CJKbold}
\DeclareFontShape{C19}{sf}{bx}{it}{<-> CJKb * gbkyou}{\CJKbold}
%</c19>
%<*c70>
\DeclareFontShape{C70}{sf}{m}{n}{<-> CJK * uniyou}{\CJKnormal}
\DeclareFontShape{C70}{sf}{b}{n}{<-> CJKb * uniyou}{\CJKbold}
\DeclareFontShape{C70}{sf}{bx}{n}{<-> CJKb * uniyou}{\CJKbold}
\DeclareFontShape{C70}{sf}{m}{sl}{<-> CJK * uniyousl}{\CJKnormal}
\DeclareFontShape{C70}{sf}{b}{sl}{<-> CJKb * uniyousl}{\CJKbold}
\DeclareFontShape{C70}{sf}{bx}{sl}{<-> CJKb * uniyousl}{\CJKbold}
\DeclareFontShape{C70}{sf}{m}{it}{<-> CJK * uniyou}{\CJKnormal}
\DeclareFontShape{C70}{sf}{b}{it}{<-> CJKb * uniyou}{\CJKbold}
\DeclareFontShape{C70}{sf}{bx}{it}{<-> CJKb * uniyou}{\CJKbold}
%</c70>
%</sf>
%    \end{macrocode}
%
%    \begin{macrocode}
%<*tt>
%<*c19>
\DeclareFontShape{C19}{tt}{m}{n}{<-> CJK * gbkfs}{\CJKnormal}
\DeclareFontShape{C19}{tt}{b}{n}{<-> CJKb * gbkfs}{\CJKbold}
\DeclareFontShape{C19}{tt}{bx}{n}{<-> CJKb * gbkfs}{\CJKbold}
\DeclareFontShape{C19}{tt}{m}{sl}{<-> CJK * gbkfssl}{\CJKnormal}
\DeclareFontShape{C19}{tt}{b}{sl}{<-> CJKb * gbkfssl}{\CJKbold}
\DeclareFontShape{C19}{tt}{bx}{sl}{<-> CJKb * gbkfssl}{\CJKbold}
\DeclareFontShape{C19}{tt}{m}{it}{<-> CJK * gbkfs}{\CJKnormal}
\DeclareFontShape{C19}{tt}{b}{it}{<-> CJKb * gbkfs}{\CJKbold}
\DeclareFontShape{C19}{tt}{bx}{it}{<-> CJKb * gbkfs}{\CJKbold}
%</c19>
%<*c70>
\DeclareFontShape{C70}{tt}{m}{n}{<-> CJK * unifs}{\CJKnormal}
\DeclareFontShape{C70}{tt}{b}{n}{<-> CJKb * unifs}{\CJKbold}
\DeclareFontShape{C70}{tt}{bx}{n}{<-> CJKb * unifs}{\CJKbold}
\DeclareFontShape{C70}{tt}{m}{sl}{<-> CJK * unifssl}{\CJKnormal}
\DeclareFontShape{C70}{tt}{b}{sl}{<-> CJKb * unifssl}{\CJKbold}
\DeclareFontShape{C70}{tt}{bx}{sl}{<-> CJKb * unifssl}{\CJKbold}
\DeclareFontShape{C70}{tt}{m}{it}{<-> CJK * unifs}{\CJKnormal}
\DeclareFontShape{C70}{tt}{b}{it}{<-> CJKb * unifs}{\CJKbold}
\DeclareFontShape{C70}{tt}{bx}{it}{<-> CJKb * unifs}{\CJKbold}
%</c70>
%</tt>
%    \end{macrocode}
%
%    \begin{macrocode}
%<*fontset>
%<*windows>
%    \end{macrocode}
%
% \subsubsection{\pkg{ctex-fontset-windows.def}}
%
%    \begin{macrocode}
\pdftex_if_engine:TF
  {
    \bool_if:NTF \l_@@_zhmCJK_bool
      {
        \setCJKmainfont
          [ BoldFont = simhei.ttf , ItalicFont = simkai.ttf ] { simsun.ttc }
        \file_if_exist:nTF { C:/boot.ini }
          { \setCJKsansfont { simhei.ttf } }
          { \setCJKsansfont [ BoldFont = msyhbd.ttf ] { msyh.ttf } }
        \setCJKmonofont { simfang.ttf }
        \setCJKfamilyfont { zhkai }  { simkai.ttf }
        \setCJKfamilyfont { zhfs }   { simfang.ttf }
        \setCJKfamilyfont { zhsong } { simsun.ttc }
        \setCJKfamilyfont { zhhei }  { simhei.ttf }
        \setCJKfamilyfont { zhli }   { simli.ttf }
        \setCJKfamilyfont { zhyou }  { simyou.ttf }
        \setCJKfamilyfont { zhyahei }
          [ BoldFont = msyhbd.ttf ] { msyh.ttf }
      }
      {
        \bool_if:NTF \l_@@_zhmap_bool
          { \ctex_load_zhmap:n { zhwinfonts } }
          {
            \tl_set:Nn \CJKrmdefault { rm }
            \tl_set:Nn \CJKsfdefault { sf }
            \tl_set:Nn \CJKttdefault { tt }
          }
      }
  }
  {
    \file_if_exist:nTF { C:/boot.ini }
      {
        \setCJKmainfont
          [ BoldFont = SimHei , ItalicFont = KaiTi_GB2312 ] { SimSun }
        \setCJKsansfont { SimHei }
        \setCJKmonofont { FangSong_GB2312 }
        \setCJKfamilyfont { zhkai } { KaiTi_GB2312 }
        \setCJKfamilyfont { zhfs }  { FangSong_GB2312 }
      }
      {
        \setCJKmainfont
          [ BoldFont = SimHei , ItalicFont = KaiTi ] { SimSun }
        \setCJKsansfont
          [ BoldFont = { *~Bold } ] { Microsoft~YaHei }
        \setCJKmonofont { FangSong }
        \setCJKfamilyfont { zhkai } { KaiTi }
        \setCJKfamilyfont { zhfs }  { FangSong }
      }
    \setCJKfamilyfont { zhsong }  { SimSun }
    \setCJKfamilyfont { zhhei }   { SimHei }
    \setCJKfamilyfont { zhli }    { LiSu }
    \setCJKfamilyfont { zhyou }   { YouYuan }
    \setCJKfamilyfont { zhyahei }
      [ BoldFont = { *~Bold } ] { Microsoft~YaHei }
  }
%    \end{macrocode}
%
%    \begin{macrocode}
%</windows>
%<*adobe>
%    \end{macrocode}
%
% \subsubsection{\pkg{ctex-fontset-adobe.def}}
%
%    \begin{macrocode}
\pdftex_if_engine:TF
  {
    \ctex_if_pdfmode:TF
      { \ctex_fontset_error:n { adobe } }
      {
        \bool_if:NTF \l_@@_zhmCJK_bool
          {
            \setCJKmainfont
              [
                      cmap = UniGB-UTF16-H ,
                  BoldFont = AdobeHeitiStd-Regular.otf ,
                ItalicFont = AdobeKaitiStd-Regular.otf
              ] { AdobeSongStd-Light.otf }
            \setCJKsansfont [ cmap = UniGB-UTF16-H ] { AdobeHeitiStd-Regular.otf }
            \setCJKmonofont [ cmap = UniGB-UTF16-H ] { AdobeFangsongStd-Regular.otf }
            \setCJKfamilyfont { zhsong }
              [ cmap = UniGB-UTF16-H ] { AdobeSongStd-Light.otf }
            \setCJKfamilyfont { zhhei }
              [ cmap = UniGB-UTF16-H ] { AdobeHeitiStd-Regular.otf }
            \setCJKfamilyfont { zhkai }
              [ cmap = UniGB-UTF16-H ] { AdobeKaitiStd-Regular.otf }
            \setCJKfamilyfont { zhfs }
              [ cmap = UniGB-UTF16-H ] { AdobeFangsongStd-Regular.otf }
          }
          {
            \bool_if:NTF \l_@@_zhmap_bool
              { \ctex_load_zhmap:n { zhadobefonts } }
              { \ctex_fontset_error:n { adobe } }
          }
      }
  }
  {
    \setCJKmainfont
      [
          BoldFont = AdobeHeitiStd-Regular ,
        ItalicFont = AdobeKaitiStd-Regular
      ] { AdobeSongStd-Light }
    \setCJKsansfont { AdobeHeitiStd-Regular}
    \setCJKmonofont { AdobeFangsongStd-Regular}
    \setCJKfamilyfont { zhsong } { AdobeSongStd-Light }
    \setCJKfamilyfont { zhhei }  { AdobeHeitiStd-Regular }
    \setCJKfamilyfont { zhfs }   { AdobeFangsongStd-Regular }
    \setCJKfamilyfont { zhkai }  { AdobeKaitiStd-Regular }
  }
%    \end{macrocode}
%
%    \begin{macrocode}
%</adobe>
%<*fandol>
%    \end{macrocode}
%
% \subsubsection{\pkg{ctex-fontset-fandol.def}}
%
%    \begin{macrocode}
\pdftex_if_engine:TF
  {
    \ctex_if_pdfmode:TF
      { \ctex_fontset_error:n { fandol } }
      {
        \bool_if:NTF \l_@@_zhmCJK_bool
          {
            \setCJKmainfont
              [
                      cmap = UniGB-UTF16-H ,
                  BoldFont = FandolSong-Bold.otf ,
                ItalicFont = FandolKai-Regular.otf
              ] { FandolSong-Regular.otf }
            \setCJKsansfont
              [
                    cmap = UniGB-UTF16-H ,
                BoldFont = FandolHei-Bold.otf
              ] { FandolHei-Regular.otf }
            \setCJKmonofont [ cmap = UniGB-UTF16-H ] { FandolFang-Regular.otf }
            \setCJKfamilyfont { zhsong }
              [
                    cmap = UniGB-UTF16-H ,
                BoldFont = FandolSong-Bold.otf
              ] { FandolSong-Regular.otf }
            \setCJKfamilyfont { zhhei }
              [
                    cmap = UniGB-UTF16-H ,
                BoldFont = FandolHei-Bold.otf
              ] { FandolHei-Regular.otf }
            \setCJKfamilyfont { zhfs }
              [ cmap = UniGB-UTF16-H ] { FandolFang-Regular.otf }
            \setCJKfamilyfont { zhkai }
              [ cmap = UniGB-UTF16-H ] { FandolKai-Regular.otf }
          }
          {
            \bool_if:NTF \l_@@_zhmap_bool
              { \ctex_load_zhmap:n { zhfandolfonts } }
              { \ctex_fontset_error:n { fandol } }
          }
      }
  }
  {
    \setCJKmainfont
      [ BoldFont = FandolSong-Bold , ItalicFont = FandolKai ] { FandolSong-Regular }
    \setCJKsansfont [ BoldFont = FandolHei-Bold ] { FandolHei-Regular }
    \setCJKmonofont { FandolFang }
    \setCJKfamilyfont { zhsong } [ BoldFont = FandolSong-Bold ] { FandolSong }
    \setCJKfamilyfont { zhhei }  [ BoldFont = FandolHei-Bold ]  { FandolHei }
    \setCJKfamilyfont { zhfs }  { FandolFang }
    \setCJKfamilyfont { zhkai } { FandolKai }
  }
%    \end{macrocode}
%
%    \begin{macrocode}
%</fandol>
%<*mac>
%    \end{macrocode}
%
% \subsubsection{\pkg{ctex-fontset-mac.def}}
%
%    \begin{macrocode}
\pdftex_if_engine:TF
  { \ctex_fontset_error:n { mac } }
  {
    \setCJKmainfont [ BoldFont = STHeiti , ItalicFont = STKaiti ]  { STSong }
    \setCJKsansfont [ BoldFont = STHeiti ] { STXihei }
    \setCJKmonofont { STFangsong }
    \setCJKfamilyfont { zhsong } { STSong }
    \setCJKfamilyfont { zhhei }  { STHeiti }
    \setCJKfamilyfont { zhfs }   { STFangsong }
    \setCJKfamilyfont { zhkai }  { STKaiti }
  }
%    \end{macrocode}
%
%    \begin{macrocode}
%</mac>
%<*founder>
%    \end{macrocode}
%
% \subsubsection{\pkg{ctex-fontset-founder.def}}
%
%    \begin{macrocode}
\pdftex_if_engine:TF
  {
    \bool_if:NTF \l_@@_zhmCJK_bool
      {
        \setCJKmainfont
          [ BoldFont = FZXBSK.TTF , ItalicFont = FZKTK.TTF ] { FZSSK.TTF }
        \setCJKsansfont [ BoldFont = FZHTK.TTF ] { FZXH1K.TTF }
        \setCJKmonofont { FZFSK.TTF }
        \setCJKfamilyfont { zhsong } [ BoldFont = FZXBSK.TTF ] { FZSSK.TTF }
        \setCJKfamilyfont { zhhei }  { FZHTK.TTF }
        \setCJKfamilyfont { zhkai }  { FZKTK.TTF }
        \setCJKfamilyfont { zhfs }   { FZFSK.TTF }
        \setCJKfamilyfont { zhli }   { FZLSK.TTF }
        \setCJKfamilyfont { zhyou } [ BoldFont = FZY3K.TTF ] { FZY1K.TTF }
      }
      {
        \bool_if:NTF \l_@@_zhmap_bool
          { \ctex_load_zhmap:n { zhfounderfonts } }
          { \ctex_fontset_error:n { founder } }
      }
  }
  {
    \setCJKmainfont
      [ BoldFont = FZXiaoBiaoSong-B05 , ItalicFont = FZKai-Z03 ] { FZShuSong-Z01 }
%    \end{macrocode}
%
% 在 WPS For Linux 附带的 5.00 版和家庭版 5.20 版的“方正细黑一\_GBK”的字体名称
% 是 |FZXiHeiI-Z08|。但在网上发现不少文档和资料都是 \verb*|FZXiHei I-Z08|，而在
% 官方资料《2013 方正字库字体样张》中对应的英文名字是 \verb*|FZXiHei I|。可以用
% Postscript 名字 |FZXH1K--GBK1-0| 来统一。经测试时发现（WPS 中的字体），\XeTeX{}
% 找该字体时会出现明显的延迟，而用字体文件名 |FZXH1K.TTF| 又可能会出现大小写问题，
% 遂采用汉字名称。由于 \pkg{luaotfload} 不支持汉字名称，故使用 Postscript 名字，
% 速度不受影响。
%    \begin{macrocode}
    \setCJKsansfont [ BoldFont = FZHei-B01 ]
      { \xetex_if_engine:TF { 方正细黑一_GBK } { FZXH1K--GBK1-0 } }
    \setCJKmonofont { FZFangSong-Z02 }
    \setCJKfamilyfont { zhsong } [ BoldFont = FZXiaoBiaoSong-B05 ] { FZShuSong-Z01 }
    \setCJKfamilyfont { zhhei }  { FZHei-B01 }
    \setCJKfamilyfont { zhkai }  { FZKai-Z03 }
    \setCJKfamilyfont { zhfs }   { FZFangSong-Z02 }
    \setCJKfamilyfont { zhli }   { FZLiShu-S01 }
    \setCJKfamilyfont { zhyou } [ BoldFont = FZZhunYuan-M02 ] { FZXiYuan-M01 }
  }
%    \end{macrocode}
%
%    \begin{macrocode}
%</founder>
%<*ubuntu>
%    \end{macrocode}
%
% \subsubsection{\pkg{ctex-fontset-ubuntu.def}}
%
% 以下根据 Ubuntu 12.04 的中文字体情况设置。CMap 不清楚应该是什么，指定为
% UniGB-UTF16-H 还是有警告：
% \begin{verbatim}
%   ** WARNING ** UCS-4 TrueType cmap table...
% \end{verbatim}
%    \begin{macrocode}
\pdftex_if_engine:TF
  {
    \bool_if:NTF \l_@@_zhmCJK_bool
      {
        \setCJKmainfont [ ItalicFont = ukai.ttc ] { uming.ttc }
        \setCJKsansfont { wqy-zenhei.ttc }
        \setCJKmonofont { uming.ttc }
        \setCJKfamilyfont { zhsong } { uming.ttc }
        \setCJKfamilyfont { zhhei }  { wqy-zenhei.ttc }
        \setCJKfamilyfont { zhkai }  { ukai.ttc }
      }
      {
        \bool_if:NTF \l_@@_zhmap_bool
          { \ctex_load_zhmap:n { zhubuntufonts } }
          { \ctex_fontset_error:n { ubuntu } }
      }
  }
  {
    \setCJKmainfont [ ItalicFont = AR~PL~UKai~CN ] { AR~PL~UMing~CN }
    \setCJKsansfont { WenQuanYi~Zen~Hei }
    \setCJKmonofont { AR~PL~UMing~CN }
    \setCJKfamilyfont { zhsong } { AR~PL~UMing~CN }
    \setCJKfamilyfont { zhhei }  { WenQuanYi~Zen~Hei }
    \setCJKfamilyfont { zhkai }  { AR~PL~UKai~CN }
  }
%    \end{macrocode}
%
%    \begin{macrocode}
%</ubuntu>
%    \end{macrocode}
%
% \subsubsection{中文字体命令}
%
%    \begin{macrocode}
\NewDocumentCommand \songti   { } { \CJKfamily { zhsong } }
\NewDocumentCommand \heiti    { } { \CJKfamily { zhhei } }
%<!ubuntu>\NewDocumentCommand \fangsong { } { \CJKfamily { zhfs } }
\NewDocumentCommand \kaishu   { } { \CJKfamily { zhkai } }
%<*windows|founder>
\NewDocumentCommand \lishu    { } { \CJKfamily { zhli } }
\NewDocumentCommand \youyuan  { } { \CJKfamily { zhyou } }
%</windows|founder>
%<windows>\NewDocumentCommand \yahei    { } { \CJKfamily { zhyahei } }
%    \end{macrocode}
%
%    \begin{macrocode}
%</fontset>
%<*zhmap>
%    \end{macrocode}
%
% \subsubsection{\pkg{zhmetrics} 的字体映射}
%
% 为了让这些文件通用于 \hologo{plainTeX} 和 \hologo{ConTeXt}，故不用
% \cs{ProvidesFile}。
%    \begin{macrocode}
%<windows>%% Windows Chinese font map loader for pdfTeX and DVIPDFMx
%<adobe>%% Adobe Chinese font map loader for DVIPDFMx only
%<fandol>%% Fandol Chinese font map loader for DVIPDFMx only
%<founder>%% Founder Chinese font map loader for pdfTeX and DVIPDFMx
%<ubuntu>%% Ubuntu Chinese font map loader for pdfTeX and DVIPDFMx
%%
\input ifpdf.sty

\ifpdf
%    \end{macrocode}
%
% \paragraph{\pkg{zhwinfonts.tex}}
%
%    \begin{macrocode}
%<*windows>
  \pdfmapline{=gbk@UGBK@     <simsun.ttc}
  \pdfmapline{=gbksong@UGBK@ <simsun.ttc}
  \pdfmapline{=gbkkai@UGBK@  <simkai.ttf}
  \pdfmapline{=gbkhei@UGBK@  <simhei.ttf}
  \pdfmapline{=gbkfs@UGBK@   <simfang.ttf}
  \pdfmapline{=gbkli@UGBK@   <simli.ttf}
  \pdfmapline{=gbkyou@UGBK@  <simyou.ttf}

  \pdfmapline{=cyberb@Unicode@  <simsun.ttc}
  \pdfmapline{=unisong@Unicode@ <simsun.ttc}
  \pdfmapline{=unikai@Unicode@  <simkai.ttf}
  \pdfmapline{=unihei@Unicode@  <simhei.ttf}
  \pdfmapline{=unifs@Unicode@   <simfang.ttf}
  \pdfmapline{=unili@Unicode@   <simli.ttf}
  \pdfmapline{=uniyou@Unicode@  <simyou.ttf}

  \pdfmapline{=gbksongsl@UGBK@ <simsun.ttc}
  \pdfmapline{=gbkkaisl@UGBK@  <simkai.ttf}
  \pdfmapline{=gbkheisl@UGBK@  <simhei.ttf}
  \pdfmapline{=gbkfssl@UGBK@   <simfang.ttf}
  \pdfmapline{=gbklisl@UGBK@   <simli.ttf}
  \pdfmapline{=gbkyousl@UGBK@  <simyou.ttf}

  \pdfmapline{=unisongsl@Unicode@ <simsun.ttc}
  \pdfmapline{=unikaisl@Unicode@  <simkai.ttf}
  \pdfmapline{=uniheisl@Unicode@  <simhei.ttf}
  \pdfmapline{=unifssl@Unicode@   <simfang.ttf}
  \pdfmapline{=unilisl@Unicode@   <simli.ttf}
  \pdfmapline{=uniyousl@Unicode@  <simyou.ttf}

\else
  \special{pdf:mapline gbk@UGBK@     unicode :0:simsun.ttc -v 50}
  \special{pdf:mapline gbksong@UGBK@ unicode :0:simsun.ttc -v 50}
  \special{pdf:mapline gbkkai@UGBK@  unicode simkai.ttf -v 70}
  \special{pdf:mapline gbkhei@UGBK@  unicode simhei.ttf -v 150}
  \special{pdf:mapline gbkfs@UGBK@   unicode simfang.ttf -v 50}
  \special{pdf:mapline gbkli@UGBK@   unicode simli.ttf -v 150}
  \special{pdf:mapline gbkyou@UGBK@  unicode simyou.ttf -v 60}

  \special{pdf:mapline cyberb@Unicode@  unicode :0:simsun.ttc -v 50}
  \special{pdf:mapline unisong@Unicode@ unicode :0:simsun.ttc -v 50}
  \special{pdf:mapline unikai@Unicode@  unicode simkai.ttf -v 70}
  \special{pdf:mapline unihei@Unicode@  unicode simhei.ttf -v 150}
  \special{pdf:mapline unifs@Unicode@   unicode simfang.ttf -v 50}
  \special{pdf:mapline unili@Unicode@   unicode simli.ttf -v 150}
  \special{pdf:mapline uniyou@Unicode@  unicode simyou.ttf -v 60}

  \special{pdf:mapline gbksongsl@UGBK@ unicode :0:simsun.ttc -s .167 -v 50}
  \special{pdf:mapline gbkkaisl@UGBK@  unicode simkai.ttf -s .167 -v 70}
  \special{pdf:mapline gbkheisl@UGBK@  unicode simhei.ttf -s .167 -v 150}
  \special{pdf:mapline gbkfssl@UGBK@   unicode simfang.ttf -s .167 -v 50}
  \special{pdf:mapline gbklisl@UGBK@   unicode simli.ttf -s .167 -v 150}
  \special{pdf:mapline gbkyousl@UGBK@  unicode simyou.ttf -s .167 -v 60}

  \special{pdf:mapline unisongsl@Unicode@ unicode :0:simsun.ttc -s .167 -v 50}
  \special{pdf:mapline unikaisl@Unicode@  unicode simkai.ttf -s .167 -v 70}
  \special{pdf:mapline uniheisl@Unicode@  unicode simhei.ttf -s .167 -v 150}
  \special{pdf:mapline unifssl@Unicode@   unicode simfang.ttf -s .167 -v 50}
  \special{pdf:mapline unilisl@Unicode@   unicode simli.ttf -s .167 -v 150}
  \special{pdf:mapline uniyousl@Unicode@  unicode simyou.ttf -s .167 -v 60}

%</windows>
%    \end{macrocode}
%
% \paragraph{\pkg{zhadobefonts.tex}}
%
%    \begin{macrocode}
%<*adobe>
%% pdfTeX does not support OTF fonts

\else
  \special{pdf:mapline gbk@UGBK@     UniGB-UTF16-H AdobeSongStd-Light.otf}
  \special{pdf:mapline gbksong@UGBK@ UniGB-UTF16-H AdobeSongStd-Light.otf}
  \special{pdf:mapline gbkkai@UGBK@  UniGB-UTF16-H AdobeKaitiStd-Regular.otf}
  \special{pdf:mapline gbkhei@UGBK@  UniGB-UTF16-H AdobeHeitiStd-Regular.otf}
  \special{pdf:mapline gbkfs@UGBK@   UniGB-UTF16-H AdobeFangsongStd-Regular.otf}

  \special{pdf:mapline cyberb@Unicode@  UniGB-UTF16-H AdobeSongStd-Light.otf}
  \special{pdf:mapline unisong@Unicode@ UniGB-UTF16-H AdobeSongStd-Light.otf}
  \special{pdf:mapline unikai@Unicode@  UniGB-UTF16-H AdobeKaitiStd-Regular.otf}
  \special{pdf:mapline unihei@Unicode@  UniGB-UTF16-H AdobeHeitiStd-Regular.otf}
  \special{pdf:mapline unifs@Unicode@   UniGB-UTF16-H AdobeFangsongStd-Regular.otf}

  \special{pdf:mapline gbksongsl@UGBK@ UniGB-UTF16-H AdobeSongStd-Light.otf -s .167}
  \special{pdf:mapline gbkkaisl@UGBK@  UniGB-UTF16-H AdobeKaitiStd-Regular.otf -s .167}
  \special{pdf:mapline gbkheisl@UGBK@  UniGB-UTF16-H AdobeHeitiStd-Regular.otf -s .167}
  \special{pdf:mapline gbkfssl@UGBK@   UniGB-UTF16-H AdobeFangsongStd-Regular.otf -s .167}

  \special{pdf:mapline unisongsl@Unicode@ UniGB-UTF16-H AdobeSongStd-Light.otf -s .167}
  \special{pdf:mapline unikaisl@Unicode@  UniGB-UTF16-H AdobeKaitiStd-Regular.otf -s .167}
  \special{pdf:mapline uniheisl@Unicode@  UniGB-UTF16-H AdobeHeitiStd-Regular.otf -s .167}
  \special{pdf:mapline unifssl@Unicode@   UniGB-UTF16-H AdobeFangsongStd-Regular.otf -s .167}

%</adobe>
%    \end{macrocode}
%
% \paragraph{\pkg{zhfandolfonts.tex}}
%
%    \begin{macrocode}
%<*fandol>
%% pdfTeX does not support OTF fonts

\else
  \special{pdf:mapline gbk@UGBK@     UniGB-UTF16-H FandolSong-Regular.otf}
  \special{pdf:mapline gbksong@UGBK@ UniGB-UTF16-H FandolSong-Regular.otf}
  \special{pdf:mapline gbkkai@UGBK@  UniGB-UTF16-H FandolKai-Regular.otf}
  \special{pdf:mapline gbkhei@UGBK@  UniGB-UTF16-H FandolHei-Regular.otf}
  \special{pdf:mapline gbkfs@UGBK@   UniGB-UTF16-H FandolFang-Regular.otf}

  \special{pdf:mapline cyberb@Unicode@  UniGB-UTF16-H FandolSong-Regular.otf}
  \special{pdf:mapline unisong@Unicode@ UniGB-UTF16-H FandolSong-Regular.otf}
  \special{pdf:mapline unikai@Unicode@  UniGB-UTF16-H FandolKai-Regular.otf}
  \special{pdf:mapline unihei@Unicode@  UniGB-UTF16-H FandolHei-Regular.otf}
  \special{pdf:mapline unifs@Unicode@   UniGB-UTF16-H FandolFang-Regular.otf}

  \special{pdf:mapline gbksongsl@UGBK@ UniGB-UTF16-H FandolSong-Regular.otf -s .167}
  \special{pdf:mapline gbkkaisl@UGBK@  UniGB-UTF16-H FandolKai-Regular.otf -s .167}
  \special{pdf:mapline gbkheisl@UGBK@  UniGB-UTF16-H FandolHei-Regular.otf -s .167}
  \special{pdf:mapline gbkfssl@UGBK@   UniGB-UTF16-H FandolFang-Regular.otf -s .167}

  \special{pdf:mapline unisongsl@Unicode@ UniGB-UTF16-H FandolSong-Regular.otf -s .167}
  \special{pdf:mapline unikaisl@Unicode@  UniGB-UTF16-H FandolKai-Regular.otf -s .167}
  \special{pdf:mapline uniheisl@Unicode@  UniGB-UTF16-H FandolHei-Regular.otf -s .167}
  \special{pdf:mapline unifssl@Unicode@   UniGB-UTF16-H FandolFang-Regular.otf -s .167}

%</fandol>
%    \end{macrocode}
%
% \paragraph{\pkg{zhfounderfonts.tex}}
%
%    \begin{macrocode}
%<*founder>
  \pdfmapline{=gbk@UGBK@     <FZSSK.TTF}
  \pdfmapline{=gbksong@UGBK@ <FZSSK.TTF}
  \pdfmapline{=gbkkai@UGBK@  <FZKTK.TTF}
  \pdfmapline{=gbkhei@UGBK@  <FZHTK.TTF}
  \pdfmapline{=gbkfs@UGBK@   <FZFSK.TTF}
  \pdfmapline{=gbkli@UGBK@   <FZLSK.TTF}
  \pdfmapline{=gbkyou@UGBK@  <FZY1K.TTF}

  \pdfmapline{=cyberb@Unicode@  <FZSSK.TTF}
  \pdfmapline{=unisong@Unicode@ <FZSSK.TTF}
  \pdfmapline{=unikai@Unicode@  <FZKTK.TTF}
  \pdfmapline{=unihei@Unicode@  <FZHTK.TTF}
  \pdfmapline{=unifs@Unicode@   <FZFSK.TTF}
  \pdfmapline{=unili@Unicode@   <FZLSK.TTF}
  \pdfmapline{=uniyou@Unicode@  <FZY1K.TTF}

  \pdfmapline{=gbksongsl@UGBK@ <FZSSK.TTF}
  \pdfmapline{=gbkkaisl@UGBK@  <FZKTK.TTF}
  \pdfmapline{=gbkheisl@UGBK@  <FZHTK.TTF}
  \pdfmapline{=gbkfssl@UGBK@   <FZFSK.TTF}
  \pdfmapline{=gbklisl@UGBK@   <FZLSK.TTF}
  \pdfmapline{=gbkyousl@UGBK@  <FZY1K.TTF}

  \pdfmapline{=unisongsl@Unicode@ <FZSSK.TTF}
  \pdfmapline{=unikaisl@Unicode@  <FZKTK.TTF}
  \pdfmapline{=uniheisl@Unicode@  <FZHTK.TTF}
  \pdfmapline{=unifssl@Unicode@   <FZFSK.TTF}
  \pdfmapline{=unilisl@Unicode@   <FZLSK.TTF}
  \pdfmapline{=uniyousl@Unicode@  <FZY1K.TTF}

\else
  \special{pdf:mapline gbk@UGBK@     unicode FZSSK.TTF}
  \special{pdf:mapline gbksong@UGBK@ unicode FZSSK.TTF}
  \special{pdf:mapline gbkkai@UGBK@  unicode FZKTK.TTF}
  \special{pdf:mapline gbkhei@UGBK@  unicode FZHTK.TTF}
  \special{pdf:mapline gbkfs@UGBK@   unicode FZFSK.TTF}
  \special{pdf:mapline gbkli@UGBK@   unicode FZLSK.TTF}
  \special{pdf:mapline gbkyou@UGBK@  unicode FZY1K.TTF}

  \special{pdf:mapline cyberb@Unicode@  unicode FZSSK.TTF}
  \special{pdf:mapline unisong@Unicode@ unicode FZSSK.TTF}
  \special{pdf:mapline unikai@Unicode@  unicode FZKTK.TTF}
  \special{pdf:mapline unihei@Unicode@  unicode FZHTK.TTF}
  \special{pdf:mapline unifs@Unicode@   unicode FZFSK.TTF}
  \special{pdf:mapline unili@Unicode@   unicode FZLSK.TTF}
  \special{pdf:mapline uniyou@Unicode@  unicode FZY1K.TTF}

  \special{pdf:mapline gbksongsl@UGBK@ unicode FZSSK.TTF -s .167}
  \special{pdf:mapline gbkkaisl@UGBK@  unicode FZKTK.TTF -s .167}
  \special{pdf:mapline gbkheisl@UGBK@  unicode FZHTK.TTF -s .167}
  \special{pdf:mapline gbkfssl@UGBK@   unicode FZFSK.TTF -s .167}
  \special{pdf:mapline gbklisl@UGBK@   unicode FZLSK.TTF -s .167}
  \special{pdf:mapline gbkyousl@UGBK@  unicode FZY1K.TTF -s .167}

  \special{pdf:mapline unisongsl@Unicode@ unicode FZSSK.TTF -s .167}
  \special{pdf:mapline unikaisl@Unicode@  unicode FZKTK.TTF -s .167}
  \special{pdf:mapline uniheisl@Unicode@  unicode FZHTK.TTF -s .167}
  \special{pdf:mapline unifssl@Unicode@   unicode FZFSK.TTF -s .167}
  \special{pdf:mapline unilisl@Unicode@   unicode FZLSK.TTF -s .167}
  \special{pdf:mapline uniyousl@Unicode@  unicode FZY1K.TTF -s .167}

%</founder>
%    \end{macrocode}
%
% \paragraph{\pkg{zhubuntufonts.tex}}
%
%    \begin{macrocode}
%<*ubuntu>
  \pdfmapline{=gbk@UGBK@     <uming.ttc}
  \pdfmapline{=gbksong@UGBK@ <uming.ttc}
  \pdfmapline{=gbkkai@UGBK@  <ukai.ttc}
  \pdfmapline{=gbkhei@UGBK@  <wqy-zenhei.ttc}
  \pdfmapline{=gbkfs@UGBK@   <uming.ttc}
  \pdfmapline{=gbkyou@UGBK@  <wqy-zenhei.ttc}

  \pdfmapline{=cyberb@Unicode@  <uming.ttc}
  \pdfmapline{=unisong@Unicode@ <uming.ttc}
  \pdfmapline{=unikai@Unicode@  <ukai.ttc}
  \pdfmapline{=unihei@Unicode@  <wqy-zenhei.ttc}
  \pdfmapline{=unifs@Unicode@   <uming.ttc}
  \pdfmapline{=uniyou@Unicode@  <wqy-zenhei.ttc}

  \pdfmapline{=gbksongsl@UGBK@ <uming.ttc}
  \pdfmapline{=gbkkaisl@UGBK@  <ukai.ttc}
  \pdfmapline{=gbkheisl@UGBK@  <wqy-zenhei.ttc}
  \pdfmapline{=gbkfssl@UGBK@   <uming.ttc}
  \pdfmapline{=gbkyousl@UGBK@  <wqy-zenhei.ttc}

  \pdfmapline{=unisongsl@Unicode@ <uming.ttc}
  \pdfmapline{=unikaisl@Unicode@  <ukai.ttc}
  \pdfmapline{=uniheisl@Unicode@  <wqy-zenhei.ttc}
  \pdfmapline{=unifssl@Unicode@   <uming.ttc}
  \pdfmapline{=uniyousl@Unicode@  <wqy-zenhei.ttc}

\else
  \special{pdf:mapline gbk@UGBK@     unicode :0:uming.ttc}
  \special{pdf:mapline gbksong@UGBK@ unicode :0:uming.ttc}
  \special{pdf:mapline gbkkai@UGBK@  unicode :0:ukai.ttc}
  \special{pdf:mapline gbkhei@UGBK@  unicode :0:wqy-zenhei.ttc}
  \special{pdf:mapline gbkfs@UGBK@   unicode :0:uming.ttc}
  \special{pdf:mapline gbkyou@UGBK@  unicode :0:wqy-zenhei.ttc}

  \special{pdf:mapline cyberb@Unicode@  unicode :0:uming.ttc}
  \special{pdf:mapline unisong@Unicode@ unicode :0:uming.ttc}
  \special{pdf:mapline unikai@Unicode@  unicode :0:ukai.ttc}
  \special{pdf:mapline unihei@Unicode@  unicode :0:wqy-zenhei.ttc}
  \special{pdf:mapline unifs@Unicode@   unicode :0:uming.ttc}
  \special{pdf:mapline uniyou@Unicode@  unicode :0:wqy-zenhei.ttc}

  \special{pdf:mapline gbksongsl@UGBK@ unicode :0:uming.ttc -s .167}
  \special{pdf:mapline gbkkaisl@UGBK@  unicode :0:ukai.ttc -s .167}
  \special{pdf:mapline gbkheisl@UGBK@  unicode :0:wqy-zenhei.ttc -s .167}
  \special{pdf:mapline gbkfssl@UGBK@   unicode :0:uming.ttc -s .167}
  \special{pdf:mapline gbkyousl@UGBK@  unicode :0:wqy-zenhei.ttc -s .167}

  \special{pdf:mapline unisongsl@Unicode@ unicode :0:uming.ttc -s .167}
  \special{pdf:mapline unikaisl@Unicode@  unicode :0:ukai.ttc -s .167}
  \special{pdf:mapline uniheisl@Unicode@  unicode :0:wqy-zenhei.ttc -s .167}
  \special{pdf:mapline unifssl@Unicode@   unicode :0:uming.ttc -s .167}
  \special{pdf:mapline uniyousl@Unicode@  unicode :0:wqy-zenhei.ttc -s .167}

%</ubuntu>
%    \end{macrocode}
%
%    \begin{macrocode}
\fi
%</zhmap>
%    \end{macrocode}
%
% \end{implementation}
%
% \Finale
%
\endinput
